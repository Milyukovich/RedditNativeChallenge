{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/artur/elbrus/phase-3/RedditNativeChallenge/client/src/components/OnePostPage/OnePostPage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Card, Button, Input } from \"react-native-elements\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createComMain } from \"../../redux/actions/comments\";\nimport { addLike, addDislike, getContent } from \"../../redux/actions/content\";\nexport default function Post(_ref) {\n  var _this = this;\n\n  var route = _ref.route;\n  var dispatch = useDispatch();\n  var el = route.params.el;\n  console.log(el);\n  var mainId = el._id;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      comment = _useState2[0],\n      setComment = _useState2[1];\n\n  var posts = useSelector(function (state) {\n    return state.content;\n  });\n  var mainPost = posts.filter(function (post) {\n    return post._id == mainId;\n  })[0];\n  var comments = mainPost.comments;\n  var likes = mainPost.likes;\n  var userId = useSelector(function (state) {\n    return state.user.id;\n  });\n\n  var createComment = function createComment() {\n    if (comment.trim().length > 5) {\n      var post = {\n        text: comment,\n        autorId: userId,\n        postId: el._id\n      };\n      dispatch(createComMain(post));\n    }\n  };\n\n  var like = function like(userId, postId) {\n    dispatch(addLike(userId, postId));\n  };\n\n  var dislike = function dislike(userId, postId) {\n    dispatch(addDislike(userId, postId));\n  };\n\n  useEffect(function () {\n    dispatch(getContent());\n  }, [dispatch]);\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, mainPost.title), React.createElement(Card.Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), React.createElement(Card.Image, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, mainPost.description)), React.createElement(View, {\n    style: styles.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon.Button, {\n    name: \"thumbs-up\",\n    \"thumbs-down\": true,\n    backgroundColor: \"gray\",\n    onPress: function onPress() {\n      return like(userId, mainPost._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, likes.length), React.createElement(Icon.Button, {\n    name: \"thumbs-down\",\n    backgroundColor: \"gray\",\n    onPress: function onPress() {\n      return dislike(userId, mainPost._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, mainPost.dislikes.length), React.createElement(Icon.Button, {\n    name: \"comments\",\n    backgroundColor: \"gray\",\n    onPress: function onPress() {\n      return console.log(\"comment\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, mainPost.comments.length)))), React.createElement(Text, {\n    style: {\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    data: comments,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Card, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, React.createElement(Card.Image, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          marginBottom: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }\n      }, item.text)));\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), React.createElement(Input, {\n    value: comment,\n    onChangeText: function onChangeText(text) {\n      return setComment(text);\n    },\n    placeholder: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u044F\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      createComment();\n    },\n    title: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  icons: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/home/artur/elbrus/phase-3/RedditNativeChallenge/client/src/components/OnePostPage/OnePostPage.js"],"names":["React","useEffect","useState","Card","Button","Input","Icon","useDispatch","useSelector","createComMain","addLike","addDislike","getContent","Post","route","dispatch","el","params","console","log","mainId","_id","comment","setComment","posts","state","content","mainPost","filter","post","comments","likes","userId","user","id","createComment","trim","length","text","autorId","postId","like","dislike","title","marginBottom","description","styles","icons","dislikes","alignItems","justifyContent","item","StyleSheet","create","flex","flexDirection"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Card, Button, Input } from \"react-native-elements\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport { StyleSheet, View, Text, FlatList } from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createComMain } from \"../../redux/actions/comments\";\nimport { addLike, addDislike, getContent } from \"../../redux/actions/content\";\n\nexport default function Post({ route }) {\n  const dispatch = useDispatch();\n  const el = route.params.el;\n  console.log(el);\n  const mainId = el._id;\n  const [comment, setComment] = useState();\n  const posts = useSelector(state => state.content);\n  const mainPost = posts.filter(post => post._id == mainId)[0];\n\n  const comments = mainPost.comments;\n  const likes = mainPost.likes;\n  const userId = useSelector(state => state.user.id);\n  const createComment = () => {\n    if (comment.trim().length > 5) {\n      const post = { text: comment, autorId: userId, postId: el._id };\n      dispatch(createComMain(post));\n    }\n  };\n\n  const like = (userId, postId) => {\n    dispatch(addLike(userId, postId));\n  };\n  const dislike = (userId, postId) => {\n    dispatch(addDislike(userId, postId));\n  };\n\n  // const posts = useSelector(state => state.content);\n\n  useEffect(() => {\n    dispatch(getContent());\n  }, [dispatch]);\n\n  return (\n    <>\n      <View>\n        <Card>\n          <Card.Title>{mainPost.title}</Card.Title>\n          <Card.Divider />\n          <Card.Image>\n            <Text style={{ marginBottom: 10 }}>{mainPost.description}</Text>\n          </Card.Image>\n          <View style={styles.icons}>\n            <Icon.Button\n              name=\"thumbs-up\"\n              thumbs-down\n              backgroundColor=\"gray\"\n              onPress={() => like(userId, mainPost._id)}\n            >\n              {likes.length}\n            </Icon.Button>\n            <Icon.Button\n              name=\"thumbs-down\"\n              backgroundColor=\"gray\"\n              onPress={() => dislike(userId, mainPost._id)}\n            >\n              {mainPost.dislikes.length}\n            </Icon.Button>\n            <Icon.Button\n              name=\"comments\"\n              backgroundColor=\"gray\"\n              onPress={() => console.log(\"comment\")}\n            >\n              {mainPost.comments.length}\n            </Icon.Button>\n          </View>\n        </Card>\n      </View>\n      <Text style={{ alignItems: \"center\", justifyContent: \"center\" }}></Text>\n      <FlatList\n        data={comments}\n        renderItem={({ item }) => (\n          <Card>\n            <Card.Image /*source={\"ASd\"}*/>\n              <Text style={{ marginBottom: 10 }}>{item.text}</Text>\n            </Card.Image>\n          </Card>\n        )}\n        keyExtractor={item => item.id}\n      />\n\n      <Input\n        value={comment}\n        onChangeText={text => setComment(text)}\n        placeholder=\"Текст комментария\"\n      />\n      <Button\n        onPress={() => {\n          createComment();\n        }}\n        title=\"Отправить комментарий\"\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icons: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}