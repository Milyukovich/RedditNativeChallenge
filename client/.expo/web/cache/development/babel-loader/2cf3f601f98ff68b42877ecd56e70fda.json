{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { rootReducer } from \"./reduce/rootReducer\";\nimport thunk from \"redux-thunk\";\nimport getInitState from \"./initialState\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nvar store = createStore(rootReducer, getInitState(), composeWithDevTools(applyMiddleware(thunk)));\n\nvar saveUserInStorage = function saveUserInStorage() {\n  var _store$getState, user;\n\n  return _regeneratorRuntime.async(function saveUserInStorage$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _store$getState = store.getState(), user = _store$getState.user;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"userInfo\", user));\n\n        case 4:\n          _context.next = 8;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nvar getUserInStorage = function getUserInStorage() {\n  return AsyncStorage.getItem(\"userInfo\").then(function (user) {\n    return console.log(\"USER IN ASTORAGE\", user);\n  });\n};\n\nstore.subscribe(function () {\n  saveUserInStorage();\n\n  var _store$getState2 = store.getState(),\n      user = _store$getState2.user;\n\n  console.log(\"in Subscribe\", user);\n  console.log(getUserInStorage());\n});\nexport default store;","map":{"version":3,"sources":["/home/artur/elbrus/phase-3/RedditNativeChallenge/client/src/redux/store.js"],"names":["rootReducer","thunk","getInitState","applyMiddleware","createStore","composeWithDevTools","AsyncStorage","store","saveUserInStorage","getState","user","setItem","getUserInStorage","getItem","then","console","log","subscribe"],"mappings":";AAAA,SAASA,WAAT;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,YAAP;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,IAAMC,KAAK,GAAGH,WAAW,CACvBJ,WADuB,EAEvBE,YAAY,EAFW,EAGvBG,mBAAmB,CAACF,eAAe,CAACF,KAAD,CAAhB,CAHI,CAAzB;;AAMA,IAAMO,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAELD,KAAK,CAACE,QAAN,EAFK,EAEdC,IAFc,mBAEdA,IAFc;AAAA;AAAA,2CAGhBJ,YAAY,CAACK,OAAb,CAAqB,UAArB,EAAiCD,IAAjC,CAHgB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AASA,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SACvBN,YAAY,CAACO,OAAb,CAAqB,UAArB,EAAiCC,IAAjC,CAAsC,UAAAJ,IAAI;AAAA,WACxCK,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCN,IAAhC,CADwC;AAAA,GAA1C,CADuB;AAAA,CAAzB;;AAKAH,KAAK,CAACU,SAAN,CAAgB,YAAM;AACpBT,EAAAA,iBAAiB;;AACjB,yBAAiBD,KAAK,CAACE,QAAN,EAAjB;AAAA,MAAQC,IAAR,oBAAQA,IAAR;;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BN,IAA5B;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,gBAAgB,EAA5B;AAED,CAND;AAWA,eAAeL,KAAf","sourcesContent":["import { rootReducer } from \"./reduce/rootReducer\";\nimport thunk from \"redux-thunk\";\nimport getInitState from \"./initialState\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst store = createStore(\n  rootReducer,\n  getInitState(),\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nconst saveUserInStorage = async () => {\n  try {\n    const { user } = store.getState();\n    await AsyncStorage.setItem(\"userInfo\", user);\n  } catch (error) {\n    // console.log(error);\n  }\n};\n\nconst getUserInStorage = () =>\n  AsyncStorage.getItem(\"userInfo\").then(user =>\n    console.log(\"USER IN ASTORAGE\", user)\n  );\n// console.log(\"888\", getUserInStorage());\nstore.subscribe(() => {\n  saveUserInStorage();\n  const { user } = store.getState();\n  console.log(\"in Subscribe\", user);\n  console.log(getUserInStorage());\n  // window.localStorage.setItem(\"redux\", JSON.stringify(store.getState()));\n});\n\n// console.log(\"STORE\", store);\n\n// console.log(getUserInStorage());\nexport default store;\n"]},"metadata":{},"sourceType":"module"}