{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { GET_CONTENT_START } from \"../types/\";\n\nvar getContentStart = function getContentStart(payload) {\n  return {\n    type: GET_CONTENT_START,\n    payload: payload\n  };\n};\n\nexport var getContent = function getContent() {\n  return function _callee(dispatch) {\n    var response, game;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"http://localhost:8080/post\"));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            game = _context.sent;\n            dispatch(getContentStart(game));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["/home/roman/elbruss/phase 3/finalproject/RedditNativeChallenge/client/src/redux/actions/content.js"],"names":["GET_CONTENT_START","getContentStart","payload","type","getContent","dispatch","fetch","response","json","game"],"mappings":";AAAA,SAASA,iBAAT;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,OAAO;AAAA,SAAK;AAAEC,IAAAA,IAAI,EAAEH,iBAAR;AAA2BE,IAAAA,OAAO,EAAPA;AAA3B,GAAL;AAAA,CAA/B;;AACA,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACPC,KAAK,CAAC,4BAAD,CADE;;AAAA;AACxBC,YAAAA,QADwB;AAAA;AAAA,6CAEXA,QAAQ,CAACC,IAAT,EAFW;;AAAA;AAExBC,YAAAA,IAFwB;AAI9BJ,YAAAA,QAAQ,CAACJ,eAAe,CAACQ,IAAD,CAAhB,CAAR;;AAJ8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAN;AAAA,CAAnB","sourcesContent":["import { GET_CONTENT_START } from \"../types/\";\n\nconst getContentStart = payload => ({ type: GET_CONTENT_START, payload });\nexport const getContent = () => async dispatch => {\n  const response = await fetch(\"http://localhost:8080/post\");\n  const game = await response.json();\n\n  dispatch(getContentStart(game));\n};\n"]},"metadata":{},"sourceType":"module"}