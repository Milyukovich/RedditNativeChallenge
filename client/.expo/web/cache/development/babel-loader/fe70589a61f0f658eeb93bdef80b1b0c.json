{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/elbrus/phase 3/RedditNativeChallenge/client/src/components/Multer/Multer.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport * as ImagePicker from \"expo-image-picker\";\nexport default function Multer(_ref) {\n  var setImage = _ref.setImage;\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== \"web\")) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== \"granted\") {\n                alert(\"Sorry, we need camera roll permissions to make this work!\");\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: pickImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Pick an image from camera roll\"));\n}\nvar styles = StyleSheet.create({\n  text: {\n    color: \"#f9fafb\",\n    margin: 3,\n    fontSize: 20\n  },\n  button: {\n    margin: 10,\n    marginHorizontal: 4,\n    backgroundColor: \"#475569\",\n    borderWidth: 2,\n    borderRadius: 5,\n    borderStyle: \"solid\",\n    borderColor: \"#61dafb\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/user/Documents/elbrus/phase 3/RedditNativeChallenge/client/src/components/Multer/Multer.js"],"names":["React","useEffect","ImagePicker","Multer","setImage","Platform","OS","requestMediaLibraryPermissionsAsync","status","alert","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","uri","styles","button","text","StyleSheet","create","color","margin","fontSize","marginHorizontal","backgroundColor","borderWidth","borderRadius","borderStyle","borderColor","alignItems","justifyContent"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AAEA,eAAe,SAASC,MAAT,OAA8B;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAC3CH,EAAAA,SAAS,CAAC,YAAM;AACd,KAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBACKI,QAAQ,CAACC,EAAT,KAAgB,KADrB;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAGWJ,WAAW,CAACK,mCAAZ,EAHX;;AAAA;AAAA;AAEWC,cAAAA,MAFX,yBAEWA,MAFX;;AAIG,kBAAIA,MAAM,KAAK,SAAf,EAA0B;AACxBC,gBAAAA,KAAK,CAAC,2DAAD,CAAL;AACD;;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AASD,GAVQ,EAUN,EAVM,CAAT;;AAYA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACGR,WAAW,CAACS,uBAAZ,CAAoC;AACrDC,cAAAA,UAAU,EAAEV,WAAW,CAACW,gBAAZ,CAA6BC,GADY;AAErDC,cAAAA,aAAa,EAAE,IAFsC;AAGrDC,cAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAH6C;AAIrDC,cAAAA,OAAO,EAAE;AAJ4C,aAApC,CADH;;AAAA;AACZC,YAAAA,MADY;;AAQhB,gBAAI,CAACA,MAAM,CAACC,SAAZ,EAAuB;AACrBf,cAAAA,QAAQ,CAACc,MAAM,CAACE,GAAR,CAAR;AACD;;AAVe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAaA,SACE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEC,MAAM,CAACC,MAAhC;AAAwC,IAAA,OAAO,EAAEZ,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEW,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,CADF;AAKD;AACD,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,IAAI,EAAE;AACJG,IAAAA,KAAK,EAAE,SADH;AAEJC,IAAAA,MAAM,EAAE,CAFJ;AAGJC,IAAAA,QAAQ,EAAE;AAHN,GADyB;AAO/BN,EAAAA,MAAM,EAAE;AACNK,IAAAA,MAAM,EAAE,EADF;AAENE,IAAAA,gBAAgB,EAAE,CAFZ;AAGNC,IAAAA,eAAe,EAAE,SAHX;AAINC,IAAAA,WAAW,EAAE,CAJP;AAKNC,IAAAA,YAAY,EAAE,CALR;AAMNC,IAAAA,WAAW,EAAE,OANP;AAONC,IAAAA,WAAW,EAAE,SAPP;AAQNC,IAAAA,UAAU,EAAE,QARN;AASNC,IAAAA,cAAc,EAAE;AATV;AAPuB,CAAlB,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { StyleSheet, TouchableOpacity, Text, Platform } from \"react-native\";\nimport * as ImagePicker from \"expo-image-picker\";\n\nexport default function Multer({ setImage }) {\n  useEffect(() => {\n    (async () => {\n      if (Platform.OS !== \"web\") {\n        const { status } =\n          await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (status !== \"granted\") {\n          alert(\"Sorry, we need camera roll permissions to make this work!\");\n        }\n      }\n    })();\n  }, []);\n\n  const pickImage = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    if (!result.cancelled) {\n      setImage(result.uri);\n    }\n  };\n\n  return (\n    <TouchableOpacity style={styles.button} onPress={pickImage}>\n      <Text style={styles.text}>Pick an image from camera roll</Text>\n    </TouchableOpacity>\n  );\n}\nconst styles = StyleSheet.create({\n  text: {\n    color: \"#f9fafb\",\n    margin: 3,\n    fontSize: 20,\n  },\n\n  button: {\n    margin: 10,\n    marginHorizontal: 4,\n    backgroundColor: \"#475569\",\n    borderWidth: 2,\n    borderRadius: 5,\n    borderStyle: \"solid\",\n    borderColor: \"#61dafb\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}