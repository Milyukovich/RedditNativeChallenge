{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/roman/elbruss/phase 3/finalproject/RedditNativeChallenge/client/src/components/OnePostPage/OnePostPage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Card, Button, Input } from \"react-native-elements\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createComMain, createComToCom } from \"../../redux/actions/comments\";\nimport { addLike } from \"../../redux/actions/content\";\nexport default function Post(_ref) {\n  var _this = this;\n\n  var route = _ref.route;\n  var dispatch = useDispatch();\n  var el = route.params.el;\n  var mainId = el._id;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      comment = _useState2[0],\n      setComment = _useState2[1];\n\n  var posts = useSelector(function (state) {\n    return state.content;\n  });\n  var mainPost = posts.filter(function (post) {\n    return post._id == mainId;\n  })[0];\n  var comments = mainPost.comments;\n  console.log(comments.comments);\n  var userId = useSelector(function (state) {\n    return state.user.userInfo.id;\n  });\n\n  var createComment = function createComment() {\n    if (comment.trim().length > 5) {\n      var post = {\n        text: comment,\n        autorId: userId,\n        postId: el._id\n      };\n      dispatch(createComMain(post));\n    }\n  };\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      commentToComment = _useState4[0],\n      setCommentToComment = _useState4[1];\n\n  var createCommentToComment = function createCommentToComment(commentId) {\n    if (commentToComment.trim().length > 5) {\n      var _comment = {\n        text: commentToComment,\n        autorId: userId,\n        commentId: commentId,\n        mainId: mainId\n      };\n      dispatch(createComToCom(_comment));\n    }\n  };\n\n  var like = function like(userId, postId) {\n    console.log(userId, postId);\n    dispatch(addLike(userId, postId));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, el.title), React.createElement(Card.Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), React.createElement(Card.Image, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, el.description)), React.createElement(View, {\n    style: styles.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon.Button, {\n    name: \"thumbs-up\",\n    backgroundColor: \"gray\",\n    onPress: function onPress() {\n      return like(userId, el._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, el.likes.length), React.createElement(Icon.Button, {\n    name: \"comments\",\n    backgroundColor: \"gray\",\n    onPress: function onPress() {\n      return console.log(\"comment\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, el.likes.length)))), React.createElement(Text, {\n    style: {\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    data: comments,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Card, {\n        style: {\n          height: 30\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }, React.createElement(Card.Image, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          marginBottom: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }\n      }, item.text)), React.createElement(Text, {\n        style: {\n          marginBottom: 1\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, item.date), React.createElement(FlatList, {\n        data: comments.comments,\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item;\n          return React.createElement(Text, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 41\n            }\n          }, item.text);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }), React.createElement(Input, {\n        value: commentToComment,\n        onChangeText: function onChangeText(text) {\n          return setCommentToComment(text);\n        },\n        placeholder: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u044F\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        onPress: function onPress() {\n          createCommentToComment(item._id);\n        },\n        title: \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0438\\u0442\\u044C \\u043D\\u0430 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }));\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), React.createElement(Input, {\n    value: comment,\n    onChangeText: function onChangeText(text) {\n      return setComment(text);\n    },\n    placeholder: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u044F\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      createComment();\n    },\n    title: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  icons: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/home/roman/elbruss/phase 3/finalproject/RedditNativeChallenge/client/src/components/OnePostPage/OnePostPage.js"],"names":["React","useEffect","useState","Card","Button","Input","Icon","useDispatch","useSelector","createComMain","createComToCom","addLike","Post","route","dispatch","el","params","mainId","_id","comment","setComment","posts","state","content","mainPost","filter","post","comments","console","log","userId","user","userInfo","id","createComment","trim","length","text","autorId","postId","commentToComment","setCommentToComment","createCommentToComment","commentId","like","title","marginBottom","description","styles","icons","likes","alignItems","justifyContent","item","height","date","StyleSheet","create","flex","flexDirection"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Card, Button, Input } from \"react-native-elements\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport { StyleSheet, View, Text, FlatList } from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createComMain, createComToCom } from \"../../redux/actions/comments\";\nimport { addLike } from \"../../redux/actions/content\";\n\nexport default function Post({ route }) {\n  const dispatch = useDispatch();\n  const el = route.params.el;\n  const mainId = el._id; // НОРМАЛЬНО!!!!\n  const [comment, setComment] = useState();\n\n  const posts = useSelector(state => state.content);\n  const mainPost = posts.filter(post => post._id == mainId)[0];\n  const comments = mainPost.comments;\n  console.log(comments.comments);\n  const userId = useSelector(state => state.user.userInfo.id);\n  const createComment = () => {\n    if (comment.trim().length > 5) {\n      const post = { text: comment, autorId: userId, postId: el._id };\n      dispatch(createComMain(post));\n    }\n  };\n  const [commentToComment, setCommentToComment] = useState();\n  const createCommentToComment = commentId => {\n    if (commentToComment.trim().length > 5) {\n      const comment = {\n        text: commentToComment,\n        autorId: userId,\n        commentId,\n        mainId: mainId,\n      };\n      dispatch(createComToCom(comment));\n    }\n  };\n\n  const like = (userId, postId) => {\n    console.log(userId, postId);\n    dispatch(addLike(userId, postId));\n  };\n\n  return (\n    <>\n      <View>\n        <Card>\n          <Card.Title>{el.title}</Card.Title>\n          <Card.Divider />\n          <Card.Image>\n            <Text style={{ marginBottom: 10 }}>{el.description}</Text>\n          </Card.Image>\n          <View style={styles.icons}>\n            <Icon.Button\n              name=\"thumbs-up\"\n              backgroundColor=\"gray\"\n              onPress={() => like(userId, el._id)}\n            >\n              {el.likes.length}\n            </Icon.Button>\n            <Icon.Button\n              name=\"comments\"\n              backgroundColor=\"gray\"\n              onPress={() => console.log(\"comment\")}\n            >\n              {el.likes.length}\n            </Icon.Button>\n          </View>\n        </Card>\n      </View>\n      <Text style={{ alignItems: \"center\", justifyContent: \"center\" }}></Text>\n      <FlatList\n        data={comments}\n        renderItem={({ item }) => (\n          <Card style={{ height: 30 }}>\n            <Card.Image /*source={\"ASd\"}*/>\n              <Text style={{ marginBottom: 10 }}>{item.text}</Text>\n            </Card.Image>\n            <Text style={{ marginBottom: 1 }}>{item.date}</Text>\n            <FlatList\n              data={comments.comments}\n              renderItem={({ item }) => <Text>{item.text}</Text>}\n            />\n            <Input\n              value={commentToComment}\n              onChangeText={text => setCommentToComment(text)}\n              placeholder=\"Текст комментария\"\n            />\n            <Button\n              onPress={() => {\n                createCommentToComment(item._id);\n              }}\n              title=\"Ответить на комментарий\"\n            />\n          </Card>\n        )}\n        keyExtractor={item => item.id}\n      />\n\n      <Input\n        value={comment}\n        onChangeText={text => setComment(text)}\n        placeholder=\"Текст комментария\"\n      />\n      <Button\n        onPress={() => {\n          createComment();\n        }}\n        title=\"Отправить комментарий\"\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icons: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}