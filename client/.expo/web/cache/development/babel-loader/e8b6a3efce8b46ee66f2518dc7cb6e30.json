{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nvar deviceStorage = {\n  saveItem: function saveItem(key, value) {\n    return _regeneratorRuntime.async(function saveItem$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, JSON.stringify(value)));\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"AsyncStorage error: \" + _context.t0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  },\n  getItem: function getItem(key) {\n    var item;\n    return _regeneratorRuntime.async(function getItem$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n          case 3:\n            item = _context2.sent;\n            return _context2.abrupt(\"return\", JSON.parse(item));\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(\"AsyncStorage error: \" + _context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  },\n  removeItem: function removeItem(key) {\n    return _regeneratorRuntime.async(function removeItem$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.removeItem(key));\n\n          case 3:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 6:\n            _context3.prev = 6;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(\"AsyncStorage error: \" + _context3.t0);\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  },\n  mergeItem: function mergeItem(key, newValue) {\n    return _regeneratorRuntime.async(function mergeItem$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.mergeItem(key, JSON.stringify(newValue)));\n\n          case 3:\n            _context4.next = 8;\n            break;\n\n          case 5:\n            _context4.prev = 5;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log(\"AsyncStorage error: \" + _context4.t0);\n\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  }\n};\nexport default deviceStorage;","map":{"version":3,"sources":["/Users/user/Documents/elbrus/phase 3/RedditNativeChallenge/client/src/asyncStorage/index.js"],"names":["AsyncStorage","deviceStorage","saveItem","key","value","setItem","JSON","stringify","console","log","getItem","item","parse","removeItem","mergeItem","newValue"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE,kBAAOC,GAAP,EAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEAJ,YAAY,CAACK,OAAb,CAAqBF,GAArB,EAA0BG,IAAI,CAACC,SAAL,CAAeH,KAAf,CAA1B,CAFA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAINI,YAAAA,OAAO,CAACC,GAAR;;AAJM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADU;AAQpBC,EAAAA,OAAO,EAAE,iBAAMP,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEcH,YAAY,CAACU,OAAb,CAAqBP,GAArB,CAFd;;AAAA;AAECQ,YAAAA,IAFD;AAAA,8CAGEL,IAAI,CAACM,KAAL,CAAWD,IAAX,CAHF;;AAAA;AAAA;AAAA;AAKLH,YAAAA,OAAO,CAACC,GAAR;;AALK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GARW;AAgBpBI,EAAAA,UAAU,EAAE,oBAAMV,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEKH,YAAY,CAACa,UAAb,CAAwBV,GAAxB,CAFL;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIRK,YAAAA,OAAO,CAACC,GAAR;;AAJQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAhBQ;AAuBpBK,EAAAA,SAAS,EAAE,mBAAOX,GAAP,EAAYY,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEDf,YAAY,CAACc,SAAb,CAAuBX,GAAvB,EAA4BG,IAAI,CAACC,SAAL,CAAeQ,QAAf,CAA5B,CAFC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIPP,YAAAA,OAAO,CAACC,GAAR;;AAJO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAvBS,CAAtB;AAgCA,eAAeR,aAAf","sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst deviceStorage = {\n  saveItem: async (key, value) => {\n    try {\n      await AsyncStorage.setItem(key, JSON.stringify(value));\n    } catch (error) {\n      console.log(`AsyncStorage error: ${error}`);\n    }\n  },\n  getItem: async key => {\n    try {\n      const item = await AsyncStorage.getItem(key);\n      return JSON.parse(item);\n    } catch (error) {\n      console.log(`AsyncStorage error: ${error}`);\n    }\n  },\n  removeItem: async key => {\n    try {\n      return await AsyncStorage.removeItem(key);\n    } catch (error) {\n      console.log(`AsyncStorage error: ${error}`);\n    }\n  },\n  mergeItem: async (key, newValue) => {\n    try {\n      await AsyncStorage.mergeItem(key, JSON.stringify(newValue));\n    } catch (error) {\n      console.log(`AsyncStorage error: ${error}`);\n    }\n  },\n};\n\nexport default deviceStorage;\n"]},"metadata":{},"sourceType":"module"}