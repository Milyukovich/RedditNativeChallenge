{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport apiService from \"./apiService\";\nexport var signUp = function signUp(userInfo) {\n  return _regeneratorRuntime.async(function signUp$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(apiService.post(\"/api/v2/auth/signup\", userInfo));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var signIn = function signIn(loginInfo) {\n  return _regeneratorRuntime.async(function signIn$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(apiService.post(\"/api/v2/auth/signin\", loginInfo));\n\n        case 2:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var signOut = function signOut(refreshToken) {\n  return _regeneratorRuntime.async(function signOut$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(apiService.post(\"/api/v2/auth/signout\", {\n            refreshToken: refreshToken\n          }));\n\n        case 2:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 3:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var refreshToken = function refreshToken(_refreshToken) {\n  return _regeneratorRuntime.async(function refreshToken$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(apiService.post(\"/api/v2/auth/refresh_token\", {\n            refreshToken: _refreshToken\n          }));\n\n        case 2:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 3:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/home/artur/elbrus/phase-3/RedditNativeChallenge/client/src/api/auth.js"],"names":["apiService","signUp","userInfo","post","signIn","loginInfo","signOut","refreshToken"],"mappings":";AAAA,OAAOA,UAAP;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACPF,UAAU,CAACG,IAAX,CAAgB,qBAAhB,EAAuCD,QAAvC,CADO;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf;AAIP,OAAO,IAAME,MAAM,GAAG,SAATA,MAAS,CAAMC,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACPL,UAAU,CAACG,IAAX,CAAgB,qBAAhB,EAAuCE,SAAvC,CADO;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf;AAIP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAMC,YAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACRP,UAAU,CAACG,IAAX,CAAgB,sBAAhB,EAAwC;AAAEI,YAAAA,YAAY,EAAZA;AAAF,WAAxC,CADQ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;AAIP,OAAO,IAAMA,YAAY,GAAG,sBAAMA,aAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACbP,UAAU,CAACG,IAAX,CAAgB,4BAAhB,EAA8C;AAAEI,YAAAA,YAAY,EAAZA;AAAF,WAA9C,CADa;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB","sourcesContent":["import apiService from \"./apiService\";\n\nexport const signUp = async userInfo => {\n  return await apiService.post(\"/api/v2/auth/signup\", userInfo);\n};\n\nexport const signIn = async loginInfo => {\n  return await apiService.post(\"/api/v2/auth/signin\", loginInfo);\n};\n\nexport const signOut = async refreshToken => {\n  return await apiService.post(\"/api/v2/auth/signout\", { refreshToken });\n};\n\nexport const refreshToken = async refreshToken => {\n  return await apiService.post(\"/api/v2/auth/refresh_token\", { refreshToken });\n};\n"]},"metadata":{},"sourceType":"module"}