{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/artur/elbrus/phase-3/RedditNativeChallenge/client/src/components/Forms/SignUp/SignUp.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signUp } from \"../../../redux/actions/user.ac\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nvar SignUp = function SignUp() {\n  var navigation = useNavigation();\n  var dispatch = useDispatch();\n\n  var _useState = useState({\n    email: \"\",\n    userName: \"\",\n    password: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      signUpFormFields = _useState2[0],\n      setSignUpFormFields = _useState2[1];\n\n  var handleFieldValueChange = function handleFieldValueChange(e) {\n    console.log(name, value);\n  };\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newUser = _useState4[0],\n      setNewUser = _useState4[1];\n\n  var userFromStorage = function userFromStorage() {\n    var user;\n    return _regeneratorRuntime.async(function userFromStorage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userInfo\"));\n\n          case 2:\n            user = _context.sent;\n            setNewUser(user);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loadScene = function loadScene() {\n    navigation.navigate(\"MainPage\");\n  };\n\n  var handleClickSignUp = function handleClickSignUp() {};\n\n  var handleClickLoadLogin = function handleClickLoadLogin() {\n    navigation.navigate(\"SignIn\");\n  };\n\n  useEffect(function () {\n    (function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", userFromStorage());\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n\n    console.log(\"useEffect\");\n\n    if (newUser) {\n      loadScene();\n      console.log(\"DONE\", newUser);\n    }\n  }, [newUser]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    style: styles.bgImage,\n    source: {\n      uri: \"https://lorempixel.com/900/1400/nightlife/2/\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    name: \"userName\",\n    style: styles.inputs,\n    placeholder: \"Username\",\n    underlineColorAndroid: \"transparent\",\n    onChangeText: handleFieldValueChange,\n    defaultValue: signUpFormFields.userName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), React.createElement(Image, {\n    style: styles.inputIcon,\n    source: {\n      uri: \"https://img.icons8.com/nolan/40/000000/email.png\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    name: \"email\",\n    style: styles.inputs,\n    placeholder: \"Email\",\n    keyboardType: \"email-address\",\n    underlineColorAndroid: \"transparent\",\n    onChangeText: handleFieldValueChange,\n    defaultValue: signUpFormFields.email,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), React.createElement(Image, {\n    style: styles.inputIcon,\n    source: {\n      uri: \"https://img.icons8.com/nolan/40/000000/email.png\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    name: \"password\",\n    style: styles.inputs,\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    underlineColorAndroid: \"transparent\",\n    onChangeText: handleFieldValueChange,\n    defaultValue: signUpFormFields.password,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }), React.createElement(Image, {\n    style: styles.inputIcon,\n    source: {\n      uri: \"https://img.icons8.com/nolan/40/000000/key.png\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: [styles.buttonContainer, styles.loginButton],\n    onPress: handleClickSignUp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, \"SignUp\")), React.createElement(TouchableOpacity, {\n    style: [styles.buttonContainer, styles.loginButton],\n    onPress: handleClickLoadLogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, \"Login\")));\n};\n\nexport default SignUp;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#DCDCDC\"\n  },\n  inputContainer: {\n    borderBottomColor: \"#F5FCFF\",\n    backgroundColor: \"#FFFFFF\",\n    borderRadius: 30,\n    borderBottomWidth: 1,\n    width: 300,\n    height: 45,\n    marginBottom: 20,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  inputs: {\n    height: 45,\n    marginLeft: 16,\n    borderBottomColor: \"#FFFFFF\",\n    flex: 1\n  },\n  inputIcon: {\n    width: 30,\n    height: 30,\n    marginRight: 15,\n    justifyContent: \"center\"\n  },\n  buttonContainer: {\n    height: 45,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 15,\n    width: 300,\n    borderRadius: 30,\n    backgroundColor: \"transparent\"\n  },\n  btnForgotPassword: {\n    height: 15,\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    alignItems: \"flex-end\",\n    marginBottom: 10,\n    width: 300,\n    backgroundColor: \"transparent\"\n  },\n  loginButton: {\n    backgroundColor: \"#00b5ec\",\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 9\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 12.35,\n    elevation: 19\n  },\n  loginText: {\n    color: \"white\"\n  },\n  bgImage: {\n    flex: 1,\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\"\n  },\n  btnText: {\n    color: \"white\",\n    fontWeight: \"bold\"\n  },\n  googleButton: {\n    backgroundColor: \"#ff0000\"\n  },\n  register: {\n    height: 45,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 15,\n    width: 300,\n    borderRadius: 30,\n    backgroundColor: \"transparent\",\n    position: \"absolute\",\n    bottom: 10\n  }\n});","map":{"version":3,"sources":["/home/artur/elbrus/phase-3/RedditNativeChallenge/client/src/components/Forms/SignUp/SignUp.js"],"names":["React","useState","useEffect","useDispatch","useSelector","signUp","useNavigation","AsyncStorage","SignUp","navigation","dispatch","email","userName","password","signUpFormFields","setSignUpFormFields","handleFieldValueChange","e","console","log","name","value","newUser","setNewUser","userFromStorage","getItem","user","loadScene","navigate","handleClickSignUp","handleClickLoadLogin","styles","container","bgImage","uri","inputContainer","inputs","inputIcon","buttonContainer","loginButton","loginText","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","borderBottomColor","borderRadius","borderBottomWidth","width","height","marginBottom","flexDirection","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","marginLeft","marginRight","btnForgotPassword","color","position","btnText","fontWeight","googleButton","register","bottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  Button,\n  View,\n  SafeAreaView,\n  Text,\n  Alert,\n  TextInput,\n  Image,\n  TouchableOpacity,\n} from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signUp } from \"../../../redux/actions/user.ac\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst SignUp = () => {\n  const navigation = useNavigation();\n\n  const dispatch = useDispatch();\n\n  const [signUpFormFields, setSignUpFormFields] = useState({\n    email: \"\",\n    userName: \"\",\n    password: \"\",\n  });\n\n  const handleFieldValueChange = e => {\n    // const { name, value } = e.target;\n    console.log(name, value);\n  };\n\n  const [newUser, setNewUser] = useState(\"\");\n\n  const userFromStorage = async () => {\n    const user = await AsyncStorage.getItem(\"userInfo\");\n    setNewUser(user);\n  };\n\n  const loadScene = () => {\n    navigation.navigate(\"MainPage\");\n  };\n\n  const handleClickSignUp = () => {\n    //   const userInfo = {\n    //     userName,\n    //     email,\n    //     password,\n    //   };\n    //   console.log(userInfo);\n    //   if (userInfo.userName && userInfo.email && userInfo.password) {\n    //     dispatch(signUp(userInfo));\n    //     setUserName(\"\");\n    //     setEmail(\"\");\n    //     setPassword(\"\");\n    //   }\n  };\n\n  const handleClickLoadLogin = () => {\n    navigation.navigate(\"SignIn\");\n  };\n\n  useEffect(() => {\n    (async () => userFromStorage())();\n    console.log(\"useEffect\");\n    if (newUser) {\n      loadScene();\n      console.log(\"DONE\", newUser);\n    }\n  }, [newUser]);\n\n  return (\n    <View style={styles.container}>\n      <Image\n        style={styles.bgImage}\n        source={{ uri: \"https://lorempixel.com/900/1400/nightlife/2/\" }}\n      />\n      <View style={styles.inputContainer}>\n        <TextInput\n          name=\"userName\"\n          style={styles.inputs}\n          placeholder=\"Username\"\n          underlineColorAndroid=\"transparent\"\n          onChangeText={handleFieldValueChange}\n          defaultValue={signUpFormFields.userName}\n        />\n        <Image\n          style={styles.inputIcon}\n          source={{ uri: \"https://img.icons8.com/nolan/40/000000/email.png\" }}\n        />\n      </View>\n      <View style={styles.inputContainer}>\n        <TextInput\n          name=\"email\"\n          style={styles.inputs}\n          placeholder=\"Email\"\n          keyboardType=\"email-address\"\n          underlineColorAndroid=\"transparent\"\n          onChangeText={handleFieldValueChange}\n          defaultValue={signUpFormFields.email}\n        />\n        <Image\n          style={styles.inputIcon}\n          source={{ uri: \"https://img.icons8.com/nolan/40/000000/email.png\" }}\n        />\n      </View>\n\n      <View style={styles.inputContainer}>\n        <TextInput\n          name=\"password\"\n          style={styles.inputs}\n          placeholder=\"Password\"\n          secureTextEntry={true}\n          underlineColorAndroid=\"transparent\"\n          onChangeText={handleFieldValueChange}\n          defaultValue={signUpFormFields.password}\n        />\n        <Image\n          style={styles.inputIcon}\n          source={{ uri: \"https://img.icons8.com/nolan/40/000000/key.png\" }}\n        />\n      </View>\n\n      <TouchableOpacity\n        style={[styles.buttonContainer, styles.loginButton]}\n        onPress={handleClickSignUp}\n      >\n        <Text style={styles.loginText}>SignUp</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={[styles.buttonContainer, styles.loginButton]}\n        onPress={handleClickLoadLogin}\n      >\n        <Text style={styles.loginText}>Login</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default SignUp;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#DCDCDC\",\n  },\n  inputContainer: {\n    borderBottomColor: \"#F5FCFF\",\n    backgroundColor: \"#FFFFFF\",\n    borderRadius: 30,\n    borderBottomWidth: 1,\n    width: 300,\n    height: 45,\n    marginBottom: 20,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n\n    elevation: 5,\n  },\n  inputs: {\n    height: 45,\n    marginLeft: 16,\n    borderBottomColor: \"#FFFFFF\",\n    flex: 1,\n  },\n  inputIcon: {\n    width: 30,\n    height: 30,\n    marginRight: 15,\n    justifyContent: \"center\",\n  },\n  buttonContainer: {\n    height: 45,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 15,\n    width: 300,\n    borderRadius: 30,\n    backgroundColor: \"transparent\",\n  },\n  btnForgotPassword: {\n    height: 15,\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    alignItems: \"flex-end\",\n    marginBottom: 10,\n    width: 300,\n    backgroundColor: \"transparent\",\n  },\n  loginButton: {\n    backgroundColor: \"#00b5ec\",\n\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 9,\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 12.35,\n\n    elevation: 19,\n  },\n  loginText: {\n    color: \"white\",\n  },\n  bgImage: {\n    flex: 1,\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\",\n  },\n  btnText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n  },\n  googleButton: {\n    backgroundColor: \"#ff0000\",\n  },\n  register: {\n    height: 45,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 15,\n    width: 300,\n    borderRadius: 30,\n    backgroundColor: \"transparent\",\n    position: \"absolute\",\n    bottom: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}