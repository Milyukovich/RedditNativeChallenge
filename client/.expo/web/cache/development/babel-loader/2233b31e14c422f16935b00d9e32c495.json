{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/user/elbrus/PHASE 3/RedditNativeChallenge/client/src/components/EditProfile/EditProfile.jsx\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function EditProfileForm(_ref) {\n  var props = _ref.props;\n  var showEditForm = props.showEditForm,\n      setshowEditForm = props.setshowEditForm;\n  var dispatch = useDispatch();\n  var currUserId = useSelector(function (state) {\n    return state.user.userInfo.id;\n  });\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputUsername = _useState2[0],\n      setInputUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inputEmail = _useState4[0],\n      setinputEmail = _useState4[1];\n\n  var editProfileFunction = function editProfileFunction(id, e) {\n    e.preventDefault();\n    var inputUsername = e.target.inputId.value;\n    var inputEmail = dispatch(editProfile(id, inputUsername, inputEmail));\n    setshowEditForm(function (prev) {\n      return !prev;\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputs,\n    value: inputUsername,\n    placeholder: \"New username\",\n    underlineColorAndroid: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), React.createElement(Image, {\n    style: styles.inputIcon,\n    source: {\n      uri: \"https://img.icons8.com/nolan/40/000000/email.png\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputs,\n    value: inputEmail,\n    placeholder: \"New email\",\n    keyboardType: \"email-address\",\n    underlineColorAndroid: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), React.createElement(Image, {\n    style: styles.inputIcon,\n    source: {\n      uri: \"https://img.icons8.com/nolan/40/000000/key.png\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: [styles.buttonContainer, styles.updateButton],\n    onPress: function onPress(e) {\n      return editProfileFunction(currUserId, e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.updateText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Update\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#DCDCDC\"\n  },\n  inputContainer: {\n    borderBottomColor: \"#F5FCFF\",\n    backgroundColor: \"#FFFFFF\",\n    borderRadius: 30,\n    borderBottomWidth: 1,\n    width: 300,\n    height: 45,\n    marginBottom: 20,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  inputs: {\n    height: 45,\n    marginLeft: 16,\n    borderBottomColor: \"#FFFFFF\",\n    flex: 1\n  },\n  buttonContainer: {\n    height: 45,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 20,\n    width: 300,\n    borderRadius: 30,\n    backgroundColor: \"transparent\"\n  },\n  updateButton: {\n    backgroundColor: \"#00b5ec\",\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 9\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 12.35,\n    elevation: 19\n  },\n  updateText: {\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["/Users/user/elbrus/PHASE 3/RedditNativeChallenge/client/src/components/EditProfile/EditProfile.jsx"],"names":["React","useDispatch","useSelector","EditProfileForm","props","showEditForm","setshowEditForm","dispatch","currUserId","state","user","userInfo","id","useState","inputUsername","setInputUsername","inputEmail","setinputEmail","editProfileFunction","e","preventDefault","target","inputId","value","editProfile","prev","styles","container","inputContainer","inputs","inputIcon","uri","buttonContainer","updateButton","updateText","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","borderBottomColor","borderRadius","borderBottomWidth","width","height","marginBottom","flexDirection","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","marginLeft","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  View,\n  TextInput,\n  Image,\n  StyleSheet,\n  TouchableOpacity,\n  Text,\n} from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function EditProfileForm({ props }) {\n  const { showEditForm, setshowEditForm } = props;\n  const dispatch = useDispatch();\n  const currUserId = useSelector(state => state.user.userInfo.id);\n  const [inputUsername, setInputUsername] = useState(\"\");\n  const [inputEmail, setinputEmail] = useState(\"\");\n\n  const editProfileFunction = (id, e) => {\n    e.preventDefault();\n    const inputUsername = e.target.inputId.value;\n    const inputEmail = dispatch(editProfile(id, inputUsername, inputEmail));\n    setshowEditForm(prev => !prev);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.inputContainer}>\n        <TextInput\n          style={styles.inputs}\n          value={inputUsername}\n          placeholder=\"New username\"\n          underlineColorAndroid=\"transparent\"\n        />\n        <Image\n          style={styles.inputIcon}\n          source={{ uri: \"https://img.icons8.com/nolan/40/000000/email.png\" }}\n        />\n      </View>\n\n      <View style={styles.inputContainer}>\n        <TextInput\n          style={styles.inputs}\n          value={inputEmail}\n          placeholder=\"New email\"\n          keyboardType=\"email-address\"\n          underlineColorAndroid=\"transparent\"\n        />\n        <Image\n          style={styles.inputIcon}\n          source={{ uri: \"https://img.icons8.com/nolan/40/000000/key.png\" }}\n        />\n      </View>\n      <TouchableOpacity\n        style={[styles.buttonContainer, styles.updateButton]}\n        onPress={e => editProfileFunction(currUserId, e)}\n      >\n        <Text style={styles.updateText}>Update</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#DCDCDC\",\n  },\n  inputContainer: {\n    borderBottomColor: \"#F5FCFF\",\n    backgroundColor: \"#FFFFFF\",\n    borderRadius: 30,\n    borderBottomWidth: 1,\n    width: 300,\n    height: 45,\n    marginBottom: 20,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n\n    elevation: 5,\n  },\n  inputs: {\n    height: 45,\n    marginLeft: 16,\n    borderBottomColor: \"#FFFFFF\",\n    flex: 1,\n  },\n  buttonContainer: {\n    height: 45,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 20,\n    width: 300,\n    borderRadius: 30,\n    backgroundColor: \"transparent\",\n  },\n\n  updateButton: {\n    backgroundColor: \"#00b5ec\",\n\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 9,\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 12.35,\n\n    elevation: 19,\n  },\n  updateText: {\n    color: \"white\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}