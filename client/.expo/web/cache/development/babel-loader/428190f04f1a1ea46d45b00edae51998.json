{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["// import {\n//   CREATE_COMMENT,\n//   CREATE_COMMENT_TO_COMMENT,\n//   SET_LIKE_TO_COMMENT,\n//   SET_DISLIKE_TO_COMMENT,\n// } from \"../types/comment\";\n// import apiService from \"../../api/apiService\";\n\n// const getCommentCreate = payload => ({ type: CREATE_COMMENT, payload });\n// const getComToComtCreate = payload => ({\n//   type: CREATE_COMMENT_TO_COMMENT,\n//   payload,\n// });\n\n// const setLikeToComment = currComment => ({\n//   type: SET_LIKE_TO_COMMENT,\n//   payload: currComment,\n// });\n// const setDislikeToComment = currComment => ({\n//   type: SET_DISLIKE_TO_COMMENT,\n//   payload: currComment,\n// });\n\n// export const createComMain = description => async dispatch => {\n//   apiService.post(\"/comment/add\", description).then(({ data }) => {\n//     dispatch(getCommentCreate({ data, description }));\n//   });\n// };\n\n// export const createComToCom = description => async dispatch => {\n//   apiService.post(\"/comment/addcomtocom\", description).then(({ data }) => {\n//     console.log(\"DATA\", data, description);\n//     dispatch(getComToComtCreate({ data, description }));\n//   });\n// };\n\n// export const addLikeComment = (userId, commentId) => async dispatch => {\n//   apiService\n//     .patch(\"/post/likescomment\", { userId, commentId })\n//     .then(({ data }) => dispatch(setLikeToComment(data.currPost)));\n// };\n\n// export const addDislikeComment = (userId, commentId) => async dispatch => {\n//   apiService\n//     .patch(\"/post/dislikescomment\", { userId, commentId })\n//     .then(({ data }) => dispatch(setDislikeToComment(data.currPost)));\n// };\n"]},"metadata":{},"sourceType":"script"}