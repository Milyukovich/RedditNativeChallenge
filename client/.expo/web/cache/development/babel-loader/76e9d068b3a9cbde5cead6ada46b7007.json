{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { REMOVE_TOKEN, SET_TOKEN, SET_USER_INFO, REMOVE_USER_INFO, CHANGE_STATUS_LIKE, CHANGE_STATUS_COMMENT, CHANGE_STATUS_OLD } from \"../types/userTypes\";\nimport * as endPoints from \"../../config/endPoints\";\nimport { disableLoader, enableLoader } from \"./loader.ac\";\nimport { signUp as apiSignUp, signIn as apiSignIn, signOut as apiSignOut } from \"../../api/auth\";\nimport apiService from \"../../api/apiService\";\nexport var goToSubscribe = function goToSubscribe(description) {\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            apiService.post(\"/post\", description).then(function (_ref) {\n              var data = _ref.data;\n              return dispatch(get(data.Posts));\n            });\n            dispatch(disableLoader());\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var getUserFromServer = function getUserFromServer(id) {\n  return function _callee2(dispatch) {\n    var response, currentUser;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            dispatch(enableLoader());\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch(endPoints.getUser(id), {\n              credentials: \"include\"\n            }));\n\n          case 3:\n            response = _context2.sent;\n\n            if (!(response.status === 200)) {\n              _context2.next = 8;\n              break;\n            }\n\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            currentUser = _context2.sent;\n\n          case 8:\n            dispatch(disableLoader());\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var chageStatusLike = function chageStatusLike(payload) {\n  return {\n    type: CHANGE_STATUS_LIKE,\n    payload: payload\n  };\n};\nexport var chageStatusComment = function chageStatusComment(payload) {\n  return {\n    type: CHANGE_STATUS_COMMENT,\n    payload: payload\n  };\n};\nexport var chageStatusOld = function chageStatusOld(payload) {\n  return {\n    type: CHANGE_STATUS_OLD,\n    payload: payload\n  };\n};\nexport var setToken = function setToken(accessToken, refreshToken) {\n  return {\n    type: SET_TOKEN,\n    payload: {\n      accessToken: accessToken,\n      refreshToken: refreshToken\n    }\n  };\n};\nexport var removeToken = function removeToken() {\n  return {\n    type: REMOVE_TOKEN\n  };\n};\nexport var setUserInfo = function setUserInfo(userInfo) {\n  return {\n    type: SET_USER_INFO,\n    payload: {\n      userInfo: userInfo\n    }\n  };\n};\nexport var removeUserInfo = function removeUserInfo() {\n  return {\n    type: REMOVE_USER_INFO\n  };\n};\nexport var signUp = function signUp(signUpInfo) {\n  return function _callee3(dispatch) {\n    var _await$apiSignUp, data, _data$auth, accessToken, refreshToken, userInfo;\n\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            dispatch(enableLoader());\n            _context3.prev = 1;\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(apiSignUp(signUpInfo));\n\n          case 4:\n            _await$apiSignUp = _context3.sent;\n            data = _await$apiSignUp.data;\n            _data$auth = data.auth, accessToken = _data$auth.accessToken, refreshToken = _data$auth.refreshToken, userInfo = data.userInfo;\n            dispatch(setToken(accessToken, refreshToken));\n            dispatch(setUserInfo(userInfo));\n            _context3.next = 14;\n            break;\n\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](1);\n            console.log(_context3.t0);\n\n          case 14:\n            dispatch(disableLoader());\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[1, 11]], Promise);\n  };\n};\nexport var signIn = function signIn(loginInfo) {\n  return function _callee4(dispatch) {\n    var _await$apiSignIn, data, _data$auth2, accessToken, refreshToken, userInfo;\n\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            dispatch(enableLoader());\n            _context4.prev = 1;\n            _context4.next = 4;\n            return _regeneratorRuntime.awrap(apiSignIn(loginInfo));\n\n          case 4:\n            _await$apiSignIn = _context4.sent;\n            data = _await$apiSignIn.data;\n            _data$auth2 = data.auth, accessToken = _data$auth2.accessToken, refreshToken = _data$auth2.refreshToken, userInfo = data.userInfo;\n            dispatch(setToken(accessToken, refreshToken));\n            dispatch(setUserInfo(userInfo));\n            _context4.next = 14;\n            break;\n\n          case 11:\n            _context4.prev = 11;\n            _context4.t0 = _context4[\"catch\"](1);\n            console.log(_context4.t0);\n\n          case 14:\n            dispatch(disableLoader());\n\n          case 15:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[1, 11]], Promise);\n  };\n};\nexport var signOut = function signOut() {\n  return function _callee5(dispatch, getState) {\n    var refreshToken, response;\n    return _regeneratorRuntime.async(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            dispatch(enableLoader());\n            _context5.prev = 1;\n            refreshToken = getState().user.jwt.refresh;\n            _context5.next = 5;\n            return _regeneratorRuntime.awrap(apiSignOut(refreshToken));\n\n          case 5:\n            response = _context5.sent;\n\n            if (response.status === 200) {\n              dispatch(removeToken());\n              dispatch(removeUserInfo());\n            }\n\n            _context5.next = 12;\n            break;\n\n          case 9:\n            _context5.prev = 9;\n            _context5.t0 = _context5[\"catch\"](1);\n            console.log(_context5.t0);\n\n          case 12:\n            dispatch(disableLoader());\n\n          case 13:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, [[1, 9]], Promise);\n  };\n};\nexport var checkAuth = function checkAuth() {\n  return function _callee6(dispatch) {\n    return _regeneratorRuntime.async(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var editUser = function editUser(user, history) {\n  return function _callee7(dispatch, getState) {\n    return _regeneratorRuntime.async(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["/home/roman/elbruss/phase 3/finalproject/RedditNativeChallenge/client/src/redux/actions/user.ac.js"],"names":["REMOVE_TOKEN","SET_TOKEN","SET_USER_INFO","REMOVE_USER_INFO","CHANGE_STATUS_LIKE","CHANGE_STATUS_COMMENT","CHANGE_STATUS_OLD","endPoints","disableLoader","enableLoader","signUp","apiSignUp","signIn","apiSignIn","signOut","apiSignOut","apiService","goToSubscribe","description","dispatch","post","then","data","get","Posts","getUserFromServer","id","fetch","getUser","credentials","response","status","json","currentUser","chageStatusLike","payload","type","chageStatusComment","chageStatusOld","setToken","accessToken","refreshToken","removeToken","setUserInfo","userInfo","removeUserInfo","signUpInfo","auth","console","log","loginInfo","getState","user","jwt","refresh","checkAuth","editUser","history"],"mappings":"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","sourcesContent":["import {\n  REMOVE_TOKEN,\n  SET_TOKEN,\n  SET_USER_INFO,\n  REMOVE_USER_INFO,\n  CHANGE_STATUS_LIKE,\n  CHANGE_STATUS_COMMENT,\n  CHANGE_STATUS_OLD,\n} from \"../types/userTypes\";\nimport * as endPoints from \"../../config/endPoints\";\nimport { disableLoader, enableLoader } from \"./loader.ac\";\nimport {\n  signUp as apiSignUp,\n  signIn as apiSignIn,\n  signOut as apiSignOut,\n} from \"../../api/auth\";\nimport apiService from \"../../api/apiService\";\n\nexport const goToSubscribe =  description => async dispatch => {\n  apiService\n    .post(\"/post\", description)\n    .then(({ data }) => dispatch(get(data.Posts)));\n\n  dispatch(disableLoader());\n};\nexport const getUserFromServer = id => async dispatch => {\n  dispatch(enableLoader());\n  const response = await fetch(endPoints.getUser(id), {\n    credentials: \"include\",\n  });\n  if (response.status === 200) {\n    const currentUser = await response.json();\n    // dispatch(setUser(currentUser));\n  }\n  dispatch(disableLoader());\n};\nexport const chageStatusLike = payload => ({\n  type: CHANGE_STATUS_LIKE,\n  payload,\n});\nexport const chageStatusComment = payload => ({\n  type: CHANGE_STATUS_COMMENT,\n  payload,\n});\nexport const chageStatusOld = payload => ({\n  type: CHANGE_STATUS_OLD,\n  payload,\n});\nexport const setToken = (accessToken, refreshToken) => ({\n  type: SET_TOKEN,\n  payload: { accessToken, refreshToken },\n});\n\nexport const removeToken = () => ({\n  type: REMOVE_TOKEN,\n});\n\nexport const setUserInfo = userInfo => ({\n  type: SET_USER_INFO,\n  payload: { userInfo },\n});\n\nexport const removeUserInfo = () => ({\n  type: REMOVE_USER_INFO,\n});\n\nexport const signUp = signUpInfo => async dispatch => {\n  dispatch(enableLoader());\n\n  try {\n    const { data } = await apiSignUp(signUpInfo);\n    const {\n      auth: { accessToken, refreshToken },\n      userInfo,\n    } = data;\n    dispatch(setToken(accessToken, refreshToken));\n    dispatch(setUserInfo(userInfo));\n  } catch (error) {\n    console.log(error);\n  }\n\n  dispatch(disableLoader());\n};\n\nexport const signIn = loginInfo => async dispatch => {\n  dispatch(enableLoader());\n  try {\n    const { data } = await apiSignIn(loginInfo);\n    const {\n      auth: { accessToken, refreshToken },\n      userInfo,\n    } = data;\n    dispatch(setToken(accessToken, refreshToken));\n    dispatch(setUserInfo(userInfo));\n  } catch (error) {\n    console.log(error);\n  }\n\n  dispatch(disableLoader());\n};\n\nexport const signOut = () => async (dispatch, getState) => {\n  dispatch(enableLoader());\n  try {\n    const refreshToken = getState().user.jwt.refresh;\n    const response = await apiSignOut(refreshToken);\n    if (response.status === 200) {\n      dispatch(removeToken());\n      dispatch(removeUserInfo());\n    }\n  } catch (error) {\n    console.log(error);\n  }\n\n  dispatch(disableLoader());\n};\n\nexport const checkAuth = () => async dispatch => {\n  //   const response = await fetch(endPoints.checkAuth(), {\n  //     // credentials: \"include\",\n  //   });\n  //   if (response.status === 200) {\n  //     const user = await response.json();\n  //     dispatch(setUser(user));\n  //   }\n};\n\nexport const editUser = (user, history) => async (dispatch, getState) => {\n  // const {\n  //   user: { _id: userId },\n  // } = getState();\n  // dispatch(enableLoader());\n  // const response = await fetch(endPoints.editUser(userId), {\n  //   method: \"PATCH\",\n  //   headers: {\n  //     \"Content-Type\": \"application/json\",\n  //   },\n  //   // credentials: \"include\",\n  //   body: JSON.stringify(user),\n  // });\n  // if (response.status === 200) {\n  //   const user = await response.json();\n  //   dispatch(setUser(user));\n  //   history.replace(`/users/${user._id}`);\n  // } else {\n  //   history.replace(\"/\");\n  // }\n  // dispatch(disableLoader());\n};\n"]},"metadata":{},"sourceType":"module"}