{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/user/elbrus/PHASE 3/RedditNativeChallenge/client/src/components/Item/Item.js\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Card, Overlay } from \"react-native-elements\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { addLike, addDislike, getContent, editPost } from \"../../redux/actions/content\";\nexport default function Item(_ref) {\n  var el = _ref.el;\n  var dispatch = useDispatch();\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  var userId = user.userInfo.id;\n  var navigation = useNavigation();\n  var title = useSelector(function (state) {\n    return state.content;\n  });\n  var description = useSelector(function (state) {\n    return state.content;\n  });\n  var postId = useSelector(function (state) {\n    return state.content;\n  });\n\n  var _useState = useState({\n    status: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      editFormPost = _useState2[0],\n      setEditFormPost = _useState2[1];\n\n  var _useState3 = useState(title),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inputTitle = _useState4[0],\n      setInputTitle = _useState4[1];\n\n  var _useState5 = useState(description),\n      _useState6 = _slicedToArray(_useState5, 2),\n      inputDescription = _useState6[0],\n      setInputDescription = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      visible = _useState8[0],\n      setVisible = _useState8[1];\n\n  var toggleOverlay = function toggleOverlay() {\n    setVisible(!visible);\n  };\n\n  var like = function like(userId, postId) {\n    dispatch(addLike(userId, postId));\n  };\n\n  var dislike = function dislike(userId, postId) {\n    dispatch(addDislike(userId, postId));\n  };\n\n  useEffect(function () {\n    dispatch(getContent());\n  }, [dispatch]);\n  return React.createElement(Card, {\n    containerStyle: styles.div,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, userId === el.author ? React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, React.createElement(Overlay, {\n    overlayStyle: styles.overlayContainer,\n    isVisible: visible,\n    onBackdropPress: toggleOverlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.overlayOpacity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.overlayText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Delete\")), React.createElement(TouchableOpacity, {\n    style: styles.overlayOpacity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.overlayText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Edit\")), React.createElement(TouchableOpacity, {\n    style: styles.cancleOpacity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    onPress: function onPress() {\n      return setVisible(function (prev) {\n        return !prev;\n      });\n    },\n    style: styles.overlayText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Cancle\")))), React.createElement(View, {\n    style: styles.header_post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon.Button, {\n    name: \"ellipsis-v\",\n    backgroundColor: \"#94a3b8\",\n    onPress: toggleOverlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }))) : React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), React.createElement(Card.Title, {\n    style: styles.title1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, el.title), React.createElement(Card.Divider, {\n    style: styles.hr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), el.content ? React.createElement(Card.Image, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, el.content)) : React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, React.createElement(Icon.Button, {\n    name: \"thumbs-up\",\n    backgroundColor: \"#94a3b8\",\n    color: \"#e2e8f0\",\n    onPress: function onPress() {\n      return like(userId, el._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \" \", el.likes.length)), React.createElement(Icon.Button, {\n    name: \"thumbs-down\",\n    backgroundColor: \"#94a3b8\",\n    onPress: function onPress() {\n      return dislike(userId, el._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, el.dislikes.length)), React.createElement(Icon.Button, {\n    name: \"comments\",\n    backgroundColor: \"#94a3b8\",\n    onPress: function onPress() {\n      return navigation.navigate(\"OnePostPage\", {\n        el: el\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, el.comments.length))), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, \"Created by: \", el.authorUsername), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, el.date));\n}\nvar styles = StyleSheet.create({\n  overlayContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#1e293b\",\n    width: 270,\n    borderRadius: 8,\n    borderWidth: 2,\n    borderStyle: \"solid\",\n    borderColor: \"#543333\"\n  },\n  overlayText: {\n    margin: 3,\n    fontSize: 25,\n    color: \"#e2e8f0\"\n  },\n  cancleOpacity: {\n    backgroundColor: \"#543333\",\n    margin: 1,\n    width: 180,\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 5,\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderColor: \"#e2e8f0\"\n  },\n  overlayOpacity: {\n    backgroundColor: \"#334155\",\n    margin: 1,\n    width: 180,\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 5,\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderColor: \"#e2e8f0\"\n  },\n  edit_button: {\n    width: 30,\n    height: 40,\n    backgroundColor: \"gray\"\n  },\n  hr: {\n    backgroundColor: \"#e2e8f0\",\n    height: 1.3\n  },\n  div: {\n    width: 300,\n    flexDirection: \"column\",\n    borderWidth: 2,\n    borderRadius: 5,\n    borderStyle: \"solid\",\n    borderColor: \"#e2e8f0\",\n    backgroundColor: \"#334155\"\n  },\n  header_post: {\n    flexDirection: \"column\",\n    alignSelf: \"flex-end\",\n    height: 20,\n    width: 17\n  },\n  header_title: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignContent: \"center\"\n  },\n  icons: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    paddingHorizontal: 25,\n    marginBottom: 8\n  },\n  title1: {\n    fontSize: 20,\n    color: \"#e2e8f0\"\n  },\n  text: {\n    color: \"#e2e8f0\"\n  }\n});","map":{"version":3,"sources":["/Users/user/elbrus/PHASE 3/RedditNativeChallenge/client/src/components/Item/Item.js"],"names":["React","useEffect","useState","Card","Overlay","Icon","useDispatch","useSelector","useNavigation","addLike","addDislike","getContent","editPost","Item","el","dispatch","user","state","userId","userInfo","id","navigation","title","content","description","postId","status","editFormPost","setEditFormPost","inputTitle","setInputTitle","inputDescription","setInputDescription","visible","setVisible","toggleOverlay","like","dislike","styles","div","author","overlayContainer","overlayOpacity","overlayText","cancleOpacity","prev","header_post","title1","hr","marginBottom","icons","_id","text","likes","length","dislikes","navigate","comments","authorUsername","date","StyleSheet","create","justifyContent","alignItems","backgroundColor","width","borderRadius","borderWidth","borderStyle","borderColor","margin","fontSize","color","flexDirection","edit_button","height","alignSelf","header_title","flex","alignContent","paddingHorizontal"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;AAOA,SAASC,IAAT,EAAeC,OAAf,QAA8B,uBAA9B;AACA,OAAOC,IAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,UAA9B,EAA0CC,QAA1C;AAEA,eAAe,SAASC,IAAT,OAAsB;AAAA,MAANC,EAAM,QAANA,EAAM;AACnC,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,MAAMU,IAAI,GAAGT,WAAW,CAAC,UAAAU,KAAK;AAAA,WAAIA,KAAK,CAACD,IAAV;AAAA,GAAN,CAAxB;AACA,MAAME,MAAM,GAAGF,IAAI,CAACG,QAAL,CAAcC,EAA7B;AACA,MAAMC,UAAU,GAAGb,aAAa,EAAhC;AAEA,MAAMc,KAAK,GAAGf,WAAW,CAAC,UAAAU,KAAK;AAAA,WAAIA,KAAK,CAACM,OAAV;AAAA,GAAN,CAAzB;AACA,MAAMC,WAAW,GAAGjB,WAAW,CAAC,UAAAU,KAAK;AAAA,WAAIA,KAAK,CAACM,OAAV;AAAA,GAAN,CAA/B;AACA,MAAME,MAAM,GAAGlB,WAAW,CAAC,UAAAU,KAAK;AAAA,WAAIA,KAAK,CAACM,OAAV;AAAA,GAAN,CAA1B;;AACA,kBAAwCrB,QAAQ,CAAC;AAAEwB,IAAAA,MAAM,EAAE;AAAV,GAAD,CAAhD;AAAA;AAAA,MAAOC,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAAoC1B,QAAQ,CAACoB,KAAD,CAA5C;AAAA;AAAA,MAAOO,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAgD5B,QAAQ,CAACsB,WAAD,CAAxD;AAAA;AAAA,MAAOO,gBAAP;AAAA,MAAyBC,mBAAzB;;AAEA,mBAA8B9B,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAO+B,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BD,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;;AAIA,MAAMG,IAAI,GAAG,SAAPA,IAAO,CAAClB,MAAD,EAASO,MAAT,EAAoB;AAC/BV,IAAAA,QAAQ,CAACN,OAAO,CAACS,MAAD,EAASO,MAAT,CAAR,CAAR;AACD,GAFD;;AAGA,MAAMY,OAAO,GAAG,SAAVA,OAAU,CAACnB,MAAD,EAASO,MAAT,EAAoB;AAClCV,IAAAA,QAAQ,CAACL,UAAU,CAACQ,MAAD,EAASO,MAAT,CAAX,CAAR;AACD,GAFD;;AAIAxB,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,QAAQ,CAACJ,UAAU,EAAX,CAAR;AACD,GAFQ,EAEN,CAACI,QAAD,CAFM,CAAT;AAIA,SACE,oBAAC,IAAD;AAAM,IAAA,cAAc,EAAEuB,MAAM,CAACC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrB,MAAM,KAAKJ,EAAE,CAAC0B,MAAd,GACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AACE,IAAA,YAAY,EAAEF,MAAM,CAACG,gBADvB;AAEE,IAAA,SAAS,EAAER,OAFb;AAGE,IAAA,eAAe,EAAEE,aAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEG,MAAM,CAACI,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CALF,EAQE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEL,MAAM,CAACI,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CARF,EAWE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEL,MAAM,CAACM,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMV,UAAU,CAAC,UAAAW,IAAI;AAAA,eAAI,CAACA,IAAL;AAAA,OAAL,CAAhB;AAAA,KADX;AAEE,IAAA,KAAK,EAAEP,MAAM,CAACK,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAXF,CADF,CADF,EAwBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACQ,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,eAAe,EAAC,SAFlB;AAGE,IAAA,OAAO,EAAEX,aAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAxBF,CADD,GAkCC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCJ,EAsCE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,KAAK,EAAEG,MAAM,CAACS,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCjC,EAAE,CAACQ,KAAtC,CAtCF,EAuCE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,EAAEgB,MAAM,CAACU,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCF,EAyCGlC,EAAE,CAACS,OAAH,GACC,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE0B,MAAAA,YAAY,EAAE;AAAhB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCnC,EAAE,CAACS,OAAvC,CADF,CADD,GAKC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9CJ,EAiDE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEe,MAAM,CAACY,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,eAAe,EAAC,SAFlB;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,OAAO,EAAE;AAAA,aAAMd,IAAI,CAAClB,MAAD,EAASJ,EAAE,CAACqC,GAAZ,CAAV;AAAA,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAACc,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA4BtC,EAAE,CAACuC,KAAH,CAASC,MAArC,CANF,CADF,EAUE,oBAAC,IAAD,CAAM,MAAN;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,eAAe,EAAC,SAFlB;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMjB,OAAO,CAACnB,MAAD,EAASJ,EAAE,CAACqC,GAAZ,CAAb;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAACc,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BtC,EAAE,CAACyC,QAAH,CAAYD,MAAvC,CALF,CAVF,EAkBE,oBAAC,IAAD,CAAM,MAAN;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,eAAe,EAAC,SAFlB;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMjC,UAAU,CAACmC,QAAX,CAAoB,aAApB,EAAmC;AAAE1C,QAAAA,EAAE,EAAFA;AAAF,OAAnC,CAAN;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEwB,MAAM,CAACc,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BtC,EAAE,CAAC2C,QAAH,CAAYH,MAAvC,CALF,CAlBF,CAjDF,EA2EE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,MAAM,CAACc,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAuCtC,EAAE,CAAC4C,cAA1C,CA3EF,EA4EE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEpB,MAAM,CAACc,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BtC,EAAE,CAAC6C,IAA9B,CA5EF,CADF;AAgFD;AAED,IAAMrB,MAAM,GAAGsB,UAAU,CAACC,MAAX,CAAkB;AAC/BpB,EAAAA,gBAAgB,EAAE;AAChBqB,IAAAA,cAAc,EAAE,QADA;AAEhBC,IAAAA,UAAU,EAAE,QAFI;AAGhBC,IAAAA,eAAe,EAAE,SAHD;AAIhBC,IAAAA,KAAK,EAAE,GAJS;AAKhBC,IAAAA,YAAY,EAAE,CALE;AAMhBC,IAAAA,WAAW,EAAE,CANG;AAOhBC,IAAAA,WAAW,EAAE,OAPG;AAQhBC,IAAAA,WAAW,EAAE;AARG,GADa;AAY/B1B,EAAAA,WAAW,EAAE;AACX2B,IAAAA,MAAM,EAAE,CADG;AAEXC,IAAAA,QAAQ,EAAE,EAFC;AAGXC,IAAAA,KAAK,EAAE;AAHI,GAZkB;AAkB/B5B,EAAAA,aAAa,EAAE;AACboB,IAAAA,eAAe,EAAE,SADJ;AAEbM,IAAAA,MAAM,EAAE,CAFK;AAGbL,IAAAA,KAAK,EAAE,GAHM;AAIbQ,IAAAA,aAAa,EAAE,QAJF;AAKbX,IAAAA,cAAc,EAAE,QALH;AAMbC,IAAAA,UAAU,EAAE,QANC;AAObG,IAAAA,YAAY,EAAE,CAPD;AAQbC,IAAAA,WAAW,EAAE,CARA;AASbC,IAAAA,WAAW,EAAE,OATA;AAUbC,IAAAA,WAAW,EAAE;AAVA,GAlBgB;AA+B/B3B,EAAAA,cAAc,EAAE;AACdsB,IAAAA,eAAe,EAAE,SADH;AAEdM,IAAAA,MAAM,EAAE,CAFM;AAGdL,IAAAA,KAAK,EAAE,GAHO;AAIdQ,IAAAA,aAAa,EAAE,QAJD;AAKdX,IAAAA,cAAc,EAAE,QALF;AAMdC,IAAAA,UAAU,EAAE,QANE;AAOdG,IAAAA,YAAY,EAAE,CAPA;AAQdC,IAAAA,WAAW,EAAE,CARC;AASdC,IAAAA,WAAW,EAAE,OATC;AAUdC,IAAAA,WAAW,EAAE;AAVC,GA/Be;AA4C/BK,EAAAA,WAAW,EAAE;AACXT,IAAAA,KAAK,EAAE,EADI;AAEXU,IAAAA,MAAM,EAAE,EAFG;AAGXX,IAAAA,eAAe,EAAE;AAHN,GA5CkB;AAkD/BhB,EAAAA,EAAE,EAAE;AACFgB,IAAAA,eAAe,EAAE,SADf;AAEFW,IAAAA,MAAM,EAAE;AAFN,GAlD2B;AAuD/BpC,EAAAA,GAAG,EAAE;AACH0B,IAAAA,KAAK,EAAE,GADJ;AAEHQ,IAAAA,aAAa,EAAE,QAFZ;AAGHN,IAAAA,WAAW,EAAE,CAHV;AAIHD,IAAAA,YAAY,EAAE,CAJX;AAKHE,IAAAA,WAAW,EAAE,OALV;AAMHC,IAAAA,WAAW,EAAE,SANV;AAOHL,IAAAA,eAAe,EAAE;AAPd,GAvD0B;AAgE/BlB,EAAAA,WAAW,EAAE;AACX2B,IAAAA,aAAa,EAAE,QADJ;AAEXG,IAAAA,SAAS,EAAE,UAFA;AAGXD,IAAAA,MAAM,EAAE,EAHG;AAIXV,IAAAA,KAAK,EAAE;AAJI,GAhEkB;AAsE/BY,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAE,CADM;AAEZhB,IAAAA,cAAc,EAAE,QAFJ;AAGZiB,IAAAA,YAAY,EAAE;AAHF,GAtEiB;AA2E/B7B,EAAAA,KAAK,EAAE;AACLuB,IAAAA,aAAa,EAAE,KADV;AAELX,IAAAA,cAAc,EAAE,cAFX;AAGLkB,IAAAA,iBAAiB,EAAE,EAHd;AAIL/B,IAAAA,YAAY,EAAE;AAJT,GA3EwB;AAiF/BF,EAAAA,MAAM,EAAE;AACNwB,IAAAA,QAAQ,EAAE,EADJ;AAENC,IAAAA,KAAK,EAAE;AAFD,GAjFuB;AAqF/BpB,EAAAA,IAAI,EAAE;AACJoB,IAAAA,KAAK,EAAE;AADH;AArFyB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TouchableOpacity,\n} from \"react-native\";\nimport { Card, Overlay } from \"react-native-elements\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nimport { addLike, addDislike, getContent, editPost, } from \"../../redux/actions/content\";\n\nexport default function Item({ el }) {\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  const userId = user.userInfo.id;\n  const navigation = useNavigation();\n   \n  const title = useSelector(state => state.content);\n  const description = useSelector(state => state.content);\n  const postId = useSelector(state => state.content);\n  const [editFormPost, setEditFormPost] = useState({ status: false });\n  const [inputTitle, setInputTitle] = useState(title);\n  const [inputDescription, setInputDescription] = useState(description);\n\n  const [visible, setVisible] = useState(false); // for overlay\n  const toggleOverlay = () => {\n    setVisible(!visible);\n  };\n\n  const like = (userId, postId) => {\n    dispatch(addLike(userId, postId));\n  };\n  const dislike = (userId, postId) => {\n    dispatch(addDislike(userId, postId));\n  };\n\n  useEffect(() => {\n    dispatch(getContent());\n  }, [dispatch]);\n\n  return (\n    <Card containerStyle={styles.div}>\n      {userId === el.author ? (\n        <View>\n          <View>\n            <Overlay\n              overlayStyle={styles.overlayContainer}\n              isVisible={visible}\n              onBackdropPress={toggleOverlay}\n            >\n              <TouchableOpacity style={styles.overlayOpacity}>\n                <Text style={styles.overlayText}>Delete</Text>\n              </TouchableOpacity>\n              <TouchableOpacity style={styles.overlayOpacity}>\n                <Text style={styles.overlayText}>Edit</Text>\n              </TouchableOpacity>\n              <TouchableOpacity style={styles.cancleOpacity}>\n                <Text\n                  onPress={() => setVisible(prev => !prev)}\n                  style={styles.overlayText}\n                >\n                  Cancle\n                </Text>\n              </TouchableOpacity>\n            </Overlay>\n          </View>\n\n          <View style={styles.header_post}>\n            <Icon.Button\n              name=\"ellipsis-v\"\n              backgroundColor=\"#94a3b8\"\n              onPress={toggleOverlay}\n            ></Icon.Button>\n          </View>\n        </View>\n      ) : (\n        <View></View>\n      )}\n\n      <Card.Title style={styles.title1}>{el.title}</Card.Title>\n      <Card.Divider style={styles.hr} />\n\n      {el.content ? (\n        <Card.Image>\n          <Text style={{ marginBottom: 10 }}>{el.content}</Text>\n        </Card.Image>\n      ) : (\n        <View></View>\n      )}\n\n      <View style={styles.icons}>\n        <Icon.Button\n          name=\"thumbs-up\"\n          backgroundColor=\"#94a3b8\"\n          color=\"#e2e8f0\"\n          onPress={() => like(userId, el._id)}\n        >\n          <Text style={styles.text}> {el.likes.length}</Text>\n        </Icon.Button>\n\n        <Icon.Button\n          name=\"thumbs-down\"\n          backgroundColor=\"#94a3b8\"\n          onPress={() => dislike(userId, el._id)}\n        >\n          <Text style={styles.text}>{el.dislikes.length}</Text>\n        </Icon.Button>\n\n        <Icon.Button\n          name=\"comments\"\n          backgroundColor=\"#94a3b8\"\n          onPress={() => navigation.navigate(\"OnePostPage\", { el })}\n        >\n          <Text style={styles.text}>{el.comments.length}</Text>\n        </Icon.Button>\n      </View>\n      <Text style={styles.text}>Created by: {el.authorUsername}</Text>\n      <Text style={styles.text}>{el.date}</Text>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  overlayContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#1e293b\",\n    width: 270,\n    borderRadius: 8,\n    borderWidth: 2,\n    borderStyle: \"solid\",\n    borderColor: \"#543333\",\n  },\n\n  overlayText: {\n    margin: 3,\n    fontSize: 25,\n    color: \"#e2e8f0\",\n  },\n\n  cancleOpacity: {\n    backgroundColor: \"#543333\",\n    margin: 1,\n    width: 180,\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 5,\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderColor: \"#e2e8f0\",\n  },\n\n  overlayOpacity: {\n    backgroundColor: \"#334155\",\n    margin: 1,\n    width: 180,\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 5,\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderColor: \"#e2e8f0\",\n  },\n\n  edit_button: {\n    width: 30,\n    height: 40,\n    backgroundColor: \"gray\",\n  },\n\n  hr: {\n    backgroundColor: \"#e2e8f0\",\n    height: 1.3,\n  },\n\n  div: {\n    width: 300,\n    flexDirection: \"column\",\n    borderWidth: 2,\n    borderRadius: 5,\n    borderStyle: \"solid\",\n    borderColor: \"#e2e8f0\",\n    backgroundColor: \"#334155\",\n  },\n  header_post: {\n    flexDirection: \"column\",\n    alignSelf: \"flex-end\",\n    height: 20,\n    width: 17,\n  },\n  header_title: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignContent: \"center\",\n  },\n  icons: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    paddingHorizontal: 25,\n    marginBottom: 8,\n  },\n  title1: {\n    fontSize: 20,\n    color: \"#e2e8f0\",\n  },\n  text: {\n    color: \"#e2e8f0\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}