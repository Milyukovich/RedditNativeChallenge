{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/artur/elbrus/phase-3/\\u041F\\u0420\\u041E\\u0415\\u041A\\u0422\\u0412\\u0415\\u041A\\u0410/copy 2/RedditNativeChallenge/client/src/components/CreatePost/CreatePost.jsx\";\nimport React, { useState } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createPost } from \"../../redux/actions/content\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Multer from \"../Multer/Multer\";\nexport default function CreateNewPost() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var dispatch = useDispatch();\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  var userId = user.userInfo.id;\n  var navigation = useNavigation();\n\n  var loadScene = function loadScene() {\n    navigation.navigate(\"MainPage\");\n  };\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      title = _useState4[0],\n      setTitle = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      description = _useState6[0],\n      setDescription = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      tags = _useState8[0],\n      setTags = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      url = _useState10[0],\n      setUrl = _useState10[1];\n\n  var submtForm = function submtForm() {\n    if (title.trim() && description.trim()) {\n      var allTags = tags.split(\"#\");\n      allTags.forEach(function (el, index) {\n        allTags[index] = allTags[index].trim().toLowerCase();\n      });\n      var post = {\n        author: userId,\n        title: title,\n        description: description,\n        content: url,\n        tags: allTags,\n        uri: image == null ? void 0 : image.toString()\n      };\n      console.log(\"CREATEPOST\", post);\n\n      if (post.author) {}\n\n      dispatch(createPost(post));\n      setTitle(\"\");\n      setDescription(\"\");\n      setUrl(\"\");\n      setTags(\"\");\n      loadScene();\n    }\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setTitle(text);\n    },\n    value: title,\n    style: styles.input,\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setDescription(text);\n    },\n    value: description,\n    style: styles.multilineInput,\n    multiline: true,\n    placeholder: \"Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    onChangeText: function onChangeText(url) {\n      return setUrl(url);\n    },\n    value: url,\n    style: styles.multilineInput,\n    multiline: true,\n    placeholder: \"Url\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), image && React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      width: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setTags(text);\n    },\n    value: tags,\n    style: styles.input,\n    placeholder: \"Put some tags separated by ' # '\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), React.createElement(Multer, {\n    setImage: setImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: submtForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Create Post\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: 13,\n    backgroundColor: \"#111827\"\n  },\n  input: {\n    fontSize: 15,\n    paddingBottom: 7,\n    width: 240,\n    height: 50,\n    borderStyle: \"solid\",\n    borderRadius: 7,\n    borderWidth: 2,\n    borderColor: \"#f9fafb\",\n    color: \"#f9fafb\",\n    backgroundColor: \"#1f2937\"\n  },\n  multilineInput: {\n    fontSize: 15,\n    height: 100,\n    width: 240,\n    margin: 15,\n    color: \"#f9fafb\",\n    borderStyle: \"solid\",\n    borderColor: \"#f9fafb\",\n    borderWidth: 2,\n    borderRadius: 5,\n    backgroundColor: \"#1f2937\"\n  },\n  button: {\n    margin: 5,\n    marginHorizontal: 4,\n    backgroundColor: \"#475569\",\n    borderWidth: 2,\n    borderRadius: 5,\n    borderStyle: \"solid\",\n    borderColor: \"#61dafb\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  text: {\n    color: \"#f9fafb\",\n    margin: 3,\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["/home/artur/elbrus/phase-3/ПРОЕКТВЕКА/copy 2/RedditNativeChallenge/client/src/components/CreatePost/CreatePost.jsx"],"names":["React","useState","useSelector","useDispatch","createPost","useNavigation","Multer","CreateNewPost","image","setImage","dispatch","user","state","userId","userInfo","id","navigation","loadScene","navigate","title","setTitle","description","setDescription","tags","setTags","url","setUrl","submtForm","trim","allTags","split","forEach","el","index","toLowerCase","post","author","content","uri","toString","console","log","styles","container","text","input","multilineInput","width","button","StyleSheet","create","flex","alignItems","justifyContent","fontSize","backgroundColor","paddingBottom","height","borderStyle","borderRadius","borderWidth","borderColor","color","margin","marginHorizontal"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  SafeAreaView,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n  Text,\n  Image,\n} from \"react-native\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createPost } from \"../../redux/actions/content\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Multer from \"../Multer/Multer\";\n\nexport default function CreateNewPost() {\n  const [image, setImage] = useState(null);\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  const userId = user.userInfo.id;\n\n  const navigation = useNavigation();\n  const loadScene = () => {\n    navigation.navigate(\"MainPage\");\n  };\n\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [tags, setTags] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n\n  const submtForm = () => {\n    if (title.trim() && description.trim()) {\n      const allTags = tags.split(\"#\");\n      allTags.forEach((el, index) => {\n        allTags[index] = allTags[index].trim().toLowerCase();\n      });\n      const post = {\n        author: userId,\n        title,\n        description,\n        content: url,\n        tags: allTags,\n        uri: image?.toString(),\n      };\n      console.log(\"CREATEPOST\", post);\n      if (post.author) {\n        \n      }\n      dispatch(createPost(post));\n      setTitle(\"\");\n      setDescription(\"\");\n      setUrl(\"\");\n      setTags(\"\");\n      loadScene();\n    }\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <TextInput\n        onChangeText={text => setTitle(text)}\n        value={title}\n        style={styles.input}\n        placeholder=\"Title\"\n        // placeholderTextColor=\"#cff1f9\"\n      />\n      <TextInput\n        onChangeText={text => setDescription(text)}\n        value={description}\n        style={styles.multilineInput}\n        multiline={true}\n        placeholder=\"Description\"\n        // placeholderTextColor=\"#cff1f9\"\n      />\n\n      <TextInput\n        onChangeText={url => setUrl(url)}\n        value={url}\n        style={styles.multilineInput}\n        multiline={true}\n        placeholder=\"Url\"\n        // placeholderTextColor=\"#cff1f9\"\n      />\n      {image && <Image source={{ uri: image }} style={{ width: 200 }} />}\n\n      <TextInput\n        onChangeText={text => setTags(text)}\n        value={tags}\n        style={styles.input}\n        placeholder=\"Put some tags separated by ' # '\"\n        // placeholderTextColor=\"#cff1f9\"\n      />\n\n      <Multer setImage={setImage} />\n\n      <TouchableOpacity style={styles.button} onPress={submtForm}>\n        <Text style={styles.text}>Create Post</Text>\n      </TouchableOpacity>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: 13,\n    backgroundColor: \"#111827\",\n  },\n\n  input: {\n    fontSize: 15,\n    paddingBottom: 7,\n    width: 240,\n    height: 50,\n    borderStyle: \"solid\",\n    borderRadius: 7,\n    borderWidth: 2,\n    borderColor: \"#f9fafb\",\n    color: \"#f9fafb\",\n    backgroundColor: \"#1f2937\",\n  },\n\n  multilineInput: {\n    fontSize: 15,\n    height: 100,\n    width: 240,\n    margin: 15,\n    color: \"#f9fafb\",\n    borderStyle: \"solid\",\n    borderColor: \"#f9fafb\",\n    borderWidth: 2,\n    borderRadius: 5,\n    backgroundColor: \"#1f2937\",\n  },\n\n  button: {\n    margin: 5,\n    marginHorizontal: 4,\n    backgroundColor: \"#475569\",\n    borderWidth: 2,\n    borderRadius: 5,\n    borderStyle: \"solid\",\n    borderColor: \"#61dafb\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  text: {\n    color: \"#f9fafb\",\n    margin: 3,\n    fontSize: 20,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}