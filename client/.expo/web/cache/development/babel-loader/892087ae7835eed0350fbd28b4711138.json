{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/user/Documents/elbrus/phase 3/RedditNativeChallenge/client/src/components/OnePostPage/OnePostPage.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Card, Button, Input } from \"react-native-elements\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addLike, addDislike, getContent, editPost, addLikeComment, addDislikeComment } from \"../../redux/actions/content\";\nimport { createComMain, createComToCom } from \"../../redux/actions/comments\";\nimport AddCommentMenu from \"../AddCommentMenu/AddCommentMenu.jsx\";\nimport AddReplyMenu from \"../AddReplyMenu/AddReplyMenu\";\nexport default function Post(_ref) {\n  var _this = this;\n\n  var route = _ref.route;\n  var dispatch = useDispatch();\n  var navigation = useNavigation();\n\n  var _useState = useState({\n    status: true,\n    commentId: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputState = _useState2[0],\n      SetInputState = _useState2[1];\n\n  var mainId = route.params.el._id;\n  var posts = useSelector(function (state) {\n    return state.content;\n  });\n  var mainPost = posts.filter(function (post) {\n    return post._id == mainId;\n  })[0];\n  var comments = mainPost.comments;\n  var likes = mainPost.likes;\n  var userId = useSelector(function (state) {\n    return state.user.userInfo.id;\n  });\n\n  var likeComment = function likeComment(userId, commentId) {\n    dispatch(addLikeComment(userId, commentId));\n  };\n\n  var dislikeComment = function dislikeComment(userId, commentId) {\n    dispatch(addDislikeComment(userId, commentId));\n  };\n\n  var like = function like(userId, postId) {\n    dispatch(addLike(userId, postId));\n  };\n\n  var dislike = function dislike(userId, postId) {\n    dispatch(addDislike(userId, postId));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, React.createElement(Card, {\n    containerStyle: styles.div,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, React.createElement(Card.Title, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, mainPost.title), React.createElement(Card.Divider, {\n    style: styles.hr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), React.createElement(Card.Title, {\n    style: styles.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, mainPost.description), mainPost.content ? React.createElement(Card.Image, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, mainPost.content)) : React.createElement(React.Fragment, null), React.createElement(View, {\n    style: styles.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon.Button, {\n    color: \"#f9fafb\",\n    name: \"thumbs-up\",\n    backgroundColor: \"#1f2937\",\n    onPress: function onPress() {\n      like(userId, mainPost._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, likes.length)), React.createElement(Icon.Button, {\n    color: \"#f9fafb\",\n    name: \"thumbs-down\",\n    backgroundColor: \"#1f2937\",\n    onPress: function onPress() {\n      dislike(userId, mainPost._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, mainPost.dislikes.length))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.navigate(\"DetailPage\", {\n        el: mainPost.author\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"Created by: \", mainPost.author.userName)), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, mainPost.date)), comments.length ? React.createElement(React.Fragment, null, React.createElement(FlatList, {\n    data: comments,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, {\n        style: styles.mainComment,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }, React.createElement(Card, {\n        style: styles.mainComment,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.titleComm,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }, item.text), React.createElement(View, {\n        style: styles.icons,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      }, React.createElement(Icon.Button, {\n        name: \"thumbs-up\",\n        color: \"#f9fafb\",\n        \"thumbs-down\": true,\n        backgroundColor: \"#1f2937\",\n        onPress: function onPress() {\n          return likeComment(userId, item._id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }\n      }, item.likes.length)), React.createElement(Icon.Button, {\n        name: \"thumbs-down\",\n        color: \"#f9fafb\",\n        backgroundColor: \"#1f2937\",\n        onPress: function onPress() {\n          return dislikeComment(userId, item._id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }\n      }, item.dislikes.length)), React.createElement(Icon.Button, {\n        name: \"comments\",\n        color: \"#f9fafb\",\n        backgroundColor: \"#1f2937\",\n        onPress: function onPress() {\n          return SetInputState({\n            status: !inputState,\n            commentId: item._id\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }\n      }, item.comments.length))), React.createElement(Text, {\n        style: styles.text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }\n      }, \"Created by: \", item.creator.userName), React.createElement(Text, {\n        style: styles.text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }\n      }, \"Created at: \", item.date)), React.createElement(FlatList, {\n        data: item.comments,\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item;\n          return React.createElement(React.Fragment, null, React.createElement(View, {\n            style: {\n              flex: 1,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 25\n            }\n          }, React.createElement(View, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 27\n            }\n          }, React.createElement(Text, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }\n          }, item.text)), React.createElement(View, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 27\n            }\n          }, React.createElement(Text, {\n            style: styles.text,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }\n          }, \"Created by: \", item.creatorLogin), React.createElement(Text, {\n            style: styles.text,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }\n          }, \"Created at: \", item.date)), React.createElement(View, {\n            style: styles.icons,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 27\n            }\n          }, console.log(), React.createElement(Icon.Button, {\n            name: \"thumbs-up\",\n            \"thumbs-down\": true,\n            backgroundColor: \"gray\",\n            onPress: function onPress() {\n              return likeComment(userId, item._id);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }\n          }, item.likes.length), React.createElement(Icon.Button, {\n            name: \"thumbs-down\",\n            backgroundColor: \"gray\",\n            onPress: function onPress() {\n              return dislikeComment(userId, item._id);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }\n          }, item.dislikes.length), React.createElement(Icon.Button, {\n            name: \"comments\",\n            backgroundColor: \"gray\",\n            onPress: function onPress() {\n              return SetInputState({\n                status: !inputState,\n                commentId: item._id\n              });\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }\n          }, item.comments.length), React.createElement(Icon.Button, {\n            name: \"ellipsis-h\",\n            backgroundColor: \"gray\",\n            onPress: function onPress() {\n              return console.log(\"comment\");\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }\n          }))));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 19\n        }\n      }));\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  })) : React.createElement(React.Fragment, null), console.log(767676, inputState), inputState.status ? React.createElement(AddCommentMenu, {\n    userId: userId,\n    postId: mainPost._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 11\n    }\n  }) : React.createElement(AddReplyMenu, {\n    userId: userId,\n    postId: mainPost._id,\n    fathercomment: inputState.commentId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  mainComment: {\n    width: 300,\n    flexDirection: \"column\",\n    borderWidth: 2,\n    borderRadius: 5,\n    borderStyle: \"solid\",\n    borderColor: \"#f9fafb\",\n    backgroundColor: \"#1f2937\"\n  },\n  div: {\n    width: 400,\n    flexDirection: \"column\",\n    borderWidth: 2,\n    borderRadius: 5,\n    borderStyle: \"solid\",\n    borderColor: \"#f9fafb\",\n    backgroundColor: \"#1f2937\"\n  },\n  container: {\n    flex: 1,\n    paddingTop: 20,\n    alignItems: \"center\",\n    fontSize: 13,\n    backgroundColor: \"#111827\",\n    height: 200\n  },\n  hr: {\n    backgroundColor: \"#61dafb\",\n    height: 1.3\n  },\n  title: {\n    fontSize: 25,\n    color: \"#f9fafb\"\n  },\n  description: {\n    color: \"#f9fafb\",\n    fontSize: 20\n  },\n  text: {\n    color: \"#f9fafb\"\n  },\n  titleComm: {\n    fontSize: 17,\n    color: \"#f9fafb\"\n  },\n  icons: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  content: {\n    height: 200,\n    borderWidth: 4,\n    borderColor: \"white\",\n    marginBottom: 10\n  }\n});","map":{"version":3,"sources":["/Users/user/Documents/elbrus/phase 3/RedditNativeChallenge/client/src/components/OnePostPage/OnePostPage.js"],"names":["React","useContext","useEffect","useState","useNavigation","Card","Button","Input","Icon","useDispatch","useSelector","addLike","addDislike","getContent","editPost","addLikeComment","addDislikeComment","createComMain","createComToCom","AddCommentMenu","AddReplyMenu","Post","route","dispatch","navigation","status","commentId","inputState","SetInputState","mainId","params","el","_id","posts","state","content","mainPost","filter","post","comments","likes","userId","user","userInfo","id","likeComment","dislikeComment","like","postId","dislike","styles","container","div","title","hr","description","icons","text","length","dislikes","navigate","author","userName","date","item","mainComment","titleComm","creator","flex","flexDirection","justifyContent","creatorLogin","console","log","StyleSheet","create","width","borderWidth","borderRadius","borderStyle","borderColor","backgroundColor","paddingTop","alignItems","fontSize","height","color","marginBottom"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Card, Button, Input } from \"react-native-elements\";\n\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  FlatList,\n  TouchableOpacity,\n  Image,\n} from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  addLike,\n  addDislike,\n  getContent,\n  editPost,\n  addLikeComment,\n  addDislikeComment,\n} from \"../../redux/actions/content\";\n\nimport { createComMain, createComToCom } from \"../../redux/actions/comments\";\nimport AddCommentMenu from \"../AddCommentMenu/AddCommentMenu.jsx\";\nimport AddReplyMenu from \"../AddReplyMenu/AddReplyMenu\";\n\nexport default function Post({ route }) {\n  const dispatch = useDispatch();\n  const navigation = useNavigation();\n\n  const [inputState, SetInputState] = useState({\n    status: true,\n    commentId: null,\n  });\n\n  const mainId = route.params.el._id;\n\n  const posts = useSelector(state => state.content);\n  const mainPost = posts.filter(post => post._id == mainId)[0];\n  const comments = mainPost.comments;\n  // console.log(\"COMMENTI\", comments);\n  const likes = mainPost.likes;\n  const userId = useSelector(state => state.user.userInfo.id);\n\n  const likeComment = (userId, commentId) => {\n    dispatch(addLikeComment(userId, commentId));\n  };\n  const dislikeComment = (userId, commentId) => {\n    dispatch(addDislikeComment(userId, commentId));\n  };\n\n  const like = (userId, postId) => {\n    dispatch(addLike(userId, postId));\n  };\n  const dislike = (userId, postId) => {\n    dispatch(addDislike(userId, postId));\n  };\n\n  // useEffect(() => {\n  //   dispatch(getContent());\n  // }, []);\n\n  return (\n    <View style={styles.container}>\n      <Card containerStyle={styles.div}>\n        <Card.Title style={styles.title}>{mainPost.title}</Card.Title>\n        <Card.Divider style={styles.hr} />\n        <Card.Title style={styles.description}>\n          {mainPost.description}\n        </Card.Title>\n\n        {mainPost.content ? (\n          <Card.Image>\n            <Text>{mainPost.content}</Text>\n          </Card.Image>\n        ) : (\n          <></>\n        )}\n\n        {/* //   {mainPost.content ? (\n      //   <Image source={{ uri: mainPost.content }} style={{ height: 200 }} />\n      // ) : (\n      //   <></>\n      // )} */}\n\n        <View style={styles.icons}>\n          <Icon.Button\n            color={\"#f9fafb\"}\n            name=\"thumbs-up\"\n            backgroundColor=\"#1f2937\"\n            onPress={() => {\n              like(userId, mainPost._id)\n            }}\n          >\n            <Text style={styles.text}>{likes.length}</Text>\n          </Icon.Button>\n          <Icon.Button\n            color={\"#f9fafb\"}\n            name=\"thumbs-down\"\n            backgroundColor=\"#1f2937\"\n            onPress={() => {\n              dislike(userId, mainPost._id)\n            }}\n          >\n            <Text style={styles.text}>{mainPost.dislikes.length}</Text>\n          </Icon.Button>\n        </View>\n        <TouchableOpacity\n          onPress={() => {\n            navigation.navigate(\"DetailPage\", {\n              el: mainPost.author,\n            });\n          }}\n        >\n          <Text style={styles.text}>\n            Created by: {mainPost.author.userName}\n          </Text>\n        </TouchableOpacity>\n        <Text style={styles.text}>{mainPost.date}</Text>\n      </Card>\n\n      {/* <Text style={{ alignItems: \"center\", justifyContent: \"center\" }}>\n        tuta\n      </Text> */}\n      {\n        comments.length ? (\n          <>\n            <FlatList\n              data={comments}\n              renderItem={({ item }) => (\n                <View  style={styles.mainComment}>\n                  <Card style={styles.mainComment}>\n                    <Text style={styles.titleComm}>{item.text}</Text>\n                    <View style={styles.icons}>\n                      <Icon.Button\n                        name=\"thumbs-up\"\n                        color={\"#f9fafb\"}\n                        thumbs-down\n                        backgroundColor=\"#1f2937\"\n                        onPress={() => likeComment(userId, item._id)}\n                      >\n                        <Text style={styles.text}>{item.likes.length}</Text>\n                      </Icon.Button>\n                      <Icon.Button\n                        name=\"thumbs-down\"\n                        color={\"#f9fafb\"}\n                        backgroundColor=\"#1f2937\"\n                        onPress={() => dislikeComment(userId, item._id)}\n                      >\n                        <Text style={styles.text}>{item.dislikes.length}</Text>\n                      </Icon.Button>\n                      <Icon.Button\n                        name=\"comments\"\n                        color={\"#f9fafb\"}\n                        backgroundColor=\"#1f2937\"\n                        onPress={() =>\n                          SetInputState({\n                            status: !inputState,\n                            commentId: item._id,\n                          })\n                        }\n                      >\n                        <Text style={styles.text}>{item.comments.length}</Text>\n                      </Icon.Button>\n                    </View>\n\n                    <Text style={styles.text}>\n                      Created by: {item.creator.userName}\n                    </Text>\n                    <Text style={styles.text}>Created at: {item.date}</Text>\n                  </Card>\n\n                  <FlatList\n                    data={item.comments}\n                    renderItem={({ item }) => (\n                      <>\n                        <View\n                          style={{\n                            flex: 1,\n                            flexDirection: \"row\",\n                            justifyContent: \"space-between\",\n                          }}\n                        >\n                          <View>\n                            <Text>{item.text}</Text>\n                          </View>\n\n                          <View>\n                            <Text style={styles.text}>\n                              Created by: {item.creatorLogin}\n                            </Text>\n                            <Text style={styles.text}>\n                              Created at: {item.date}\n                            </Text>\n                          </View>\n                          <View style={styles.icons}>\n                            {console.log()}\n                            <Icon.Button\n                              name=\"thumbs-up\"\n                              thumbs-down\n                              backgroundColor=\"gray\"\n                              onPress={() => likeComment(userId, item._id)}\n                            >\n                              {item.likes.length}\n                            </Icon.Button>\n                            <Icon.Button\n                              name=\"thumbs-down\"\n                              backgroundColor=\"gray\"\n                              onPress={() => dislikeComment(userId, item._id)}\n                            >\n                              {item.dislikes.length}\n                            </Icon.Button>\n                            <Icon.Button\n                              name=\"comments\"\n                              backgroundColor=\"gray\"\n                              onPress={() =>\n                                SetInputState({\n                                  status: !inputState,\n                                  commentId: item._id,\n                                })\n                              }\n                            >\n                              {item.comments.length}\n                            </Icon.Button>\n                            <Icon.Button\n                              name=\"ellipsis-h\"\n                              backgroundColor=\"gray\"\n                              onPress={() => console.log(\"comment\")}\n                            ></Icon.Button>\n                          </View>\n                        </View>\n                      </>\n                    )}\n                  />\n                </View>\n              )}\n              keyExtractor={item => item.id}\n            />\n\n            {/* <Input\n            value={comment}\n            onChangeText={text => setComment(text)}\n            placeholder=\"Текст комментария\"\n            />\n            <Button\n            onPress={() => {\n              createComment();\n            }}\n            title=\"Отправить комментарий\"\n          /> */}\n          </>\n        ) : (\n          <></>\n        )\n      }\n      {console.log(767676, inputState)}\n      {\n        inputState.status ? (\n          <AddCommentMenu userId={userId} postId={mainPost._id} />\n        ) : (\n          <AddReplyMenu\n            userId={userId}\n            postId={mainPost._id}\n            fathercomment={inputState.commentId}\n          />\n        )\n      }\n    </View >\n  );\n}\n\nconst styles = StyleSheet.create({\n  mainComment: {\n    width: 300,\n    flexDirection: \"column\",\n    borderWidth: 2,\n    borderRadius: 5,\n    borderStyle: \"solid\",\n    borderColor: \"#f9fafb\",\n    backgroundColor: \"#1f2937\",\n  },\n  //post container\n  div: {\n    width: 400,\n    flexDirection: \"column\",\n    borderWidth: 2,\n    borderRadius: 5,\n    borderStyle: \"solid\",\n    borderColor: \"#f9fafb\",\n    backgroundColor: \"#1f2937\",\n  },\n  // all data\n  container: {\n    flex: 1,\n    paddingTop: 20,\n    alignItems: \"center\",\n    fontSize: 13,\n    backgroundColor: \"#111827\",\n    height: 200,\n  },\n\n  hr: {\n    backgroundColor: \"#61dafb\",\n    height: 1.3,\n  },\n\n  title: {\n    fontSize: 25,\n    color: \"#f9fafb\",\n  },\n\n  description: {\n    color: \"#f9fafb\",\n    fontSize: 20,\n  },\n\n  text: {\n    color: \"#f9fafb\",\n  },\n\n  titleComm: {\n    fontSize: 17,\n    color: \"#f9fafb\",\n  },\n\n  icons: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n  content: {\n    // width: 270,\n    height: 200,\n    // borderRadius: 63,\n    borderWidth: 4,\n    borderColor: \"white\",\n    marginBottom: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}