{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport apiService from \"../../api/apiService\";\nimport { GET_CONTENT_START, POST_CREATE, SET_LIKE_ADD, SET_DISLIKE_ADD, EDIT_POST, DELETE_POST, CREATE_COMMENT, CREATE_COMMENT_TO_COMMENT, SET_DISLIKE_TO_COMMENT, SET_LIKE_TO_COMMENT, DISABLE_LOADER, ENABLE_LOADER } from \"../types/content\";\n\nvar enableLoader = function enableLoader() {\n  return {\n    type: ENABLE_LOADER\n  };\n};\n\nvar disableLoader = function disableLoader() {\n  return {\n    type: DISABLE_LOADER\n  };\n};\n\nvar getContentStart = function getContentStart(payload) {\n  return {\n    type: GET_CONTENT_START,\n    payload: payload\n  };\n};\n\nvar getPostCreate = function getPostCreate(payload) {\n  return {\n    type: POST_CREATE,\n    payload: payload\n  };\n};\n\nvar setLike = function setLike(currPost) {\n  return {\n    type: SET_LIKE_ADD,\n    payload: currPost\n  };\n};\n\nvar setDislike = function setDislike(currPost) {\n  return {\n    type: SET_DISLIKE_ADD,\n    payload: currPost\n  };\n};\n\nvar getPostEdit = function getPostEdit(payload) {\n  return {\n    type: EDIT_POST,\n    payload: payload\n  };\n};\n\nvar getPostDelete = function getPostDelete(payload) {\n  return {\n    type: DELETE_POST,\n    payload: payload\n  };\n};\n\nvar getCommentCreate = function getCommentCreate(payload) {\n  return {\n    type: CREATE_COMMENT,\n    payload: payload\n  };\n};\n\nvar getComToComtCreate = function getComToComtCreate(payload) {\n  return {\n    type: CREATE_COMMENT_TO_COMMENT,\n    payload: payload\n  };\n};\n\nvar setLikeToComment = function setLikeToComment(currComment) {\n  return {\n    type: SET_LIKE_TO_COMMENT,\n    payload: currComment\n  };\n};\n\nvar setDislikeToComment = function setDislikeToComment(currComment) {\n  return {\n    type: SET_DISLIKE_TO_COMMENT,\n    payload: currComment\n  };\n};\n\nexport var getContent = function getContent() {\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch(enableLoader());\n            console.log(\"GET\");\n            apiService.get(\"/post\").then(function (_ref) {\n              var data = _ref.data;\n              console.log(\"getDATA\", data);\n              dispatch(getContentStart(data));\n            });\n            dispatch(disableLoader());\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var createPost = function createPost(description) {\n  return function _callee2(dispatch) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            apiService.post(\"/post/add\", description).then(function (_ref2) {\n              var data = _ref2.data;\n              console.log(\"createPostDATA\", data);\n              dispatch(getPostCreate(data));\n            });\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var addLike = function addLike(idUser, idPost) {\n  return function _callee3(dispatch) {\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log(\"addLike\", {\n              idUser: idUser,\n              idPost: idPost\n            });\n            apiService.patch(\"/post/likes\", {\n              idUser: idUser,\n              idPost: idPost\n            }).then(function (_ref3) {\n              var data = _ref3.data;\n              return dispatch(setLike(data.currPost));\n            });\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var addDislike = function addDislike(idUser, idPost) {\n  return function _callee4(dispatch) {\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            apiService.patch(\"/post/dislikes\", {\n              idUser: idUser,\n              idPost: idPost\n            }).then(function (_ref4) {\n              var data = _ref4.data;\n              return dispatch(setDislike(data.currPost));\n            });\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var editPost = function editPost(post) {\n  return function _callee5(dispatch) {\n    return _regeneratorRuntime.async(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            apiService.patch(\"/post/edit\", {\n              post: post\n            }).then(function (_ref5) {\n              var data = _ref5.data;\n              return dispatch(getPostEdit(data));\n            });\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var deletePost = function deletePost(id) {\n  return function _callee6(dispatch) {\n    return _regeneratorRuntime.async(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            apiService.delete(\"/post/delete\", {\n              data: {\n                id: id\n              }\n            }).then(function (_ref6) {\n              var data = _ref6.data;\n              return dispatch(getPostDelete(data));\n            });\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var createComMain = function createComMain(description) {\n  return function _callee7(dispatch) {\n    return _regeneratorRuntime.async(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            apiService.post(\"/comment/add\", description).then(function (_ref7) {\n              var data = _ref7.data;\n              dispatch(getCommentCreate({\n                data: data,\n                description: description\n              }));\n            });\n\n          case 1:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var createComToCom = function createComToCom(description) {\n  return function _callee8(dispatch) {\n    return _regeneratorRuntime.async(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            apiService.post(\"/comment/addcomtocom\", description).then(function (_ref8) {\n              var data = _ref8.data;\n              console.log(\"DATA\", data, description);\n              dispatch(getComToComtCreate({\n                data: data,\n                description: description\n              }));\n            });\n\n          case 1:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var addLikeComment = function addLikeComment(userId, commentId) {\n  return function _callee9(dispatch) {\n    return _regeneratorRuntime.async(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            apiService.patch(\"/post/likescomment\", {\n              userId: userId,\n              commentId: commentId\n            }).then(function (_ref9) {\n              var data = _ref9.data;\n              console.log(\"11DATA\", data);\n              dispatch(setLikeToComment(data.currComment));\n            });\n\n          case 1:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var addDislikeComment = function addDislikeComment(userId, commentId) {\n  return function _callee10(dispatch) {\n    return _regeneratorRuntime.async(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            apiService.patch(\"/post/dislikescomment\", {\n              userId: userId,\n              commentId: commentId\n            }).then(function (_ref10) {\n              var data = _ref10.data;\n              return dispatch(setDislikeToComment(data.currComment));\n            });\n\n          case 1:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["/home/artur/elbrus/phase-3/ПРОЕКТВЕКА/copy 2/RedditNativeChallenge/client/src/redux/actions/content.js"],"names":["apiService","GET_CONTENT_START","POST_CREATE","SET_LIKE_ADD","SET_DISLIKE_ADD","EDIT_POST","DELETE_POST","CREATE_COMMENT","CREATE_COMMENT_TO_COMMENT","SET_DISLIKE_TO_COMMENT","SET_LIKE_TO_COMMENT","DISABLE_LOADER","ENABLE_LOADER","enableLoader","type","disableLoader","getContentStart","payload","getPostCreate","setLike","currPost","setDislike","getPostEdit","getPostDelete","getCommentCreate","getComToComtCreate","setLikeToComment","currComment","setDislikeToComment","getContent","dispatch","console","log","get","then","data","createPost","description","post","addLike","idUser","idPost","patch","addDislike","editPost","deletePost","id","delete","createComMain","createComToCom","addLikeComment","userId","commentId","addDislikeComment"],"mappings":"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","sourcesContent":["import apiService from \"../../api/apiService\";\nimport {\n  GET_CONTENT_START,\n  POST_CREATE,\n  SET_LIKE_ADD,\n  SET_DISLIKE_ADD,\n  EDIT_POST,\n  DELETE_POST,\n  CREATE_COMMENT,\n  CREATE_COMMENT_TO_COMMENT,\n  SET_DISLIKE_TO_COMMENT,\n  SET_LIKE_TO_COMMENT,\n  DISABLE_LOADER,\n  ENABLE_LOADER,\n} from \"../types/content\";\n\nconst enableLoader = () => ({ type: ENABLE_LOADER });\nconst disableLoader = () => ({ type: DISABLE_LOADER });\n\nconst getContentStart = payload => ({ type: GET_CONTENT_START, payload });\nconst getPostCreate = payload => ({ type: POST_CREATE, payload });\nconst setLike = currPost => ({\n  type: SET_LIKE_ADD,\n  payload: currPost,\n});\nconst setDislike = currPost => ({\n  type: SET_DISLIKE_ADD,\n  payload: currPost,\n});\nconst getPostEdit = payload => ({ type: EDIT_POST, payload });\nconst getPostDelete = payload => ({ type: DELETE_POST, payload });\n\nconst getCommentCreate = payload => ({ type: CREATE_COMMENT, payload });\nconst getComToComtCreate = payload => ({\n  type: CREATE_COMMENT_TO_COMMENT,\n  payload,\n});\n\nconst setLikeToComment = currComment => ({\n  type: SET_LIKE_TO_COMMENT,\n  payload: currComment,\n});\nconst setDislikeToComment = currComment => ({\n  type: SET_DISLIKE_TO_COMMENT,\n  payload: currComment,\n});\n\nexport const getContent = () => async dispatch => {\n  dispatch(enableLoader());\n\n  console.log(\"GET\");\n  apiService.get(\"/post\").then(({ data }) => {\n    console.log(\"getDATA\", data);\n    dispatch(getContentStart(data));\n  });\n\n  dispatch(disableLoader());\n};\n\nexport const createPost = description => async dispatch => {\n  apiService.post(\"/post/add\", description).then(({ data }) => {\n    console.log(\"createPostDATA\", data);\n    dispatch(getPostCreate(data));\n  });\n};\n\nexport const addLike = (idUser, idPost) => async dispatch => {\n  console.log(\"addLike\", { idUser, idPost });\n  apiService\n    .patch(\"/post/likes\", { idUser, idPost })\n    .then(({ data }) => dispatch(setLike(data.currPost)));\n};\n\nexport const addDislike = (idUser, idPost) => async dispatch => {\n  apiService\n    .patch(\"/post/dislikes\", { idUser, idPost })\n    .then(({ data }) => dispatch(setDislike(data.currPost)));\n};\n\nexport const editPost = post => async dispatch => {\n  apiService\n    .patch(\"/post/edit\", { post })\n    .then(({ data }) => dispatch(getPostEdit(data)));\n};\n\nexport const deletePost = id => async dispatch => {\n  apiService\n    .delete(\"/post/delete\", { data: { id } })\n    .then(({ data }) => dispatch(getPostDelete(data)));\n};\n\nexport const createComMain = description => async dispatch => {\n  apiService.post(\"/comment/add\", description).then(({ data }) => {\n    dispatch(getCommentCreate({ data, description }));\n  });\n};\n\nexport const createComToCom = description => async dispatch => {\n  apiService.post(\"/comment/addcomtocom\", description).then(({ data }) => {\n    console.log(\"DATA\", data, description);\n    dispatch(getComToComtCreate({ data, description }));\n  });\n};\n\nexport const addLikeComment = (userId, commentId) => async dispatch => {\n  apiService\n    .patch(\"/post/likescomment\", { userId, commentId })\n    .then(({ data }) => {\n      console.log(\"11DATA\", data);\n      dispatch(setLikeToComment(data.currComment));\n    });\n};\n\nexport const addDislikeComment = (userId, commentId) => async dispatch => {\n  apiService\n    .patch(\"/post/dislikescomment\", { userId, commentId })\n    .then(({ data }) => dispatch(setDislikeToComment(data.currComment)));\n};\n"]},"metadata":{},"sourceType":"module"}