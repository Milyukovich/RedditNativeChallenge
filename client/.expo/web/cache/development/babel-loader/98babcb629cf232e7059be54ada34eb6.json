{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_CONTENT_START, POST_CREATE, SET_LIKE_ADD, SET_DISLIKE_ADD, CREATE_COMMENT, CREATE_COMMENT_TO_COMMENT, EDIT_POST, DELETE_POST } from \"../types/content\";\nvar initialState = [];\n\nvar contentReducer = function contentReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case GET_CONTENT_START:\n      {\n        return payload;\n      }\n\n    case POST_CREATE:\n      {\n        return [].concat(_toConsumableArray(state), [payload]);\n      }\n\n    case SET_LIKE_ADD:\n      {\n        return state.map(function (el) {\n          return el._id === payload._id ? payload : el;\n        });\n      }\n\n    case SET_DISLIKE_ADD:\n      {\n        return state.map(function (el) {\n          return el._id === payload._id ? payload : el;\n        });\n      }\n\n    case CREATE_COMMENT:\n      {\n        var text = payload.text,\n            autorId = payload.autorId,\n            postId = payload.postId;\n        return state.map(function (el) {\n          return el._id == postId ? _objectSpread(_objectSpread({}, el), {}, {\n            comments: [].concat(_toConsumableArray(el.comments), [{\n              text: text,\n              autor: autorId\n            }])\n          }) : el;\n        });\n      }\n\n    case CREATE_COMMENT_TO_COMMENT:\n      {\n        var comment = payload.data;\n        var mainId = payload.description.mainId;\n        return state.map(function (el) {\n          return el._id == mainId ? _objectSpread(_objectSpread({}, el), {}, {\n            comments: _toConsumableArray(el.comments.map(function (el) {\n              return el._id == payload.description.commentId ? _objectSpread(_objectSpread({}, el), {}, {\n                comments: [].concat(_toConsumableArray(el.comments), [comment])\n              }) : el;\n            }))\n          }) : el;\n        });\n      }\n\n    case EDIT_POST:\n      {\n        var postInfo = action.payload;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          postInfo: postInfo\n        });\n      }\n\n    case DELETE_POST:\n      {\n        var id = action.payload.id;\n        console.log('=========', action.payload);\n        var newPostState = state.filter(function (el) {\n          return el.id !== id;\n        });\n        return newPostState;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default contentReducer;","map":{"version":3,"sources":["/Users/user/elbrus/PHASE 3/RedditNativeChallenge/client/src/redux/reduce/contentReducer.js"],"names":["GET_CONTENT_START","POST_CREATE","SET_LIKE_ADD","SET_DISLIKE_ADD","CREATE_COMMENT","CREATE_COMMENT_TO_COMMENT","EDIT_POST","DELETE_POST","initialState","contentReducer","state","action","type","payload","map","el","_id","text","autorId","postId","comments","autor","comment","data","mainId","description","commentId","postInfo","id","console","log","newPostState","filter"],"mappings":"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","sourcesContent":["import {\n  GET_CONTENT_START,\n  POST_CREATE,\n  SET_LIKE_ADD,\n  SET_DISLIKE_ADD,\n  CREATE_COMMENT,\n  CREATE_COMMENT_TO_COMMENT,\n  EDIT_POST,\n  DELETE_POST,\n} from \"../types/content\";\n\nconst initialState = [];\n\nconst contentReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_CONTENT_START: {\n      return payload;\n    }\n    case POST_CREATE: {\n      return [...state, payload];\n    }\n    case SET_LIKE_ADD: {\n      return state.map(el => (el._id === payload._id ? payload : el));\n    }\n\n    case SET_DISLIKE_ADD: {\n      return state.map(el => (el._id === payload._id ? payload : el));\n    }\n\n    case CREATE_COMMENT: {\n      const { text, autorId, postId } = payload;\n      return state.map(el =>\n        el._id == postId\n          ? { ...el, comments: [...el.comments, { text, autor: autorId }] }\n          : el\n      );\n    }\n    case CREATE_COMMENT_TO_COMMENT: {\n      const comment = payload.data;\n      const mainId = payload.description.mainId;\n      return state.map(el =>\n        el._id == mainId\n          ? {\n              ...el,\n              comments: [\n                ...el.comments.map(el =>\n                  el._id == payload.description.commentId\n                    ? {\n                        ...el,\n                        comments: [...el.comments, comment],\n                      }\n                    : el\n                ),\n              ],\n            }\n          : el\n      );\n    }\n\n    case EDIT_POST: {\n      const postInfo = action.payload;\n      return { ...state, postInfo };\n    }\n\n    case DELETE_POST: {\n      const {id} = action.payload\n      console.log('=========', action.payload);\n      const newPostState = state.filter(el => el.id !== id)\n      return newPostState\n    }\n\n\n\n    default:\n      return state;\n  }\n};\nexport default contentReducer;\n"]},"metadata":{},"sourceType":"module"}