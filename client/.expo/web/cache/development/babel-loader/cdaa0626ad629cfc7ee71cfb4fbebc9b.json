{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/user/Documents/elbrus/phase 3/RedditNativeChallenge/client/src/components/CreatePost/CreatePost.jsx\";\nimport React, { useState } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createPost } from \"../../redux/actions/content\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport moment from \"moment\";\nexport default function CreateNewPost() {\n  var dispatch = useDispatch();\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  var navigation = useNavigation();\n\n  var loadScene = function loadScene() {\n    navigation.navigate(\"MainPage\");\n  };\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      description = _useState4[0],\n      setDescription = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tags = _useState6[0],\n      setTags = _useState6[1];\n\n  var submtForm = function submtForm() {\n    if (title.trim() && description.trim()) {\n      var allTags = tags.split(\"#\");\n      all;\n      var post = {\n        author: user.id,\n        title: title,\n        description: description,\n        date: moment().endOf(\"day\").fromNow(),\n        tags: allTags\n      };\n      setTitle(\"\");\n      setDescription(\"\");\n      setTags(\"\");\n      dispatch(createPost(post));\n      loadScene();\n    }\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setTitle(text);\n    },\n    value: title,\n    style: styles.input,\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setDescription(text);\n    },\n    value: description,\n    style: styles.multilineInput,\n    multiline: true,\n    placeholder: \"Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setTags(text);\n    },\n    value: tags,\n    style: styles.input,\n    placeholder: \"Put some tags separated by ' # '\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: submtForm,\n    style: styles.button,\n    title: \"Create Post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 20\n  },\n  input: {\n    height: 40,\n    margin: 15,\n    borderStyle: \"solid\",\n    borderColor: \"#3949ab\",\n    borderWidth: 2,\n    borderRadius: 5\n  },\n  multilineInput: {\n    height: 100,\n    margin: 15,\n    borderStyle: \"solid\",\n    borderColor: \"#3949ab\",\n    borderWidth: 2,\n    borderRadius: 5\n  },\n  button: {\n    margin: 15\n  }\n});","map":{"version":3,"sources":["/Users/user/Documents/elbrus/phase 3/RedditNativeChallenge/client/src/components/CreatePost/CreatePost.jsx"],"names":["React","useState","useSelector","useDispatch","createPost","useNavigation","moment","CreateNewPost","dispatch","user","state","navigation","loadScene","navigate","title","setTitle","description","setDescription","tags","setTags","submtForm","trim","allTags","split","all","post","author","id","date","endOf","fromNow","styles","container","text","input","multilineInput","button","StyleSheet","create","flex","marginTop","height","margin","borderStyle","borderColor","borderWidth","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  SafeAreaView,\n  StyleSheet,\n  TextInput,\n  Button,\n  Alert,\n} from \"react-native\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createPost } from \"../../redux/actions/content\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport moment from \"moment\";\n\nexport default function CreateNewPost() {\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n\n  const navigation = useNavigation();\n\n  const loadScene = () => {\n    navigation.navigate(\"MainPage\");\n  };\n\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [tags, setTags] = useState(\"\");\n\n  const submtForm = () => {\n    if (title.trim() && description.trim()) {\n      const allTags = tags.split(\"#\");\n      all\n      const post = {\n        author: user.id,\n        title: title,\n        description: description,\n        date: moment().endOf(\"day\").fromNow(),\n        tags: allTags,\n      };\n      setTitle(\"\");\n      setDescription(\"\");\n      setTags(\"\");\n      dispatch(createPost(post));\n      loadScene();\n    }\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <TextInput\n        onChangeText={text => setTitle(text)}\n        value={title}\n        style={styles.input}\n        placeholder=\"Title\"\n      />\n      <TextInput\n        onChangeText={text => setDescription(text)}\n        value={description}\n        style={styles.multilineInput}\n        multiline={true}\n        placeholder=\"Description\"\n      />\n\n      <TextInput\n        onChangeText={text => setTags(text)}\n        value={tags}\n        style={styles.input}\n        placeholder=\"Put some tags separated by ' # '\"\n      />\n\n      <Button onPress={submtForm} style={styles.button} title=\"Create Post\" />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 20,\n  },\n\n  input: {\n    height: 40,\n    margin: 15,\n    borderStyle: \"solid\",\n    borderColor: \"#3949ab\",\n    borderWidth: 2,\n    borderRadius: 5,\n  },\n\n  multilineInput: {\n    height: 100,\n    margin: 15,\n    borderStyle: \"solid\",\n    borderColor: \"#3949ab\",\n    borderWidth: 2,\n    borderRadius: 5,\n  },\n\n  button: {\n    margin: 15,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}