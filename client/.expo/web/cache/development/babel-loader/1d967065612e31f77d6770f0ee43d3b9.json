{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/user/elbrus/PHASE 3/RedditNativeChallenge/client/src/components/OnePostPage/OnePostPage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Card, Button, Input } from \"react-native-elements\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addLike, addDislike, getContent } from \"../../redux/actions/content\";\nimport { createComMain, createComToCom } from \"../../redux/actions/comments\";\nexport default function Post(_ref) {\n  var _this = this;\n\n  var route = _ref.route;\n  var dispatch = useDispatch();\n  var mainId = route.params.el._id;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      comment = _useState2[0],\n      setComment = _useState2[1];\n\n  var posts = useSelector(function (state) {\n    return state.content;\n  });\n  var mainPost = posts.filter(function (post) {\n    return post._id == mainId;\n  })[0];\n  var comments = mainPost.comments;\n  var likes = mainPost.likes;\n  var userId = useSelector(function (state) {\n    return state.user.userInfo.id;\n  });\n\n  var createComment = function createComment() {\n    if (comment.trim().length > 5) {\n      var post = {\n        text: comment,\n        autorId: userId,\n        postId: mainPost._id\n      };\n      dispatch(createComMain(post));\n    }\n  };\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      commentToComment = _useState4[0],\n      setCommentToComment = _useState4[1];\n\n  var createCommentToComment = function createCommentToComment(commentId) {\n    if (commentToComment.trim().length > 5) {\n      var _comment = {\n        text: commentToComment,\n        autorId: userId,\n        commentId: commentId,\n        mainId: mainId\n      };\n      dispatch(createComToCom(_comment));\n    }\n  };\n\n  var like = function like(userId, postId) {\n    dispatch(addLike(userId, postId));\n  };\n\n  var dislike = function dislike(userId, postId) {\n    dispatch(addDislike(userId, postId));\n  };\n\n  useEffect(function () {\n    dispatch(getContent());\n  }, [dispatch]);\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, mainPost.title), React.createElement(Card.Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), React.createElement(Card.Image, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, mainPost.description)), React.createElement(View, {\n    style: styles.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon.Button, {\n    name: \"thumbs-up\",\n    \"thumbs-down\": true,\n    backgroundColor: \"gray\",\n    onPress: function onPress() {\n      return like(userId, mainPost._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, likes.length), React.createElement(Icon.Button, {\n    name: \"thumbs-down\",\n    backgroundColor: \"gray\",\n    onPress: function onPress() {\n      return dislike(userId, mainPost._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, mainPost.dislikes.length), React.createElement(Icon.Button, {\n    name: \"comments\",\n    backgroundColor: \"gray\",\n    onPress: function onPress() {\n      return console.log(\"comment\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, mainPost.comments.length), React.createElement(Icon.Button, {\n    name: \"ellipsis-h\",\n    backgroundColor: \"gray\",\n    onPress: function onPress() {\n      return console.log(\"comment\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  })))), React.createElement(Text, {\n    style: {\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    data: comments,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Card, {\n        style: {\n          height: 30\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }, React.createElement(Card.Image, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          marginBottom: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      }, item.text)), React.createElement(Text, {\n        style: {\n          marginBottom: 1\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, item.date), React.createElement(FlatList, {\n        data: item.comments,\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item;\n          return React.createElement(React.Fragment, null, React.createElement(View, {\n            style: {\n              flex: 1,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }\n          }, React.createElement(View, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 21\n            }\n          }, React.createElement(Text, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 23\n            }\n          }, item.text)), React.createElement(View, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 21\n            }\n          }, React.createElement(Text, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 23\n            }\n          }, item.creatorLogin), React.createElement(Text, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 23\n            }\n          }, item.date))));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }), React.createElement(Input, {\n        value: commentToComment,\n        onChangeText: function onChangeText(text) {\n          return setCommentToComment(text);\n        },\n        placeholder: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u044F\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        onPress: function onPress() {\n          createCommentToComment(item._id);\n        },\n        title: \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0438\\u0442\\u044C \\u043D\\u0430 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }));\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), React.createElement(Input, {\n    value: comment,\n    onChangeText: function onChangeText(text) {\n      return setComment(text);\n    },\n    placeholder: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u044F\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      createComment();\n    },\n    title: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  icons: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/user/elbrus/PHASE 3/RedditNativeChallenge/client/src/components/OnePostPage/OnePostPage.js"],"names":["React","useEffect","useState","useNavigation","Card","Button","Input","Icon","useDispatch","useSelector","addLike","addDislike","getContent","createComMain","createComToCom","Post","route","dispatch","mainId","params","el","_id","comment","setComment","posts","state","content","mainPost","filter","post","comments","likes","userId","user","userInfo","id","createComment","trim","length","text","autorId","postId","commentToComment","setCommentToComment","createCommentToComment","commentId","like","dislike","title","marginBottom","description","styles","icons","dislikes","console","log","alignItems","justifyContent","item","height","date","flex","flexDirection","creatorLogin","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Card, Button, Input } from \"react-native-elements\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport { StyleSheet, View, Text, FlatList } from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addLike, addDislike, getContent } from \"../../redux/actions/content\";\nimport { createComMain, createComToCom } from \"../../redux/actions/comments\";\n\nexport default function Post({ route }) {\n  const dispatch = useDispatch();\n\n  const mainId = route.params.el._id;\n  const [comment, setComment] = useState();\n\n  const posts = useSelector(state => state.content);\n  const mainPost = posts.filter(post => post._id == mainId)[0];\n\n  const comments = mainPost.comments;\n  const likes = mainPost.likes;\n  const userId = useSelector(state => state.user.userInfo.id);\n  const createComment = () => {\n    if (comment.trim().length > 5) {\n      const post = { text: comment, autorId: userId, postId: mainPost._id };\n      dispatch(createComMain(post));\n    }\n  };\n  const [commentToComment, setCommentToComment] = useState();\n  const createCommentToComment = commentId => {\n    if (commentToComment.trim().length > 5) {\n      const comment = {\n        text: commentToComment,\n        autorId: userId,\n        commentId,\n        mainId: mainId,\n      };\n      dispatch(createComToCom(comment));\n    }\n  };\n\n  const like = (userId, postId) => {\n    dispatch(addLike(userId, postId));\n  };\n  const dislike = (userId, postId) => {\n    dispatch(addDislike(userId, postId));\n  };\n\n  useEffect(() => {\n    dispatch(getContent());\n  }, [dispatch]);\n\n  return (\n    <>\n      <View>\n        <Card>\n          <Card.Title>{mainPost.title}</Card.Title>\n          <Card.Divider />\n          <Card.Image>\n            <Text style={{ marginBottom: 10 }}>{mainPost.description}</Text>\n          </Card.Image>\n          <View style={styles.icons}>\n            <Icon.Button\n              name=\"thumbs-up\"\n              thumbs-down\n              backgroundColor=\"gray\"\n              onPress={() => like(userId, mainPost._id)}\n            >\n              {likes.length}\n            </Icon.Button>\n            <Icon.Button\n              name=\"thumbs-down\"\n              backgroundColor=\"gray\"\n              onPress={() => dislike(userId, mainPost._id)}\n            >\n              {mainPost.dislikes.length}\n            </Icon.Button>\n            <Icon.Button\n              name=\"comments\"\n              backgroundColor=\"gray\"\n              onPress={() => console.log(\"comment\")}\n            >\n              {mainPost.comments.length}\n            </Icon.Button>\n            <Icon.Button\n              name=\"ellipsis-h\"\n              backgroundColor=\"gray\"\n              onPress={() => console.log(\"comment\")}\n            ></Icon.Button>\n          </View>\n        </Card>\n      </View>\n\n      <Text style={{ alignItems: \"center\", justifyContent: \"center\" }}></Text>\n      <FlatList\n        data={comments}\n        renderItem={({ item }) => (\n          <Card style={{ height: 30 }}>\n            <Card.Image /*source={\"ASd\"}*/>\n              <Text style={{ marginBottom: 10 }}>{item.text}</Text>\n            </Card.Image>\n            <Text style={{ marginBottom: 1 }}>{item.date}</Text>\n            <FlatList\n              data={item.comments}\n              renderItem={({ item }) => (\n                <>\n                  <View\n                    style={{\n                      flex: 1,\n                      flexDirection: \"row\",\n                      justifyContent: \"space-between\",\n                    }}\n                  >\n                    <View>\n                      <Text>{item.text}</Text>\n                    </View>\n                    <View>\n                      <Text>{item.creatorLogin}</Text>\n                      <Text>{item.date}</Text>\n                    </View>\n                  </View>\n                </>\n              )}\n            />\n            <Input\n              value={commentToComment}\n              onChangeText={text => setCommentToComment(text)}\n              placeholder=\"Текст комментария\"\n            />\n            <Button\n              onPress={() => {\n                createCommentToComment(item._id);\n              }}\n              title=\"Ответить на комментарий\"\n            />\n          </Card>\n        )}\n        keyExtractor={item => item.id}\n      />\n\n      <Input\n        value={comment}\n        onChangeText={text => setComment(text)}\n        placeholder=\"Текст комментария\"\n      />\n      <Button\n        onPress={() => {\n          createComment();\n        }}\n        title=\"Отправить комментарий\"\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icons: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}