{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/artur/elbrus/phase-3/\\u041F\\u0420\\u041E\\u0415\\u041A\\u0422\\u0412\\u0415\\u041A\\u0410/copy 2/RedditNativeChallenge/client/src/components/Item/Item.js\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Card, Overlay } from \"react-native-elements\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { addLike, addDislike, deletePost } from \"../../redux/actions/content\";\nimport styles from \"./style\";\nexport default function Item(_ref) {\n  var _el$author, _el$author$userName, _el$author2;\n\n  var el = _ref.el;\n  var dispatch = useDispatch();\n  var navigation = useNavigation();\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  var userId = user.userInfo.id;\n  var arrOfLikes = useSelector(function (state) {\n    return el.likes;\n  });\n  var arrOfDislikes = useSelector(function (state) {\n    return el.dislikes;\n  });\n\n  var _useState = useState(arrOfLikes.includes(userId)),\n      _useState2 = _slicedToArray(_useState, 2),\n      colorLike = _useState2[0],\n      setColorLike = _useState2[1];\n\n  var _useState3 = useState(arrOfDislikes.includes(userId)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      colorDislike = _useState4[0],\n      setColorDislike = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      visible = _useState6[0],\n      setVisible = _useState6[1];\n\n  var toggleOverlay = function toggleOverlay() {\n    setVisible(!visible);\n  };\n\n  var like = function like(userId, postId) {\n    dispatch(addLike(userId, postId));\n  };\n\n  var dislike = function dislike(userId, postId) {\n    dispatch(addDislike(userId, postId));\n  };\n\n  useEffect(function () {\n    setColorLike(arrOfLikes.includes(userId));\n    setColorDislike(arrOfDislikes.includes(userId));\n  }, [el]);\n\n  var deletePostFunction = function deletePostFunction(id) {\n    dispatch(deletePost(id));\n  };\n\n  if (el.userName) return React.createElement(React.Fragment, null);\n  return React.createElement(Card, {\n    containerStyle: styles.div,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, userId === (el == null ? void 0 : (_el$author = el.author) == null ? void 0 : _el$author._id) || userId === (el == null ? void 0 : el.author) ? React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, React.createElement(Overlay, {\n    overlayStyle: styles.overlayContainer,\n    isVisible: visible,\n    onBackdropPress: toggleOverlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.overlayOpacity,\n    onPress: function onPress() {\n      deletePostFunction(el._id);\n      setVisible(function (prev) {\n        return !prev;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.overlayText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Delete\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.navigate(\"EditPost\", {\n        data: el\n      });\n      setVisible(function (prev) {\n        return !prev;\n      });\n    },\n    style: styles.overlayOpacity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.overlayText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"Edit\")), React.createElement(TouchableOpacity, {\n    style: styles.cancleOpacity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    onPress: function onPress() {\n      return setVisible(function (prev) {\n        return !prev;\n      });\n    },\n    style: styles.overlayText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"Cancel\")))), React.createElement(View, {\n    style: styles.header_post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon.Button, {\n    name: \"ellipsis-v\",\n    backgroundColor: \"#9ca3af\",\n    onPress: toggleOverlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }))) : React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), React.createElement(Card.Title, {\n    style: styles.title1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, el.title), el.uri ? React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.imageTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: el.uri\n    },\n    style: {\n      width: 200,\n      height: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  })), React.createElement(Card.Divider, {\n    style: styles.hr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  })) : React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), el.content ? React.createElement(React.Fragment, null, React.createElement(Image, {\n    source: {\n      uri: el.content\n    },\n    style: {\n      height: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  })) : React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, React.createElement(Icon.Button, {\n    color: colorLike ? \"#61dafb\" : \"#f9fafb\",\n    name: \"thumbs-up\",\n    backgroundColor: \"#1f2937\",\n    onPress: function onPress() {\n      like(userId, el._id);\n      setColorLike(function (prev) {\n        if (colorDislike) setColorDislike(function (prevD) {\n          return !prevD;\n        });\n        return !prev;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \" \", el.likes.length)), React.createElement(Icon.Button, {\n    color: colorDislike ? \"#61dafb\" : \"#f9fafb\",\n    name: \"thumbs-down\",\n    backgroundColor: \"#1f2937\",\n    onPress: function onPress() {\n      dislike(userId, el._id);\n      setColorDislike(function (prev) {\n        if (colorLike) setColorLike(function (prevL) {\n          return !prevL;\n        });\n        return !prev;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, el.dislikes.length)), React.createElement(Icon.Button, {\n    name: \"comments\",\n    backgroundColor: \"#1f2937\",\n    onPress: function onPress() {\n      return navigation.navigate(\"OnePostPage\", {\n        el: el\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, el.comments.length))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.navigate(\"DetailPage\", {\n        el: el.author\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, \"Created by: \", (_el$author$userName = (_el$author2 = el.author) == null ? void 0 : _el$author2.userName) != null ? _el$author$userName : \"\")), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, el.date));\n}","map":{"version":3,"sources":["/home/artur/elbrus/phase-3/ПРОЕКТВЕКА/copy 2/RedditNativeChallenge/client/src/components/Item/Item.js"],"names":["React","useEffect","useState","Card","Overlay","Icon","useDispatch","useSelector","useNavigation","addLike","addDislike","deletePost","styles","Item","el","dispatch","navigation","user","state","userId","userInfo","id","arrOfLikes","likes","arrOfDislikes","dislikes","includes","colorLike","setColorLike","colorDislike","setColorDislike","visible","setVisible","toggleOverlay","like","postId","dislike","deletePostFunction","userName","div","author","_id","overlayContainer","overlayOpacity","prev","overlayText","navigate","data","cancleOpacity","header_post","title1","title","uri","imageTitle","width","height","hr","content","icons","prevD","text","length","prevL","comments","date"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { View, Text, TouchableOpacity, Image } from \"react-native\";\nimport { Card, Overlay } from \"react-native-elements\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nimport { addLike, addDislike, deletePost } from \"../../redux/actions/content\";\nimport styles from \"./style\";\n\nexport default function Item({ el }) {\n  const dispatch = useDispatch();\n  const navigation = useNavigation();\n  const user = useSelector(state => state.user);\n  const userId = user.userInfo.id;\n  const arrOfLikes = useSelector(state => el.likes);\n  const arrOfDislikes = useSelector(state => el.dislikes);\n\n  const [colorLike, setColorLike] = useState(arrOfLikes.includes(userId));\n  const [colorDislike, setColorDislike] = useState(\n    arrOfDislikes.includes(userId)\n  );\n\n  const [visible, setVisible] = useState(false); // for overlay\n  const toggleOverlay = () => {\n    setVisible(!visible);\n  };\n\n  const like = (userId, postId) => {\n    dispatch(addLike(userId, postId));\n  };\n  const dislike = (userId, postId) => {\n    dispatch(addDislike(userId, postId));\n  };\n\n  useEffect(() => {\n    setColorLike(arrOfLikes.includes(userId));\n    setColorDislike(arrOfDislikes.includes(userId));\n  }, [el]);\n\n  const deletePostFunction = id => {\n    dispatch(deletePost(id));\n  };\n\n  if (el.userName) return <></>;\n\n  return (\n    <Card containerStyle={styles.div}>\n      {userId === el?.author?._id || userId === el?.author ? (\n        <View>\n          <View>\n            <Overlay\n              overlayStyle={styles.overlayContainer}\n              isVisible={visible}\n              onBackdropPress={toggleOverlay}\n            >\n              <TouchableOpacity\n                style={styles.overlayOpacity}\n                onPress={() => {\n                  deletePostFunction(el._id);\n                  setVisible(prev => !prev);\n                }}\n              >\n                <Text style={styles.overlayText}>Delete</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                onPress={() => {\n                  navigation.navigate(\"EditPost\", { data: el });\n                  setVisible(prev => !prev);\n                }}\n                style={styles.overlayOpacity}\n              >\n                <Text style={styles.overlayText}>Edit</Text>\n              </TouchableOpacity>\n              <TouchableOpacity style={styles.cancleOpacity}>\n                <Text\n                  onPress={() => setVisible(prev => !prev)}\n                  style={styles.overlayText}\n                >\n                  Cancel\n                </Text>\n              </TouchableOpacity>\n            </Overlay>\n          </View>\n\n          <View style={styles.header_post}>\n            <Icon.Button\n              name=\"ellipsis-v\"\n              backgroundColor=\"#9ca3af\"\n              onPress={toggleOverlay}\n            />\n          </View>\n        </View>\n      ) : (\n        <View></View>\n      )}\n      <Card.Title style={styles.title1}>{el.title}</Card.Title>\n      {el.uri ? (\n        <View>\n          <View style={styles.imageTitle}>\n            <Image\n              source={{ uri: el.uri }}\n              style={{ width: 200, height: 200 }}\n            />\n          </View>\n          <Card.Divider style={styles.hr} />\n        </View>\n      ) : (\n        <Text></Text>\n      )}\n\n      {el.content ? (\n        <>\n          <Image source={{ uri: el.content }} style={{ height: 200 }} />\n        </>\n      ) : (\n        <View></View>\n      )}\n\n      <View style={styles.icons}>\n        <Icon.Button\n          color={colorLike ? \"#61dafb\" : \"#f9fafb\"}\n          name=\"thumbs-up\"\n          backgroundColor=\"#1f2937\"\n          onPress={() => {\n            like(userId, el._id);\n            setColorLike(prev => {\n              if (colorDislike) setColorDislike(prevD => !prevD);\n              return !prev;\n            });\n          }}\n        >\n          <Text style={styles.text}> {el.likes.length}</Text>\n        </Icon.Button>\n\n        <Icon.Button\n          color={colorDislike ? \"#61dafb\" : \"#f9fafb\"}\n          name=\"thumbs-down\"\n          backgroundColor=\"#1f2937\"\n          onPress={() => {\n            dislike(userId, el._id);\n            setColorDislike(prev => {\n              if (colorLike) setColorLike(prevL => !prevL);\n              return !prev;\n            });\n          }}\n        >\n          <Text style={styles.text}>{el.dislikes.length}</Text>\n        </Icon.Button>\n\n        <Icon.Button\n          name=\"comments\"\n          backgroundColor=\"#1f2937\"\n          onPress={() => navigation.navigate(\"OnePostPage\", { el })}\n        >\n          <Text style={styles.text}>{el.comments.length}</Text>\n        </Icon.Button>\n      </View>\n\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate(\"DetailPage\", {\n            el: el.author,\n          });\n        }}\n      >\n        <Text style={styles.text}>Created by: {el.author?.userName ?? \"\"}</Text>\n      </TouchableOpacity>\n      <Text style={styles.text}>{el.date}</Text>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}