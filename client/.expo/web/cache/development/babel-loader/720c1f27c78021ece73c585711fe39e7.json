{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { GET_CONTENT_START, POST_CREATE } from \"../types/content\";\nvar initialState = [];\n\nvar contentReducer = function contentReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case GET_CONTENT_START:\n      {\n        return [].concat(_toConsumableArray(state), _toConsumableArray(payload));\n      }\n\n    case POST_CREATE:\n      {\n        return [].concat(_toConsumableArray(state), [payload]);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default contentReducer;","map":{"version":3,"sources":["/home/artur/elbrus/phase-3/RedditNativeChallenge/client/src/redux/reduce/contentReducer.js"],"names":["GET_CONTENT_START","POST_CREATE","initialState","contentReducer","state","action","type","payload"],"mappings":";AAAA,SAASA,iBAAT,EAA4BC,WAA5B;AAEA,IAAMC,YAAY,GAAG,EAArB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;AACvD,MAAQC,IAAR,GAA0BD,MAA1B,CAAQC,IAAR;AAAA,MAAcC,OAAd,GAA0BF,MAA1B,CAAcE,OAAd;;AAEA,UAAQD,IAAR;AACE,SAAKN,iBAAL;AAAwB;AACtB,4CAAWI,KAAX,sBAAqBG,OAArB;AACD;;AACD,SAAKN,WAAL;AAAkB;AAChB,4CAAWG,KAAX,IAAkBG,OAAlB;AACD;;AACD;AACE,aAAOH,KAAP;AARJ;AAUD,CAbD;;AAcA,eAAeD,cAAf","sourcesContent":["import { GET_CONTENT_START, POST_CREATE } from \"../types/content\";\n\nconst initialState = [];\n\nconst contentReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_CONTENT_START: {\n      return [...state, ...payload];\n    }\n    case POST_CREATE: {\n      return [...state, payload];\n    }\n    default:\n      return state;\n  }\n};\nexport default contentReducer;\n"]},"metadata":{},"sourceType":"module"}