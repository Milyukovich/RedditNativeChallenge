{
  "ast": null,
  "code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/user/Documents/elbrus/phase 3/RedditNativeChallenge/client/src/components/Item.js\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Card, Overlay } from \"react-native-elements\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { addLike, addDislike, getContent } from \"../redux/actions/content\";\nexport default function Item(_ref) {\n  var el = _ref.el;\n  var dispatch = useDispatch();\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  var userId = user.id;\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var toggleOverlay = function toggleOverlay() {\n    setVisible(!visible);\n  };\n\n  var like = function like(userId, postId) {\n    dispatch(addLike(userId, postId));\n  };\n\n  var dislike = function dislike(userId, postId) {\n    dispatch(addDislike(userId, postId));\n  };\n\n  useEffect(function () {\n    dispatch(getContent());\n  }, [dispatch]);\n  return React.createElement(Card, {\n    containerStyle: styles.div,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, user.userInfo._id === el.creator ? React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.overlayContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, React.createElement(Overlay, {\n    overlayStyle: styles.overlayContainer,\n    isVisible: visible,\n    onBackdropPress: toggleOverlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.overlayText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Delete\")), React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.overlayText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"Edit\")), React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.overlayText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Cancle\")))), React.createElement(View, {\n    style: styles.header_post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon.Button, {\n    name: \"ellipsis-v\",\n    backgroundColor: \"#9ca3af\",\n    onPress: toggleOverlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }))) : React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), React.createElement(Card.Title, {\n    style: styles.title1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, el.title), React.createElement(Card.Divider, {\n    style: styles.hr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), el.content ? React.createElement(Card.Image, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, el.content)) : React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, React.createElement(Icon.Button, {\n    name: \"thumbs-up\",\n    backgroundColor: \"#9ca3af\",\n    color: \"#f9fafb\",\n    onPress: function onPress() {\n      return like(userId, el._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \" \", el.likes.length)), React.createElement(Icon.Button, {\n    name: \"thumbs-down\",\n    backgroundColor: \"#9ca3af\",\n    onPress: function onPress() {\n      return dislike(userId, el._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, el.dislikes.length)), React.createElement(Icon.Button, {\n    name: \"comments\",\n    backgroundColor: \"#9ca3af\",\n    onPress: function onPress() {\n      return navigation.navigate(\"OnePostPage\", {\n        el: el\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, el.comments.length))), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"Created by: \"));\n}\nvar styles = StyleSheet.create({\n  overlayContainer: {\n    backgroundColor: \"#9ca3af\"\n  },\n  overlayText: {\n    fontSize: 20,\n    padding: 5\n  },\n  edit_button: {\n    width: 30,\n    height: 40,\n    backgroundColor: \"gray\"\n  },\n  hr: {\n    backgroundColor: \"#f9fafb\",\n    height: 1.3\n  },\n  div: {\n    width: 300,\n    flexDirection: \"column\",\n    borderWidth: 2,\n    borderRadius: 5,\n    borderStyle: \"solid\",\n    borderColor: \"#f9fafb\",\n    backgroundColor: \"#1f2937\"\n  },\n  header_post: {\n    flexDirection: \"column\",\n    alignSelf: \"flex-end\",\n    height: 20,\n    width: 17\n  },\n  header_title: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignContent: \"center\"\n  },\n  icons: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    paddingHorizontal: 25,\n    marginBottom: 8\n  },\n  title1: {\n    fontSize: 20,\n    color: \"#f9fafb\"\n  },\n  text: {\n    color: \"#f9fafb\"\n  }\n});",
  "map": {
    "version": 3,
    "sources": [
      "/Users/user/Documents/elbrus/phase 3/RedditNativeChallenge/client/src/components/Item.js"
    ],
    "names": [
      "React",
      "useEffect",
      "useState",
      "Card",
      "Overlay",
      "Icon",
      "useDispatch",
      "useSelector",
      "useNavigation",
      "addLike",
      "addDislike",
      "getContent",
      "Item",
      "el",
      "dispatch",
      "user",
      "state",
      "userId",
      "id",
      "navigation",
      "visible",
      "setVisible",
      "toggleOverlay",
      "like",
      "postId",
      "dislike",
      "styles",
      "div",
      "userInfo",
      "_id",
      "creator",
      "overlayContainer",
      "overlayText",
      "header_post",
      "title1",
      "title",
      "hr",
      "content",
      "marginBottom",
      "icons",
      "text",
      "likes",
      "length",
      "dislikes",
      "navigate",
      "comments",
      "StyleSheet",
      "create",
      "backgroundColor",
      "fontSize",
      "padding",
      "edit_button",
      "width",
      "height",
      "flexDirection",
      "borderWidth",
      "borderRadius",
      "borderStyle",
      "borderColor",
      "alignSelf",
      "header_title",
      "flex",
      "justifyContent",
      "alignContent",
      "paddingHorizontal",
      "color"
    ],
    "mappings": ";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;AAEA,SAASC,IAAT,EAAeC,OAAf,QAA8B,uBAA9B;AACA,OAAOC,IAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,UAA9B;AAEA,eAAe,SAASC,IAAT,OAAsB;AAAA,MAANC,EAAM,QAANA,EAAM;AACnC,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,MAAMS,IAAI,GAAGR,WAAW,CAAC,UAAAS,KAAK;AAAA,WAAIA,KAAK,CAACD,IAAV;AAAA,GAAN,CAAxB;AACA,MAAME,MAAM,GAAGF,IAAI,CAACG,EAApB;AACA,MAAMC,UAAU,GAAGX,aAAa,EAAhC;;AAEA,kBAA8BN,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOkB,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BD,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;;AAIA,MAAMG,IAAI,GAAG,SAAPA,IAAO,CAACN,MAAD,EAASO,MAAT,EAAoB;AAC/BV,IAAAA,QAAQ,CAACL,OAAO,CAACQ,MAAD,EAASO,MAAT,CAAR,CAAR;AACD,GAFD;;AAGA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACR,MAAD,EAASO,MAAT,EAAoB;AAClCV,IAAAA,QAAQ,CAACJ,UAAU,CAACO,MAAD,EAASO,MAAT,CAAX,CAAR;AACD,GAFD;;AAIAvB,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,QAAQ,CAACH,UAAU,EAAX,CAAR;AACD,GAFQ,EAEN,CAACG,QAAD,CAFM,CAAT;AAIA,SACE,oBAAC,IAAD;AAAM,IAAA,cAAc,EAAEY,MAAM,CAACC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,IAAI,CAACa,QAAL,CAAcC,GAAd,KAAsBhB,EAAE,CAACiB,OAAzB,GACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AACE,IAAA,YAAY,EAAEL,MAAM,CAACK,gBADvB;AAEE,IAAA,SAAS,EAAEX,OAFb;AAGE,IAAA,eAAe,EAAEE,aAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACM,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CALF,EAQE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACM,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CARF,EAWE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACM,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAXF,CADF,CADF,EAmBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACO,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,eAAe,EAAC,SAFlB;AAGE,IAAA,OAAO,EAAEX,aAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAnBF,CADD,GA4BG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BN,EAgCE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,KAAK,EAAEI,MAAM,CAACQ,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCrB,EAAE,CAACsB,KAAtC,CAhCF,EAiCE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,EAAET,MAAM,CAACU,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCF,EAoCIvB,EAAE,CAACwB,OAAH,GACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCzB,EAAE,CAACwB,OAAvC,CADF,CADF,GAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzCN,EA6CE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACa,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,eAAe,EAAC,SAFlB;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,OAAO,EAAE;AAAA,aAAMhB,IAAI,CAACN,MAAD,EAASJ,EAAE,CAACgB,GAAZ,CAAV;AAAA,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACc,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA4B3B,EAAE,CAAC4B,KAAH,CAASC,MAArC,CANF,CADF,EAUE,oBAAC,IAAD,CAAM,MAAN;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,eAAe,EAAC,SAFlB;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMjB,OAAO,CAACR,MAAD,EAASJ,EAAE,CAACgB,GAAZ,CAAb;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACc,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2B3B,EAAE,CAAC8B,QAAH,CAAYD,MAAvC,CALF,CAVF,EAkBE,oBAAC,IAAD,CAAM,MAAN;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,eAAe,EAAC,SAFlB;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMvB,UAAU,CAACyB,QAAX,CAAoB,aAApB,EAAmC;AAAE/B,QAAAA,EAAE,EAAFA;AAAF,OAAnC,CAAN;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEa,MAAM,CAACc,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2B3B,EAAE,CAACgC,QAAH,CAAYH,MAAvC,CALF,CAlBF,CA7CF,EAuEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,MAAM,CAACc,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAvEF,CADF;AA2ED;AAED,IAAMd,MAAM,GAAGoB,UAAU,CAACC,MAAX,CAAkB;AAC/BhB,EAAAA,gBAAgB,EAAE;AAChBiB,IAAAA,eAAe,EAAE;AADD,GADa;AAU/BhB,EAAAA,WAAW,EAAE;AACXiB,IAAAA,QAAQ,EAAE,EADC;AAEXC,IAAAA,OAAO,EAAE;AAFE,GAVkB;AAe/BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,KAAK,EAAE,EADI;AAEXC,IAAAA,MAAM,EAAE,EAFG;AAGXL,IAAAA,eAAe,EAAE;AAHN,GAfkB;AAqB/BZ,EAAAA,EAAE,EAAE;AACFY,IAAAA,eAAe,EAAE,SADf;AAEFK,IAAAA,MAAM,EAAE;AAFN,GArB2B;AA0B/B1B,EAAAA,GAAG,EAAE;AACHyB,IAAAA,KAAK,EAAE,GADJ;AAEHE,IAAAA,aAAa,EAAE,QAFZ;AAGHC,IAAAA,WAAW,EAAE,CAHV;AAIHC,IAAAA,YAAY,EAAE,CAJX;AAKHC,IAAAA,WAAW,EAAE,OALV;AAMHC,IAAAA,WAAW,EAAE,SANV;AAOHV,IAAAA,eAAe,EAAE;AAPd,GA1B0B;AAmC/Bf,EAAAA,WAAW,EAAE;AACXqB,IAAAA,aAAa,EAAE,QADJ;AAEXK,IAAAA,SAAS,EAAE,UAFA;AAGXN,IAAAA,MAAM,EAAE,EAHG;AAIXD,IAAAA,KAAK,EAAE;AAJI,GAnCkB;AAyC/BQ,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAE,CADM;AAEZC,IAAAA,cAAc,EAAE,QAFJ;AAGZC,IAAAA,YAAY,EAAE;AAHF,GAzCiB;AA8C/BxB,EAAAA,KAAK,EAAE;AACLe,IAAAA,aAAa,EAAE,KADV;AAELQ,IAAAA,cAAc,EAAE,cAFX;AAGLE,IAAAA,iBAAiB,EAAE,EAHd;AAIL1B,IAAAA,YAAY,EAAE;AAJT,GA9CwB;AAoD/BJ,EAAAA,MAAM,EAAE;AACNe,IAAAA,QAAQ,EAAE,EADJ;AAENgB,IAAAA,KAAK,EAAE;AAFD,GApDuB;AAwD/BzB,EAAAA,IAAI,EAAE;AACJyB,IAAAA,KAAK,EAAE;AADH;AAxDyB,CAAlB,CAAf",
    "sourcesContent": [
      "import React, { useEffect, useState } from \"react\";\nimport { StyleSheet, View, Text, Button, TouchableOpacity } from \"react-native\";\nimport { Card, Overlay } from \"react-native-elements\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nimport { addLike, addDislike, getContent } from \"../redux/actions/content\";\n\nexport default function Item({ el }) {\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  const userId = user.id;\n  const navigation = useNavigation();\n\n  const [visible, setVisible] = useState(false); // for overlay\n  const toggleOverlay = () => {\n    setVisible(!visible);\n  };\n\n  const like = (userId, postId) => {\n    dispatch(addLike(userId, postId));\n  };\n  const dislike = (userId, postId) => {\n    dispatch(addDislike(userId, postId));\n  };\n\n  useEffect(() => {\n    dispatch(getContent());\n  }, [dispatch]);\n\n  return (\n    <Card containerStyle={styles.div}>\n      {user.userInfo._id === el.creator ?\n        <View>\n          <View style={styles.overlayContainer}>\n            <Overlay\n              overlayStyle={styles.overlayContainer}\n              isVisible={visible}\n              onBackdropPress={toggleOverlay}\n            >\n              <TouchableOpacity>\n                <Text style={styles.overlayText}>Delete</Text>\n              </TouchableOpacity>\n              <TouchableOpacity>\n                <Text style={styles.overlayText}>Edit</Text>\n              </TouchableOpacity>\n              <TouchableOpacity>\n                <Text style={styles.overlayText}>Cancle</Text>\n              </TouchableOpacity>\n            </Overlay>\n          </View>\n\n          <View style={styles.header_post}>\n            <Icon.Button\n              name=\"ellipsis-v\"\n              backgroundColor=\"#9ca3af\"\n              onPress={toggleOverlay}\n            ></Icon.Button>\n          </View>\n        </View>\n        : <View></View>\n      }\n\n      <Card.Title style={styles.title1}>{el.title}</Card.Title>\n      <Card.Divider style={styles.hr} />\n\n      {\n        el.content ? (\n          <Card.Image>\n            <Text style={{ marginBottom: 10 }}>{el.content}</Text>\n          </Card.Image>\n        ) : (\n          <View></View>\n        )\n      }\n\n      <View style={styles.icons}>\n        <Icon.Button\n          name=\"thumbs-up\"\n          backgroundColor=\"#9ca3af\"\n          color=\"#f9fafb\"\n          onPress={() => like(userId, el._id)}\n        >\n          <Text style={styles.text}> {el.likes.length}</Text>\n        </Icon.Button>\n\n        <Icon.Button\n          name=\"thumbs-down\"\n          backgroundColor=\"#9ca3af\"\n          onPress={() => dislike(userId, el._id)}\n        >\n          <Text style={styles.text}>{el.dislikes.length}</Text>\n        </Icon.Button>\n\n        <Icon.Button\n          name=\"comments\"\n          backgroundColor=\"#9ca3af\"\n          onPress={() => navigation.navigate(\"OnePostPage\", { el })}\n        >\n          <Text style={styles.text}>{el.comments.length}</Text>\n        </Icon.Button>\n      </View>\n      <Text style={styles.text}>Created by: </Text>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  overlayContainer: {\n    backgroundColor: \"#9ca3af\",\n    \n    // borderRadius: 5,\n    // borderWidth: 2,\n    // borderStyle: \"solid\",\n    // borderColor: \"#f9fafb\",\n  },\n\n  overlayText: {\n    fontSize: 20,\n    padding: 5,\n  },\n\n  edit_button: {\n    width: 30,\n    height: 40,\n    backgroundColor: \"gray\",\n  },\n\n  hr: {\n    backgroundColor: \"#f9fafb\",\n    height: 1.3,\n  },\n\n  div: {\n    width: 300,\n    flexDirection: \"column\",\n    borderWidth: 2,\n    borderRadius: 5,\n    borderStyle: \"solid\",\n    borderColor: \"#f9fafb\",\n    backgroundColor: \"#1f2937\",\n  },\n  header_post: {\n    flexDirection: \"column\",\n    alignSelf: \"flex-end\",\n    height: 20,\n    width: 17,\n  },\n  header_title: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignContent: \"center\",\n  },\n  icons: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    paddingHorizontal: 25,\n    marginBottom: 8,\n  },\n  title1: {\n    fontSize: 20,\n    color: \"#f9fafb\",\n  },\n  text: {\n    color: \"#f9fafb\",\n  },\n});\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
