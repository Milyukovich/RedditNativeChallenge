{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/artur/elbrus/phase-3/RedditNativeChallenge/client/src/components/AddReplyMenu/AddReplyMenu.jsx\";\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Card, Button, Input } from \"react-native-elements\";\nimport Header from \"../Header/Header\";\nimport LowerMenu from \"../LowerMenu/LowerMenu\";\nimport PostList from \"../PostList/PostList\";\nimport { addLike, addDislike, getContent } from \"../../redux/actions/content\";\nimport { createComMain, createComToCom } from \"../../redux/actions/comments\";\nimport styles from \"./style\";\n\nvar AddReplyMenu = function AddReplyMenu(_ref) {\n  var userId = _ref.userId,\n      postId = _ref.postId;\n  var dispatch = useDispatch();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      commentToComment = _useState2[0],\n      setCommentToComment = _useState2[1];\n\n  var createCommentToComment = function createCommentToComment(commentId) {\n    if (commentToComment.trim().length > 5) {\n      var comment = {\n        text: commentToComment,\n        autorId: userId,\n        commentId: commentId,\n        mainId: mainId,\n        postId: mainPost._id\n      };\n      console.log(\"COMMENT FRONT\", comment);\n      dispatch(createComToCom(comment));\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.footer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(Input, {\n    value: commentToComment,\n    onChangeText: function onChangeText(text) {\n      return setComment(text);\n    },\n    placeholder: \"Comment\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      createCommentToComment();\n    },\n    title: \"Sub\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default AddReplyMenu;","map":{"version":3,"sources":["/home/artur/elbrus/phase-3/RedditNativeChallenge/client/src/components/AddReplyMenu/AddReplyMenu.jsx"],"names":["React","useState","useDispatch","useSelector","Card","Button","Input","Header","LowerMenu","PostList","addLike","addDislike","getContent","createComMain","createComToCom","styles","AddReplyMenu","userId","postId","dispatch","commentToComment","setCommentToComment","createCommentToComment","commentId","trim","length","comment","text","autorId","mainId","mainPost","_id","console","log","footer","centeredView","setComment"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,uBAApC;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,OAAOC,QAAP;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,UAA9B;AACA,SAASC,aAAT,EAAwBC,cAAxB;AACA,OAAOC,MAAP;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAwB;AAAA,MAArBC,MAAqB,QAArBA,MAAqB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AAC3C,MAAMC,QAAQ,GAAGjB,WAAW,EAA5B;;AAGA,kBAAgDD,QAAQ,EAAxD;AAAA;AAAA,MAAOmB,gBAAP;AAAA,MAAyBC,mBAAzB;;AAEA,MAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAC,SAAS,EAAI;AAC1C,QAAIH,gBAAgB,CAACI,IAAjB,GAAwBC,MAAxB,GAAiC,CAArC,EAAwC;AACtC,UAAMC,OAAO,GAAG;AACdC,QAAAA,IAAI,EAAEP,gBADQ;AAEdQ,QAAAA,OAAO,EAAEX,MAFK;AAGdM,QAAAA,SAAS,EAATA,SAHc;AAIdM,QAAAA,MAAM,EAAEA,MAJM;AAKdX,QAAAA,MAAM,EAAEY,QAAQ,CAACC;AALH,OAAhB;AAOAC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BP,OAA7B;AACAP,MAAAA,QAAQ,CAACL,cAAc,CAACY,OAAD,CAAf,CAAR;AACD;AACF,GAZD;;AAcA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACmB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnB,MAAM,CAACoB,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEf,gBADT;AAEE,IAAA,YAAY,EAAE,sBAAAO,IAAI;AAAA,aAAIS,UAAU,CAACT,IAAD,CAAd;AAAA,KAFpB;AAGE,IAAA,WAAW,EAAC,SAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACbL,MAAAA,sBAAsB;AACvB,KAHH;AAIE,IAAA,KAAK,EAAC,KAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,CADF;AAiBD,CArCD;;AAuCA,eAAeN,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { View } from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Card, Button, Input } from \"react-native-elements\";\nimport Header from \"../Header/Header\";\nimport LowerMenu from \"../LowerMenu/LowerMenu\";\nimport PostList from \"../PostList/PostList\";\nimport { addLike, addDislike, getContent } from \"../../redux/actions/content\";\nimport { createComMain, createComToCom } from \"../../redux/actions/comments\";\nimport styles from \"./style\";\n\nconst AddReplyMenu = ({ userId, postId }) => {\n  const dispatch = useDispatch();\n\n  // const [commentToComment, setCommentToComment] = useState();\n  const [commentToComment, setCommentToComment] = useState();\n\n  const createCommentToComment = commentId => {\n    if (commentToComment.trim().length > 5) {\n      const comment = {\n        text: commentToComment,\n        autorId: userId,\n        commentId,\n        mainId: mainId,\n        postId: mainPost._id,\n      };\n      console.log(\"COMMENT FRONT\", comment);\n      dispatch(createComToCom(comment));\n    }\n  };\n\n  return (\n    <View style={styles.footer}>\n      <View style={styles.centeredView}>\n        <Input\n          value={commentToComment}\n          onChangeText={text => setComment(text)}\n          placeholder=\"Comment\"\n        />\n        <Button\n          onPress={() => {\n            createCommentToComment();\n          }}\n          title=\"Sub\"\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default AddReplyMenu;\n"]},"metadata":{},"sourceType":"module"}