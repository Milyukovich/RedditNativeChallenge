{
  "ast": null,
  "code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/user/Documents/elbrus/phase 3/RedditNativeChallenge/client/src/components/CreatePost/CreatePost.jsx\";\nimport React, { useState } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createPost } from \"../../redux/actions/content\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport moment from \"moment\";\nexport default function CreateNewPost() {\n  var dispatch = useDispatch();\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  var userId = user.userInfo.id;\n  var navigation = useNavigation();\n\n  var loadScene = function loadScene() {\n    navigation.navigate(\"MainPage\");\n  };\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      description = _useState4[0],\n      setDescription = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tags = _useState6[0],\n      setTags = _useState6[1];\n\n  var submtForm = function submtForm() {\n    if (title.trim() && description.trim()) {\n      var allTags = tags.split(\"#\");\n      allTags.forEach(function (el, index) {\n        allTags[index] = allTags[index].trim().toLowerCase();\n      });\n      var post = {\n        author: userId,\n        authorUsername: user.userInfo.userName,\n        title: title,\n        description: description,\n        tags: allTags\n      };\n      setTitle(\"\");\n      setDescription(\"\");\n      setTags(\"\");\n      dispatch(createPost(post));\n      loadScene();\n    }\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setTitle(text);\n    },\n    value: title,\n    style: styles.input,\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setDescription(text);\n    },\n    value: description,\n    style: styles.multilineInput,\n    multiline: true,\n    placeholder: \"Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setTags(text);\n    },\n    value: tags,\n    style: styles.input,\n    placeholder: \"Put some tags separated by ' # '\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: submtForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Create Post\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 20,\n    paddingTop: 20,\n    alignItems: \"center\",\n    fontSize: 13,\n    backgroundColor: \"#111827\"\n  },\n  input: {\n    height: 40,\n    margin: 15,\n    borderStyle: \"solid\",\n    borderColor: \"#3949ab\",\n    borderWidth: 2,\n    borderRadius: 5\n  },\n  multilineInput: {\n    height: 100,\n    margin: 15,\n    borderStyle: \"solid\",\n    borderColor: \"#3949ab\",\n    borderWidth: 2,\n    borderRadius: 5\n  },\n  button: {\n    marginHorizontal: 4,\n    backgroundColor: \"#111827\",\n    borderWidth: 2,\n    borderRadius: 5,\n    borderStyle: \"solid\",\n    borderColor: \"#f9fafb\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});",
  "map": {
    "version": 3,
    "sources": [
      "/Users/user/Documents/elbrus/phase 3/RedditNativeChallenge/client/src/components/CreatePost/CreatePost.jsx"
    ],
    "names": [
      "React",
      "useState",
      "useSelector",
      "useDispatch",
      "createPost",
      "useNavigation",
      "moment",
      "CreateNewPost",
      "dispatch",
      "user",
      "state",
      "userId",
      "userInfo",
      "id",
      "navigation",
      "loadScene",
      "navigate",
      "title",
      "setTitle",
      "description",
      "setDescription",
      "tags",
      "setTags",
      "submtForm",
      "trim",
      "allTags",
      "split",
      "forEach",
      "el",
      "index",
      "toLowerCase",
      "post",
      "author",
      "authorUsername",
      "userName",
      "styles",
      "container",
      "text",
      "input",
      "multilineInput",
      "button",
      "StyleSheet",
      "create",
      "flex",
      "marginTop",
      "paddingTop",
      "alignItems",
      "fontSize",
      "backgroundColor",
      "height",
      "margin",
      "borderStyle",
      "borderColor",
      "borderWidth",
      "borderRadius",
      "marginHorizontal",
      "justifyContent"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React, { useState } from \"react\";\nimport {\n  SafeAreaView,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n  Text,\n} from \"react-native\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createPost } from \"../../redux/actions/content\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport moment from \"moment\";\n\nexport default function CreateNewPost() {\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  const userId = user.userInfo.id;\n\n  const navigation = useNavigation();\n\n  const loadScene = () => {\n    navigation.navigate(\"MainPage\");\n  };\n\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [tags, setTags] = useState(\"\");\n\n  const submtForm = () => {\n    if (title.trim() && description.trim()) {\n      const allTags = tags.split(\"#\");\n      allTags.forEach((el, index) => {\n        allTags[index] = allTags[index].trim().toLowerCase();\n      });\n      const post = {\n        author: userId,\n        authorUsername: user.userInfo.userName,\n        title: title,\n        description: description,\n        tags: allTags,\n      };\n      setTitle(\"\");\n      setDescription(\"\");\n      setTags(\"\");\n      dispatch(createPost(post));\n      loadScene();\n    }\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <TextInput\n        onChangeText={text => setTitle(text)}\n        value={title}\n        style={styles.input}\n        placeholder=\"Title\"\n      />\n      <TextInput\n        onChangeText={text => setDescription(text)}\n        value={description}\n        style={styles.multilineInput}\n        multiline={true}\n        placeholder=\"Description\"\n      />\n\n      <TextInput\n        onChangeText={text => setTags(text)}\n        value={tags}\n        style={styles.input}\n        placeholder=\"Put some tags separated by ' # '\"\n      />\n\n      <TouchableOpacity style={styles.button} onPress={submtForm}>\n        <Text>Create Post</Text>\n      </TouchableOpacity>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 20,\n    paddingTop: 20,\n    alignItems: \"center\",\n    fontSize: 13,\n    backgroundColor: \"#111827\",\n  },\n\n  input: {\n    height: 40,\n    margin: 15,\n    borderStyle: \"solid\",\n    borderColor: \"#3949ab\",\n    borderWidth: 2,\n    borderRadius: 5,\n  },\n\n  multilineInput: {\n    height: 100,\n    margin: 15,\n    borderStyle: \"solid\",\n    borderColor: \"#3949ab\",\n    borderWidth: 2,\n    borderRadius: 5,\n  },\n\n  button: {\n    marginHorizontal: 4,\n    backgroundColor: \"#111827\",\n    borderWidth: 2,\n    borderRadius: 5,\n    borderStyle: \"solid\",\n    borderColor: \"#f9fafb\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
