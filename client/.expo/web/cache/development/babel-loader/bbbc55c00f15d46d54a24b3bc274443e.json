{"ast":null,"code":"var _jsxFileName = \"/Users/user/elbrus/PHASE 3/RedditNativeChallenge/client/src/components/EditProfile/EditProfile.jsx\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useDispatch } from \"react-redux\";\nexport default function EditProfileForm(_ref) {\n  var setshowEditForm = _ref.setshowEditForm;\n  var dispatch = useDispatch();\n\n  var editProfileFunction = function editProfileFunction(id, e) {\n    e.preventDefault();\n    var dataInput = e.target.inputId.value;\n    dispatch(editProfile(id, dataInput));\n    setshowEditForm(function (prev) {\n      return !prev;\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputs,\n    placeholder: \"Email\",\n    keyboardType: \"email-address\",\n    underlineColorAndroid: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }), React.createElement(Image, {\n    style: styles.inputIcon,\n    source: {\n      uri: 'https://img.icons8.com/nolan/40/000000/email.png'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputs,\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    underlineColorAndroid: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), React.createElement(Image, {\n    style: styles.inputIcon,\n    source: {\n      uri: 'https://img.icons8.com/nolan/40/000000/key.png'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: [styles.buttonContainer, styles.updateButton],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.updateText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Update\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#DCDCDC'\n  },\n  inputContainer: {\n    borderBottomColor: '#F5FCFF',\n    backgroundColor: '#FFFFFF',\n    borderRadius: 30,\n    borderBottomWidth: 1,\n    width: 300,\n    height: 45,\n    marginBottom: 20,\n    flexDirection: 'row',\n    alignItems: 'center',\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  inputs: {\n    height: 45,\n    marginLeft: 16,\n    borderBottomColor: '#FFFFFF',\n    flex: 1\n  },\n  buttonContainer: {\n    height: 45,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 20,\n    width: 300,\n    borderRadius: 30,\n    backgroundColor: 'transparent'\n  },\n  updateButton: {\n    backgroundColor: \"#00b5ec\",\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 9\n    },\n    shadowOpacity: 0.50,\n    shadowRadius: 12.35,\n    elevation: 19\n  },\n  updateText: {\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["/Users/user/elbrus/PHASE 3/RedditNativeChallenge/client/src/components/EditProfile/EditProfile.jsx"],"names":["React","useDispatch","EditProfileForm","setshowEditForm","dispatch","editProfileFunction","id","e","preventDefault","dataInput","target","inputId","value","editProfile","prev","styles","container","inputContainer","inputs","inputIcon","uri","buttonContainer","updateButton","updateText","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","borderBottomColor","borderRadius","borderBottomWidth","width","height","marginBottom","flexDirection","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","marginLeft","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  View,\n  TextInput,\n  Image,\n  StyleSheet,\n} from 'react-native';\nimport { useDispatch } from \"react-redux\";\n\n\nexport default function EditProfileForm({setshowEditForm}){\n  \n  const dispatch = useDispatch(); \n\n  const editProfileFunction = (id, e) => {\n    e.preventDefault();\n    const dataInput = e.target.inputId.value;\n    dispatch(editProfile(id, dataInput));\n    setshowEditForm((prev) => !prev);\n  };\n\n  return(\n    <View style={styles.container}>\n    <View style={styles.inputContainer}>\n          <TextInput style={styles.inputs}\n              placeholder=\"Email\"\n              keyboardType=\"email-address\"\n              underlineColorAndroid='transparent'\n              />\n          <Image style={styles.inputIcon} source={{uri: 'https://img.icons8.com/nolan/40/000000/email.png'}}/>\n        </View>\n        \n        <View style={styles.inputContainer}>\n          <TextInput style={styles.inputs}\n              placeholder=\"Password\"\n              secureTextEntry={true}\n              underlineColorAndroid='transparent'\n              />\n          <Image style={styles.inputIcon} source={{uri: 'https://img.icons8.com/nolan/40/000000/key.png'}}/>\n        </View>\n        <TouchableOpacity style={[styles.buttonContainer, styles.updateButton]}>\n          <Text style={styles.updateText}>Update</Text>\n        </TouchableOpacity>\n        </View>\n  )\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#DCDCDC',\n  },\n  inputContainer: {\n    borderBottomColor: '#F5FCFF',\n    backgroundColor: '#FFFFFF',\n    borderRadius:30,\n    borderBottomWidth: 1,\n    width:300,\n    height:45,\n    marginBottom:20,\n    flexDirection: 'row',\n    alignItems:'center',\n\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n\n    elevation: 5,\n  },\n  inputs:{\n    height:45,\n    marginLeft:16,\n    borderBottomColor: '#FFFFFF',\n    flex:1,\n  },\n  buttonContainer: {\n    height:45,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom:20,\n    width:300,\n    borderRadius:30,\n    backgroundColor:'transparent'\n  },\n \n  updateButton: {\n    backgroundColor: \"#00b5ec\",\n\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 9,\n    },\n    shadowOpacity: 0.50,\n    shadowRadius: 12.35,\n\n    elevation: 19,\n  },\n updateText: {\n    color: 'white',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}