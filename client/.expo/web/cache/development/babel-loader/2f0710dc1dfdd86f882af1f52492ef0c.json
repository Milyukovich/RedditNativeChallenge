{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/roman/elbruss/phase 3/finalproject/RedditNativeChallenge/client/src/components/post/post.js\";\nimport React, { useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Card, ListItem, Button, Input } from \"react-native-elements\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { createPost } from \"../../redux/actions/content\";\nimport { useDispatch } from \"react-redux\";\nexport default function Post(_ref) {\n  var _this = this;\n\n  var route = _ref.route;\n  var dispatch = useDispatch();\n  var el = route.params.el;\n  console.log(el.comments.length);\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      comment = _useState2[0],\n      setComment = _useState2[1];\n\n  var createPost = function createPost() {\n    var post = {\n      text: comment\n    };\n    dispatch();\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, el.title), React.createElement(Card.Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }), React.createElement(Card.Image, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, el.description)), React.createElement(View, {\n    style: styles.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon.Button, {\n    name: \"thumbs-up\",\n    backgroundColor: \"gray\",\n    onPress: function onPress() {\n      return console.log(\"like\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, el.likes.length), React.createElement(Icon.Button, {\n    name: \"comments\",\n    backgroundColor: \"gray\",\n    onPress: function onPress() {\n      return console.log(\"comment\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, el.comments.length)))), el.comments.length === 0 ? React.createElement(Text, {\n    style: {\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"\\u0412\\u0430\\u0448 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439 \\u0431\\u0443\\u0434\\u0435\\u0442 \\u043F\\u0435\\u0440\\u0432\\u044B\\u043C\") : React.createElement(FlatList, {\n    data: el.comments,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Card, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, React.createElement(Card.Image, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          marginBottom: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }), React.createElement(Button, {\n        icon: React.createElement(Icon, {\n          name: \"code\",\n          color: \"#ffffff\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }\n        }),\n        buttonStyle: {\n          borderRadius: 0,\n          marginLeft: 0,\n          marginRight: 0,\n          marginBottom: 0\n        },\n        title: \"VIEW NOW\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      })));\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    value: comment,\n    onChangeText: function onChangeText(text) {\n      return setComment(text);\n    },\n    placeholder: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u044F\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      createPost();\n    },\n    title: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  icons: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/home/roman/elbruss/phase 3/finalproject/RedditNativeChallenge/client/src/components/post/post.js"],"names":["React","useState","useNavigation","Card","ListItem","Button","Input","Icon","useRoute","createPost","useDispatch","Post","route","dispatch","el","params","console","log","comments","length","comment","setComment","post","text","title","marginBottom","description","styles","icons","likes","alignItems","justifyContent","item","borderRadius","marginLeft","marginRight","id","StyleSheet","create","flex","flexDirection"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Card, ListItem, Button, Input } from \"react-native-elements\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\n\nimport {\n  StyleSheet,\n  View,\n  TextInput,\n  Text,\n  FlatList,\n  TouchableOpacity,\n} from \"react-native\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { createPost } from \"../../redux/actions/content\";\nimport { useDispatch } from \"react-redux\";\nexport default function Post({ route }) {\n  const dispatch = useDispatch();\n  const el = route.params.el;\n  console.log(el.comments.length);\n  const [comment, setComment] = useState();\n  const createPost = () => {\n    const post = { text: comment };\n    dispatch();\n  };\n\n  return (\n    <>\n      <View>\n        <Card>\n          <Card.Title>{el.title}</Card.Title>\n          <Card.Divider />\n          <Card.Image>\n            <Text style={{ marginBottom: 10 }}>{el.description}</Text>\n          </Card.Image>\n          <View style={styles.icons}>\n            <Icon.Button\n              name=\"thumbs-up\"\n              backgroundColor=\"gray\"\n              onPress={() => console.log(\"like\")}\n            >\n              {el.likes.length}\n            </Icon.Button>\n            <Icon.Button\n              name=\"comments\"\n              backgroundColor=\"gray\"\n              onPress={() => console.log(\"comment\")}\n            >\n              {el.comments.length}\n            </Icon.Button>\n          </View>\n        </Card>\n      </View>\n\n      {el.comments.length === 0 ? (\n        <Text style={{ alignItems: \"center\", justifyContent: \"center\" }}>\n          Ваш комментарий будет первым\n        </Text>\n      ) : (\n        <FlatList\n          data={el.comments}\n          renderItem={({ item }) => (\n            <Card>\n              <Card.Image /*source={\"ASd\"}*/>\n                <Text style={{ marginBottom: 10 }}></Text>\n                <Button\n                  icon={<Icon name=\"code\" color=\"#ffffff\" />}\n                  buttonStyle={{\n                    borderRadius: 0,\n                    marginLeft: 0,\n                    marginRight: 0,\n                    marginBottom: 0,\n                  }}\n                  title=\"VIEW NOW\"\n                />\n              </Card.Image>\n            </Card>\n          )}\n          keyExtractor={item => item.id}\n        />\n      )}\n      <Input\n        value={comment}\n        onChangeText={text => setComment(text)}\n        placeholder=\"Текст комментария\"\n      />\n      <Button\n        onPress={() => {\n          createPost();\n        }}\n        title=\"Отправить комментарий\"\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icons: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}