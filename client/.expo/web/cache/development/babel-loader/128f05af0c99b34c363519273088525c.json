{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/roman/elbruss/phase 3/finalproject/RedditNativeChallenge/client/src/components/addPostList/AddPostList.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nexport default function AddPostList() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      description = _useState4[0],\n      setdescription = _useState4[1];\n\n  var submtForm = function submtForm() {\n    var post = {\n      title: title,\n      description: description\n    };\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.div,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.h1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u043F\\u043E\\u0441\\u0442\\u0430\"), React.createElement(Text, {\n    style: styles.h2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Title\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"\",\n    value: title,\n    onChangeText: function onChangeText(text) {\n      return setTitle(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.h2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Description\"), React.createElement(TextInput, {\n    style: styles.textArea,\n    placeholder: \"\",\n    value: description,\n    onChangeText: function onChangeText(text) {\n      return setdescription(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: submtForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u043E\\u0441\\u0442\"))));\n}\nvar styles = StyleSheet.create({\n  div: {\n    width: \"100%\",\n    height: 800,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    backgroundColor: \"#d7d1e8\",\n    borderRadius: 3\n  },\n  h1: {\n    fontSize: \"35px\",\n    color: \"red\",\n    paddingTop: \"10px\",\n    paddingBottom: \"5px\"\n  },\n  h2: {\n    fontSize: \"25px\",\n    color: \"blue\",\n    paddingTop: \"10px\",\n    paddingBottom: \"5px\"\n  },\n  input: {\n    height: \"40px\",\n    borderStyle: \"solid\",\n    borderWidth: \"3px\",\n    borderColor: \"black\"\n  },\n  textArea: {\n    height: 150,\n    justifyContent: \"flex-start\",\n    borderStyle: \"solid\",\n    borderWidth: \"3px\",\n    borderColor: \"black\"\n  },\n  button: {\n    fontSize: 30,\n    color: \"red\",\n    borderStyle: \"solid\",\n    borderWidth: \"3px\",\n    borderColor: \"black\",\n    backgroundColor: \"#877ba8\",\n    borderRadius: 10\n  }\n});","map":{"version":3,"sources":["/home/roman/elbruss/phase 3/finalproject/RedditNativeChallenge/client/src/components/addPostList/AddPostList.js"],"names":["React","useState","AddPostList","title","setTitle","description","setdescription","submtForm","post","styles","div","h1","h2","input","text","textArea","button","StyleSheet","create","width","height","flexDirection","alignItems","justifyContent","backgroundColor","borderRadius","fontSize","color","paddingTop","paddingBottom","borderStyle","borderWidth","borderColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Button,\n  TouchableOpacity,\n  TextInput,\n} from \"react-native\";\n\nexport default function AddPostList() {\n  const [title, setTitle] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const submtForm = () => {\n    const post = {\n      title: title,\n      description: description,\n    }\n    // dispath(createPost())\n   \n  };\n  return (\n    <>\n      <View style={styles.div}>\n        <Text style={styles.h1}>Добавление поста</Text>\n        <Text style={styles.h2}>Title</Text>\n        <TextInput\n          style={styles.input}\n          placeholder=\"\"\n          value={title}\n          onChangeText={text => setTitle(text)}\n        />\n        <Text style={styles.h2}>Description</Text>\n        <TextInput\n          style={styles.textArea}\n          placeholder=\"\"\n          value={description}\n          onChangeText={text => setdescription(text)}\n        />\n        <TextInput />\n        <TouchableOpacity onPress={submtForm}>\n          <Text style={styles.button}>Создать пост</Text>\n        </TouchableOpacity>\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  div: {\n    width: \"100%\",\n    height: 800,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    backgroundColor: \"#d7d1e8\",\n    borderRadius: 3,\n  },\n  h1: {\n    fontSize: \"35px\",\n    color: \"red\",\n    paddingTop: \"10px\",\n    paddingBottom: \"5px\",\n  },\n  h2: {\n    fontSize: \"25px\",\n    color: \"blue\",\n    paddingTop: \"10px\",\n    paddingBottom: \"5px\",\n  },\n  input: {\n    height: \"40px\",\n    borderStyle: \"solid\",\n    borderWidth: \"3px\",\n    borderColor: \"black\",\n  },\n  // textAreaContainer: {\n  //   borderColor: \"gray\",\n  //   borderWidth: 1,\n  //   padding: 5\n  // },\n  textArea: {\n    height: 150,\n    justifyContent: \"flex-start\",\n    borderStyle: \"solid\",\n    borderWidth: \"3px\",\n    borderColor: \"black\",\n  },\n  button: {\n    fontSize: 30,\n    color: \"red\",\n    borderStyle: \"solid\",\n    borderWidth: \"3px\",\n    borderColor: \"black\",\n    backgroundColor: \"#877ba8\",\n    borderRadius: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}