{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/user/elbrus/PHASE 3/RedditNativeChallenge/client/src/components/OnePostPage/OnePostPage.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Card, Button, Input } from \"react-native-elements\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addLike, addDislike, getContent, editPost } from \"../../redux/actions/content\";\nimport { createComMain, createComToCom } from \"../../redux/actions/comments\";\nimport AddCommentMenu from \"../AddCommentMenu/AddCommentMenu.jsx\";\nimport { LikesContext } from \"../../context/context\";\nexport default function Post(_ref) {\n  var _this = this;\n\n  var route = _ref.route;\n  var dispatch = useDispatch();\n  var navigation = useNavigation();\n\n  var _useContext = useContext(LikesContext),\n      colorLike = _useContext.colorLike,\n      setColorLike = _useContext.setColorLike,\n      colorDislike = _useContext.colorDislike,\n      setColorDislike = _useContext.setColorDislike;\n\n  var mainId = route.params.el._id;\n  var posts = useSelector(function (state) {\n    return state.content;\n  });\n  var mainPost = posts.filter(function (post) {\n    return post._id == mainId;\n  })[0];\n  var comments = mainPost.comments;\n  var likes = mainPost.likes;\n  var userId = useSelector(function (state) {\n    return state.user.userInfo.id;\n  });\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      commentToComment = _useState2[0],\n      setCommentToComment = _useState2[1];\n\n  var createCommentToComment = function createCommentToComment(commentId) {\n    if (commentToComment.trim().length > 5) {\n      var comment = {\n        text: commentToComment,\n        autorId: userId,\n        commentId: commentId,\n        mainId: mainId,\n        postId: mainPost._id\n      };\n      dispatch(createComToCom(comment));\n    }\n  };\n\n  var like = function like(userId, postId) {\n    dispatch(addLike(userId, postId));\n  };\n\n  var dislike = function dislike(userId, postId) {\n    dispatch(addDislike(userId, postId));\n  };\n\n  useEffect(function () {\n    dispatch(getContent());\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, React.createElement(Card, {\n    containerStyle: styles.div,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(Card.Title, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, mainPost.title), React.createElement(Card.Divider, {\n    style: styles.hr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), React.createElement(Card.Title, {\n    style: styles.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, mainPost.description), mainPost.content ? React.createElement(Card.Image, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, mainPost.content)) : React.createElement(React.Fragment, null), React.createElement(View, {\n    style: styles.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon.Button, {\n    color: colorLike ? \"#61dafb\" : \"#f9fafb\",\n    name: \"thumbs-up\",\n    backgroundColor: \"#1f2937\",\n    onPress: function onPress() {\n      like(userId, mainPost._id);\n      setColorLike(function (prev) {\n        if (colorDislike) {\n          setColorDislike(function (prevD) {\n            return !prevD;\n          });\n        }\n\n        return !prev;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, likes.length)), React.createElement(Icon.Button, {\n    color: colorDislike ? \"#61dafb\" : \"#f9fafb\",\n    name: \"thumbs-down\",\n    backgroundColor: \"#1f2937\",\n    onPress: function onPress() {\n      dislike(userId, mainPost._id);\n      setColorDislike(function (prev) {\n        if (colorLike) {\n          setColorLike(function (prevL) {\n            return !prevL;\n          });\n        }\n\n        return !prev;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, mainPost.dislikes.length)), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.navigate(\"DetailPage\", {\n        el: mainPost.author\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, \"Created by: \", mainPost.author.userName)), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, mainPost.date)), comments.length ? React.createElement(React.Fragment, null, React.createElement(FlatList, {\n    data: comments,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Card, {\n        style: {\n          height: 30\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }\n      }, console.log(item), React.createElement(Card.Image, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          marginBottom: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 19\n        }\n      }, item.text)), React.createElement(View, {\n        style: styles.icons,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, React.createElement(Icon.Button, {\n        name: \"thumbs-up\",\n        \"thumbs-down\": true,\n        backgroundColor: \"gray\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 19\n        }\n      }, item.likes.length), React.createElement(Icon.Button, {\n        name: \"thumbs-down\",\n        backgroundColor: \"gray\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 19\n        }\n      }, item.dislikes.length), React.createElement(Icon.Button, {\n        name: \"comments\",\n        backgroundColor: \"gray\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 19\n        }\n      }, item.comments.length), React.createElement(Icon.Button, {\n        name: \"ellipsis-h\",\n        backgroundColor: \"gray\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 19\n        }\n      })), React.createElement(Text, {\n        style: {\n          marginBottom: 1\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }\n      }, item.date), React.createElement(FlatList, {\n        data: item.comments,\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item;\n          return React.createElement(React.Fragment, null, React.createElement(View, {\n            style: {\n              flex: 1,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 23\n            }\n          }, React.createElement(View, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 27\n            }\n          }, item.text)), React.createElement(View, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 27\n            }\n          }, item.creatorLogin), React.createElement(Text, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 27\n            }\n          }, item.date))));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }\n      }), React.createElement(Input, {\n        value: commentToComment,\n        onChangeText: function onChangeText(text) {\n          return setCommentToComment(text);\n        },\n        placeholder: \"Comment\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }\n      }), React.createElement(Button, {\n        onPress: function onPress() {\n          createCommentToComment(item._id);\n        },\n        title: \"Sub\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }\n      }));\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  })) : React.createElement(React.Fragment, null), React.createElement(AddCommentMenu, {\n    userId: userId,\n    postId: mainPost._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  div: {\n    width: 400,\n    flexDirection: \"column\",\n    borderWidth: 2,\n    borderRadius: 5,\n    borderStyle: \"solid\",\n    borderColor: \"#f9fafb\",\n    backgroundColor: \"#1f2937\"\n  },\n  container: {\n    flex: 1,\n    paddingTop: 20,\n    alignItems: \"center\",\n    fontSize: 13,\n    backgroundColor: \"#111827\",\n    height: 200\n  },\n  hr: {\n    backgroundColor: \"#61dafb\",\n    height: 1.3\n  },\n  title: {\n    fontSize: 25,\n    color: \"#f9fafb\"\n  },\n  description: {\n    color: \"#f9fafb\",\n    fontSize: 20\n  },\n  text: {\n    color: \"#f9fafb\"\n  },\n  icons: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  content: {\n    height: 200,\n    borderWidth: 4,\n    borderColor: \"white\",\n    marginBottom: 10\n  },\n  text: {\n    color: \"#f9fafb\"\n  }\n});","map":{"version":3,"sources":["/Users/user/elbrus/PHASE 3/RedditNativeChallenge/client/src/components/OnePostPage/OnePostPage.js"],"names":["React","useContext","useEffect","useState","useNavigation","Card","Button","Input","Icon","useDispatch","useSelector","addLike","addDislike","getContent","editPost","createComMain","createComToCom","AddCommentMenu","LikesContext","Post","route","dispatch","navigation","colorLike","setColorLike","colorDislike","setColorDislike","mainId","params","el","_id","posts","state","content","mainPost","filter","post","comments","likes","userId","user","userInfo","id","commentToComment","setCommentToComment","createCommentToComment","commentId","trim","length","comment","text","autorId","postId","like","dislike","styles","container","div","title","hr","description","icons","prev","prevD","prevL","dislikes","navigate","author","userName","date","item","height","console","log","marginBottom","flex","flexDirection","justifyContent","creatorLogin","StyleSheet","create","width","borderWidth","borderRadius","borderStyle","borderColor","backgroundColor","paddingTop","alignItems","fontSize","color"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Card, Button, Input } from \"react-native-elements\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  FlatList,\n  TouchableOpacity,\n} from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addLike, addDislike, getContent, editPost, } from \"../../redux/actions/content\";\nimport { createComMain, createComToCom } from \"../../redux/actions/comments\";\nimport AddCommentMenu from \"../AddCommentMenu/AddCommentMenu.jsx\";\nimport { LikesContext } from \"../../context/context\";\n\nexport default function Post({ route }) {\n  const dispatch = useDispatch();\n  const navigation = useNavigation();\n\n  const {colorLike, setColorLike, colorDislike, setColorDislike} = useContext(LikesContext)\n\n  const mainId = route.params.el._id;\n\n  const posts = useSelector(state => state.content);\n  const mainPost = posts.filter(post => post._id == mainId)[0];\n  const comments = mainPost.comments;\n  const likes = mainPost.likes;\n  const userId = useSelector(state => state.user.userInfo.id);\n\n  const [commentToComment, setCommentToComment] = useState();\n  const createCommentToComment = commentId => {\n    if (commentToComment.trim().length > 5) {\n      const comment = {\n        text: commentToComment,\n        autorId: userId,\n        commentId,\n        mainId: mainId,\n        postId: mainPost._id,\n      };\n      dispatch(createComToCom(comment));\n    }\n  };\n\n  const like = (userId, postId) => {\n    dispatch(addLike(userId, postId));\n  };\n  const dislike = (userId, postId) => {\n    dispatch(addDislike(userId, postId));\n  };\n\n  useEffect(() => {\n    dispatch(getContent());\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <Card containerStyle={styles.div}>\n        <Card.Title style={styles.title}>{mainPost.title}</Card.Title>\n        <Card.Divider style={styles.hr} />\n        <Card.Title style={styles.description}>\n          {mainPost.description}\n        </Card.Title>\n\n        {mainPost.content ?\n          <Card.Image>\n            <Text>{mainPost.content}</Text>\n          </Card.Image>\n          : <></>\n        }\n\n        <View style={styles.icons}>\n          <Icon.Button\n            color={colorLike ? \"#61dafb\" : \"#f9fafb\"}\n            name=\"thumbs-up\"\n            backgroundColor=\"#1f2937\"\n            onPress={() => {\n              like(userId, mainPost._id)\n              setColorLike(prev => {\n                if (colorDislike) {\n                  setColorDislike(prevD => !prevD);\n                }\n                return !prev;\n              });\n            }}\n          >\n            <Text style={styles.text}>{likes.length}</Text>\n          </Icon.Button>\n          <Icon.Button\n            color={colorDislike ? \"#61dafb\" : \"#f9fafb\"}\n            name=\"thumbs-down\"\n            backgroundColor=\"#1f2937\"\n            onPress={() => {\n              dislike(userId, mainPost._id)\n              setColorDislike(prev => {\n                if (colorLike) {\n                  setColorLike(prevL => !prevL)\n                }\n                return !prev\n              });\n            }}\n          >\n            {mainPost.dislikes.length}\n          </Icon.Button>\n        </View>\n\n        <TouchableOpacity\n          onPress={() => {\n            navigation.navigate(\"DetailPage\", {\n              el: mainPost.author,\n            });\n          }}\n        >\n          <Text style={styles.text}>\n            Created by: {mainPost.author.userName}\n          </Text>\n        </TouchableOpacity>\n        <Text style={styles.text}>{mainPost.date}</Text>\n      </Card>\n\n      {/* <Text style={{ alignItems: \"center\", justifyContent: \"center\" }}>\n        tuta\n      </Text> */}\n      {comments.length ? (\n        <>\n          <FlatList\n            data={comments}\n            renderItem={({ item }) => (\n              <Card style={{ height: 30 }}>\n                {console.log(item)}\n                <Card.Image /*source={\"ASd\"}*/>\n                  <Text style={{ marginBottom: 10 }}>{item.text}</Text>\n                </Card.Image>\n\n                <View style={styles.icons}>\n                  <Icon.Button\n                    name=\"thumbs-up\"\n                    thumbs-down\n                    backgroundColor=\"gray\"\n                  // onPress={() => likeComment(userId, item._id)}\n                  >\n                    {item.likes.length}\n                  </Icon.Button>\n                  <Icon.Button\n                    name=\"thumbs-down\"\n                    backgroundColor=\"gray\"\n                  // onPress={() => dislikeComment(userId, item._id)}\n                  >\n                    {item.dislikes.length}\n                  </Icon.Button>\n                  <Icon.Button\n                    name=\"comments\"\n                    backgroundColor=\"gray\"\n                  >\n                    {item.comments.length}\n                  </Icon.Button>\n                  <Icon.Button\n                    name=\"ellipsis-h\"\n                    backgroundColor=\"gray\"\n                  ></Icon.Button>\n                </View>\n                <Text style={{ marginBottom: 1 }}>{item.date}</Text>\n                <FlatList\n                  data={item.comments}\n                  renderItem={({ item }) => (\n                    <>\n                      <View\n                        style={{\n                          flex: 1,\n                          flexDirection: \"row\",\n                          justifyContent: \"space-between\",\n                        }}\n                      >\n                        <View>\n                          <Text>{item.text}</Text>\n                        </View>\n\n                        <View>\n                          <Text>{item.creatorLogin}</Text>\n                          <Text>{item.date}</Text>\n                        </View>\n                      </View>\n                    </>\n                  )}\n                />\n                <Input\n                  value={commentToComment}\n                  onChangeText={text => setCommentToComment(text)}\n                  placeholder=\"Comment\"\n                />\n                <Button\n                  onPress={() => {\n                    createCommentToComment(item._id);\n                  }}\n                  title=\"Sub\"\n                />\n              </Card>\n            )}\n            keyExtractor={item => item.id}\n          />\n\n          {/* <Input\n            value={comment}\n            onChangeText={text => setComment(text)}\n            placeholder=\"Текст комментария\"\n            />\n            <Button\n            onPress={() => {\n              createComment();\n            }}\n            title=\"Отправить комментарий\"\n          /> */}\n        </>\n      ) : (\n        <></>\n      )}\n      <AddCommentMenu userId={userId} postId={mainPost._id} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  //post container\n  div: {\n    width: 400,\n    flexDirection: \"column\",\n    borderWidth: 2,\n    borderRadius: 5,\n    borderStyle: \"solid\",\n    borderColor: \"#f9fafb\",\n    backgroundColor: \"#1f2937\",\n  },\n  // all data\n  container: {\n    flex: 1,\n    paddingTop: 20,\n    alignItems: \"center\",\n    fontSize: 13,\n    backgroundColor: \"#111827\",\n    height: 200,\n  },\n\n  hr: {\n    backgroundColor: \"#61dafb\",\n    height: 1.3,\n  },\n\n  title: {\n    fontSize: 25,\n    color: \"#f9fafb\",\n  },\n\n  description: {\n    color: \"#f9fafb\",\n    fontSize: 20,\n  },\n\n  text: {\n    color: \"#f9fafb\",\n  },\n\n  icons: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n  content: {\n    // width: 270,\n    height: 200,\n    // borderRadius: 63,\n    borderWidth: 4,\n    borderColor: \"white\",\n    marginBottom: 10,\n  },\n  text: {\n    color: \"#f9fafb\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}