{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/artur/elbrus/phase-3/\\u041F\\u0420\\u041E\\u0415\\u041A\\u0422\\u0412\\u0415\\u041A\\u0410/copy 2/RedditNativeChallenge/client/src/components/Header/Header.jsx\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Switch } from \"react-native-elements\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { chageStatusLike, chageStatusComment, chageStatusOld } from \"../../redux/actions/user.ac\";\nimport styles from \"./style\";\nexport default function Header() {\n  var dispath = useDispatch();\n  var status = useSelector(function (state) {\n    return state.user.statusSearch;\n  });\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      formValue = _useState2[0],\n      setFormValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sort = _useState4[0],\n      setSort = _useState4[1];\n\n  var uri = useSelector(function (state) {\n    return state.user.userInfo.uri;\n  });\n\n  var changeSorStatus = function changeSorStatus() {\n    setSort(function (prev) {\n      return !prev;\n    });\n  };\n\n  var changeSwitchSorStatusLikesUp = function changeSwitchSorStatusLikesUp() {\n    dispath(chageStatusLike());\n  };\n\n  var changeCommentSetSortSwitch = function changeCommentSetSortSwitch() {\n    dispath(chageStatusComment());\n  };\n\n  var changeoldStatus = function changeoldStatus() {\n    dispath(chageStatusOld());\n  };\n\n  var navigation = useNavigation();\n\n  var loadScene = function loadScene() {\n    navigation.navigate(\"Profile\");\n  };\n\n  var loadSearcjScene = function loadSearcjScene() {\n    navigation.navigate(\"Search\", {\n      data: formValue\n    });\n  };\n\n  var submitForm = function submitForm() {\n    if (formValue.trim()) {\n      loadSearcjScene();\n      setFormValue(\"\");\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: loadScene,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, uri ? React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: uri\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }) : React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: \"https://memepedia.ru/wp-content/uploads/2020/10/big-floppa-1-360x270.jpg\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setFormValue(text);\n    },\n    value: formValue,\n    style: styles.input,\n    autoCorrect: false,\n    autoCapitalize: \"none\",\n    placeholder: \"Write here...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: submitForm,\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Search\")))), React.createElement(TouchableOpacity, {\n    style: styles.buttonSort,\n    onPress: function onPress() {\n      return changeSorStatus();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.textSort,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Sort by:\")), sort && React.createElement(View, {\n    style: styles.modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.oneType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Population: \"), React.createElement(Switch, {\n    value: status.likes,\n    color: \"#61dafb\",\n    onValueChange: function onValueChange() {\n      return changeSwitchSorStatusLikesUp();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.oneType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Comments: \"), React.createElement(Switch, {\n    value: status.comments,\n    color: \"#61dafb\",\n    onValueChange: function onValueChange() {\n      return changeCommentSetSortSwitch();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.oneType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"Oldest :\"), React.createElement(Switch, {\n    value: status.old,\n    color: \"#61dafb\",\n    onValueChange: function onValueChange() {\n      return changeoldStatus();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/artur/elbrus/phase-3/ПРОЕКТВЕКА/copy 2/RedditNativeChallenge/client/src/components/Header/Header.jsx"],"names":["React","useState","useNavigation","Switch","useDispatch","useSelector","chageStatusLike","chageStatusComment","chageStatusOld","styles","Header","dispath","status","state","user","statusSearch","formValue","setFormValue","sort","setSort","uri","userInfo","changeSorStatus","prev","changeSwitchSorStatusLikesUp","changeCommentSetSortSwitch","changeoldStatus","navigation","loadScene","navigate","loadSearcjScene","data","submitForm","trim","container","image","form","text","input","button","buttonSort","textSort","modal","oneType","likes","comments","old"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { View, TextInput, Image, Text, TouchableOpacity } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Switch } from \"react-native-elements\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  chageStatusLike,\n  chageStatusComment,\n  chageStatusOld,\n} from \"../../redux/actions/user.ac\";\nimport styles from \"./style\";\n\nexport default function Header() {\n  const dispath = useDispatch();\n  const status = useSelector(state => state.user.statusSearch);\n  const [formValue, setFormValue] = useState(\"\");\n\n  const [sort, setSort] = useState(false);\n  const uri = useSelector(state => state.user.userInfo.uri);\n  const changeSorStatus = () => {\n    setSort(prev => !prev);\n  };\n  const changeSwitchSorStatusLikesUp = () => {\n    dispath(chageStatusLike());\n  };\n  const changeCommentSetSortSwitch = () => {\n    dispath(chageStatusComment());\n  };\n  const changeoldStatus = () => {\n    dispath(chageStatusOld());\n  };\n\n  const navigation = useNavigation();\n\n  const loadScene = () => {\n    navigation.navigate(\"Profile\");\n  };\n\n  const loadSearcjScene = () => {\n    navigation.navigate(\"Search\", { data: formValue });\n  };\n\n  const submitForm = () => {\n    if (formValue.trim()) {\n      loadSearcjScene();\n      setFormValue(\"\");\n    }\n  };\n\n  return (\n    <>\n      <View style={styles.container}>\n        <TouchableOpacity onPress={loadScene}>\n          {uri ? (\n            <Image\n              style={styles.image}\n              source={{\n                uri: uri,\n              }}\n            />\n          ) : (\n            <Image\n              style={styles.image}\n              source={{\n                uri: \"https://memepedia.ru/wp-content/uploads/2020/10/big-floppa-1-360x270.jpg\",\n              }}\n            />\n          )}\n        </TouchableOpacity>\n\n        <View style={styles.form}>\n          <TextInput\n            onChangeText={text => setFormValue(text)}\n            value={formValue}\n            style={styles.input}\n            autoCorrect={false}\n            autoCapitalize=\"none\"\n            placeholder=\"Write here...\"\n          ></TextInput>\n\n          <TouchableOpacity onPress={submitForm} style={styles.button}>\n            <Text style={styles.text}>Search</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n\n      <TouchableOpacity\n        style={styles.buttonSort}\n        onPress={() => changeSorStatus()}\n      >\n        <Text style={styles.textSort}>Sort by:</Text>\n      </TouchableOpacity>\n\n      {sort && (\n        <View style={styles.modal}>\n          <View style={styles.oneType}>\n            <Text style={styles.text}>Population: </Text>\n            <Switch\n              value={status.likes}\n              color=\"#61dafb\"\n              onValueChange={() => changeSwitchSorStatusLikesUp()}\n            />\n          </View>\n          <View style={styles.oneType}>\n            <Text style={styles.text}>Comments: </Text>\n            <Switch\n              value={status.comments}\n              color=\"#61dafb\"\n              onValueChange={() => changeCommentSetSortSwitch()}\n            />\n          </View>\n\n          <View style={styles.oneType}>\n            <Text style={styles.text}>Oldest :</Text>\n            <Switch\n              value={status.old}\n              color=\"#61dafb\"\n              onValueChange={() => changeoldStatus()}\n            />\n          </View>\n        </View>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}