{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/artur/elbrus/phase-3/RedditNativeChallenge/client/src/components/AddCommentMenu/AddCommentMenu.jsx\";\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Header from \"../Header/Header\";\nimport LowerMenu from \"../LowerMenu/LowerMenu\";\nimport PostList from \"../PostList/PostList\";\nimport { addLike, addDislike, getContent } from \"../../redux/actions/content\";\nimport { createComMain, createComToCom } from \"../../redux/actions/comments\";\nimport styles from \"./style\";\n\nvar AddCommentMenu = function AddCommentMenu(postInfo) {\n  var dispatch = useDispatch();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      comment = _useState2[0],\n      setComment = _useState2[1];\n\n  var createComment = function createComment() {\n    if (comment.trim().length > 5) {\n      var post = {\n        text: comment,\n        autorId: userId,\n        postId: mainPost._id\n      };\n      dispatch(createComMain(post));\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.footer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, React.createElement(Input, {\n    value: comment,\n    onChangeText: function onChangeText(text) {\n      return setComment(text);\n    },\n    placeholder: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u044F\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      createComment();\n    },\n    title: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default AddCommentMenu;","map":{"version":3,"sources":["/home/artur/elbrus/phase-3/RedditNativeChallenge/client/src/components/AddCommentMenu/AddCommentMenu.jsx"],"names":["React","useState","useDispatch","useSelector","Header","LowerMenu","PostList","addLike","addDislike","getContent","createComMain","createComToCom","styles","AddCommentMenu","postInfo","dispatch","comment","setComment","createComment","trim","length","post","text","autorId","userId","postId","mainPost","_id","footer","centeredView"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,OAAOC,QAAP;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,UAA9B;AACA,SAASC,aAAT,EAAwBC,cAAxB;AACA,OAAOC,MAAP;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,QAAQ,EAAI;AACjC,MAAMC,QAAQ,GAAGb,WAAW,EAA5B;;AAEA,kBAA8BD,QAAQ,EAAtC;AAAA;AAAA,MAAOe,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,QAAIF,OAAO,CAACG,IAAR,GAAeC,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,UAAMC,IAAI,GAAG;AAAEC,QAAAA,IAAI,EAAEN,OAAR;AAAiBO,QAAAA,OAAO,EAAEC,MAA1B;AAAkCC,QAAAA,MAAM,EAAEC,QAAQ,CAACC;AAAnD,OAAb;AACAZ,MAAAA,QAAQ,CAACL,aAAa,CAACW,IAAD,CAAd,CAAR;AACD;AACF,GALD;;AAOA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACgB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,MAAM,CAACiB,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEb,OADT;AAEE,IAAA,YAAY,EAAE,sBAAAM,IAAI;AAAA,aAAIL,UAAU,CAACK,IAAD,CAAd;AAAA,KAFpB;AAGE,IAAA,WAAW,EAAC,mGAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACbJ,MAAAA,aAAa;AACd,KAHH;AAIE,IAAA,KAAK,EAAC,2HAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,CADF;AAiBD,CA7BD;;AA+BA,eAAeL,cAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Header from \"../Header/Header\";\nimport LowerMenu from \"../LowerMenu/LowerMenu\";\nimport PostList from \"../PostList/PostList\";\nimport { addLike, addDislike, getContent } from \"../../redux/actions/content\";\nimport { createComMain, createComToCom } from \"../../redux/actions/comments\";\nimport styles from \"./style\";\n\nconst AddCommentMenu = postInfo => {\n  const dispatch = useDispatch();\n  // const [commentToComment, setCommentToComment] = useState();\n  const [comment, setComment] = useState();\n\n  const createComment = () => {\n    if (comment.trim().length > 5) {\n      const post = { text: comment, autorId: userId, postId: mainPost._id };\n      dispatch(createComMain(post));\n    }\n  };\n\n  return (\n    <View style={styles.footer}>\n      <View style={styles.centeredView}>\n        <Input\n          value={comment}\n          onChangeText={text => setComment(text)}\n          placeholder=\"Текст комментария\"\n        />\n        <Button\n          onPress={() => {\n            createComment();\n          }}\n          title=\"Отправить комментарий\"\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default AddCommentMenu;\n"]},"metadata":{},"sourceType":"module"}