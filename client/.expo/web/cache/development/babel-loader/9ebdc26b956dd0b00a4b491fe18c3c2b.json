{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { DELETE_USER, SET_USER } from \"../types/userTypes\";\nimport * as endPoints from \"../../config/endPoints\";\nimport { disableLoader, enableLoader } from \"./loader.ac\";\nexport var getUserFromServer = function getUserFromServer(id) {\n  return function _callee(dispatch) {\n    var response, currentUser;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch(enableLoader());\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(endPoints.getUser(id), {\n              credentials: \"include\"\n            }));\n\n          case 3:\n            response = _context.sent;\n\n            if (!(response.status === 200)) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            currentUser = _context.sent;\n            dispatch(setUser(currentUser));\n\n          case 9:\n            dispatch(disableLoader());\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var setUser = function setUser(user) {\n  return {\n    type: SET_USER,\n    payload: user\n  };\n};\nexport var signUp = function signUp(payload) {\n  return function _callee2(dispatch) {\n    var response, user;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            dispatch(enableLoader());\n            console.log(\"PAYLOAD SIGNUP\", payload);\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(fetch(endPoints.signUp(), {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              credentials: \"include\",\n              body: JSON.stringify(payload)\n            }));\n\n          case 4:\n            response = _context2.sent;\n\n            if (!(response.status === 200)) {\n              _context2.next = 11;\n              break;\n            }\n\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 8:\n            user = _context2.sent;\n            console.log(\"inSignUP\", user);\n            dispatch(setUser(user));\n\n          case 11:\n            dispatch(disableLoader());\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var signIn = function signIn(payload, history, from) {\n  return function _callee3(dispatch) {\n    var response, user;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            dispatch(enableLoader());\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(fetch(endPoints.signIn(), {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              credentials: \"include\",\n              body: JSON.stringify(payload)\n            }));\n\n          case 3:\n            response = _context3.sent;\n\n            if (!(response.status === 200)) {\n              _context3.next = 12;\n              break;\n            }\n\n            _context3.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            user = _context3.sent;\n            dispatch(setUser(user));\n            history.replace(from);\n            _context3.next = 13;\n            break;\n\n          case 12:\n            history.replace(\"/signin\");\n\n          case 13:\n            dispatch(disableLoader());\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var signOut = function signOut() {\n  return function _callee4(dispatch) {\n    var response;\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(fetch(endPoints.signOut(), {\n              credentials: \"include\"\n            }));\n\n          case 2:\n            response = _context4.sent;\n\n            if (response.status === 200) {\n              dispatch(deleteUser());\n            }\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var checkAuth = function checkAuth() {\n  return function _callee5(dispatch) {\n    var response, user;\n    return _regeneratorRuntime.async(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regeneratorRuntime.awrap(fetch(endPoints.checkAuth(), {\n              credentials: \"include\"\n            }));\n\n          case 2:\n            response = _context5.sent;\n\n            if (!(response.status === 200)) {\n              _context5.next = 8;\n              break;\n            }\n\n            _context5.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            user = _context5.sent;\n            dispatch(setUser(user));\n\n          case 8:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var editUser = function editUser(user, history) {\n  return function _callee6(dispatch, getState) {\n    var _getState, userId, response, _user;\n\n    return _regeneratorRuntime.async(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _getState = getState(), userId = _getState.user._id;\n            dispatch(enableLoader());\n            _context6.next = 4;\n            return _regeneratorRuntime.awrap(fetch(endPoints.editUser(userId), {\n              method: \"PATCH\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              credentials: \"include\",\n              body: JSON.stringify(user)\n            }));\n\n          case 4:\n            response = _context6.sent;\n\n            if (!(response.status === 200)) {\n              _context6.next = 13;\n              break;\n            }\n\n            _context6.next = 8;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 8:\n            _user = _context6.sent;\n            dispatch(setUser(_user));\n            history.replace(\"/users/\" + _user._id);\n            _context6.next = 14;\n            break;\n\n          case 13:\n            history.replace(\"/\");\n\n          case 14:\n            dispatch(disableLoader());\n\n          case 15:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var deleteUser = function deleteUser() {\n  return {\n    type: DELETE_USER\n  };\n};","map":{"version":3,"sources":["/home/artur/elbrus/phase-3/RedditNativeChallenge/client/src/redux/actions/user.ac.js"],"names":["DELETE_USER","SET_USER","endPoints","disableLoader","enableLoader","getUserFromServer","id","dispatch","fetch","getUser","credentials","response","status","json","currentUser","setUser","user","type","payload","signUp","console","log","method","headers","body","JSON","stringify","signIn","history","from","replace","signOut","deleteUser","checkAuth","editUser","getState","userId","_id"],"mappings":"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","sourcesContent":["import { DELETE_USER, SET_USER } from \"../types/userTypes\";\nimport * as endPoints from \"../../config/endPoints\";\nimport { disableLoader, enableLoader } from \"./loader.ac\";\n\nexport const getUserFromServer = id => async dispatch => {\n  dispatch(enableLoader());\n  const response = await fetch(endPoints.getUser(id), {\n    credentials: \"include\",\n  });\n  if (response.status === 200) {\n    const currentUser = await response.json();\n    dispatch(setUser(currentUser));\n  }\n  dispatch(disableLoader());\n};\n\nexport const setUser = user => ({\n  type: SET_USER,\n  payload: user,\n});\n\nexport const signUp = payload => async dispatch => {\n  dispatch(enableLoader());\n  console.log(\"PAYLOAD SIGNUP\", payload);\n  // console.log(endPoints.signUp());\n  const response = await fetch(endPoints.signUp(), {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    credentials: \"include\",\n    body: JSON.stringify(payload),\n  });\n  if (response.status === 200) {\n    const user = await response.json();\n    console.log(\"inSignUP\", user);\n    dispatch(setUser(user));\n  }\n  dispatch(disableLoader());\n};\n\nexport const signIn = (payload, history, from) => async dispatch => {\n  dispatch(enableLoader());\n  const response = await fetch(endPoints.signIn(), {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    credentials: \"include\",\n    body: JSON.stringify(payload),\n  });\n  if (response.status === 200) {\n    const user = await response.json();\n    dispatch(setUser(user));\n    history.replace(from);\n  } else {\n    history.replace(\"/signin\");\n  }\n  dispatch(disableLoader());\n};\n\nexport const signOut = () => async dispatch => {\n  const response = await fetch(endPoints.signOut(), {\n    credentials: \"include\",\n  });\n  if (response.status === 200) {\n    dispatch(deleteUser());\n  }\n};\n\nexport const checkAuth = () => async dispatch => {\n  const response = await fetch(endPoints.checkAuth(), {\n    credentials: \"include\",\n  });\n  if (response.status === 200) {\n    const user = await response.json();\n    dispatch(setUser(user));\n  }\n};\n\nexport const editUser = (user, history) => async (dispatch, getState) => {\n  const {\n    user: { _id: userId },\n  } = getState();\n  dispatch(enableLoader());\n  const response = await fetch(endPoints.editUser(userId), {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    credentials: \"include\",\n    body: JSON.stringify(user),\n  });\n  if (response.status === 200) {\n    const user = await response.json();\n    dispatch(setUser(user));\n    history.replace(`/users/${user._id}`);\n  } else {\n    history.replace(\"/\");\n  }\n  dispatch(disableLoader());\n};\n\nexport const deleteUser = () => ({\n  type: DELETE_USER,\n});\n"]},"metadata":{},"sourceType":"module"}