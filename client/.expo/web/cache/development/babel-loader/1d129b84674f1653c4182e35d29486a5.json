{"ast":null,"code":"var _jsxFileName = \"/Users/user/elbrus/PHASE 3/RedditNativeChallenge/client/src/components/Item.js\";\nimport React, { useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Card, ListItem, Button } from \"react-native-elements\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { addLike } from \"../redux/actions/content\";\nimport { useDispatch } from \"react-redux\";\nexport default function Item(_ref) {\n  var el = _ref.el;\n  var dispatch = useDispatch();\n  var userId = useSelector(function (state) {\n    return state.user.id;\n  });\n\n  var like = function like(userId, postId) {\n    dispatch(addLike(userId, postId));\n  };\n\n  return React.createElement(View, {\n    style: styles.div,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, el.title), React.createElement(Card.Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), React.createElement(Card.Image, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, el.description)), React.createElement(View, {\n    style: styles.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon.Button, {\n    name: \"thumbs-up\",\n    backgroundColor: \"gray\",\n    onPress: function onPress() {\n      return like(userId, postId);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, el.likes.length), React.createElement(Icon.Button, {\n    name: \"comments\",\n    backgroundColor: \"gray\",\n    onPress: function onPress() {\n      return console.log(\"comment\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, el.comments.length))));\n}\nvar styles = StyleSheet.create({\n  div: {\n    width: 400,\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    borderStyle: \"solid\",\n    borderColor: \"black\",\n    borderWidth: 1\n  },\n  icons: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/user/elbrus/PHASE 3/RedditNativeChallenge/client/src/components/Item.js"],"names":["React","useEffect","Card","ListItem","Button","Icon","addLike","useDispatch","Item","el","dispatch","userId","useSelector","state","user","id","like","postId","styles","div","title","marginBottom","description","icons","likes","length","console","log","comments","StyleSheet","create","width","flexDirection","justifyContent","borderStyle","borderColor","borderWidth","flex"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,MAAzB,QAAuC,uBAAvC;AACA,OAAOC,IAAP;AACA,SAASC,OAAT;AACA,SAASC,WAAT,QAA4B,aAA5B;AAIA,eAAe,SAASC,IAAT,OAAsB;AAAA,MAANC,EAAM,QAANA,EAAM;AAEnC,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;AAEA,MAAMI,MAAM,GAAGC,WAAW,CAAC,UAAAC,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWC,EAAf;AAAA,GAAN,CAA1B;;AAEA,MAAMC,IAAI,GAAG,SAAPA,IAAO,CAACL,MAAD,EAASM,MAAT,EAAoB;AAC/BP,IAAAA,QAAQ,CAACJ,OAAO,CAACK,MAAD,EAASM,MAAT,CAAR,CAAR;AACF,GAFA;;AAMA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaV,EAAE,CAACW,KAAhB,CADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCZ,EAAE,CAACa,WAAvC,CADF,CAHF,EAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,eAAe,EAAC,MAFlB;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMP,IAAI,CAACL,MAAD,EAASM,MAAT,CAAV;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGR,EAAE,CAACe,KAAH,CAASC,MALZ,CADF,EAQE,oBAAC,IAAD,CAAM,MAAN;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,eAAe,EAAC,MAFlB;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAN;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGlB,EAAE,CAACmB,QAAH,CAAYH,MALf,CARF,CANF,CADF,CADF;AA2BD;AAED,IAAMP,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC/BX,EAAAA,GAAG,EAAE;AACHY,IAAAA,KAAK,EAAE,GADJ;AAEHC,IAAAA,aAAa,EAAE,QAFZ;AAGHC,IAAAA,cAAc,EAAE,cAHb;AAIHC,IAAAA,WAAW,EAAE,OAJV;AAKHC,IAAAA,WAAW,EAAE,OALV;AAMHC,IAAAA,WAAW,EAAE;AANV,GAD0B;AAS/Bb,EAAAA,KAAK,EAAE;AACLc,IAAAA,IAAI,EAAE,CADD;AAELL,IAAAA,aAAa,EAAE,KAFV;AAGLC,IAAAA,cAAc,EAAE;AAHX;AATwB,CAAlB,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { StyleSheet, View, TextInput, Text } from \"react-native\";\nimport { Card, ListItem, Button } from \"react-native-elements\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport { addLike } from \"../redux/actions/content\";\nimport { useDispatch } from \"react-redux\";\n\n\n\nexport default function Item({ el }) {\n  \n  const dispatch = useDispatch();\n\n  const userId = useSelector(state => state.user.id);\n\n  const like = (userId, postId) => {\n    dispatch(addLike(userId, postId))\n }\n\n\n\n  return (\n    <View style={styles.div}>\n      <Card>\n        <Card.Title>{el.title}</Card.Title>\n        <Card.Divider />\n        <Card.Image>\n          <Text style={{ marginBottom: 10 }}>{el.description}</Text>\n        </Card.Image>\n        <View style={styles.icons}>\n          <Icon.Button\n            name=\"thumbs-up\"\n            backgroundColor=\"gray\"\n            onPress={() => like(userId, postId)}\n          >\n            {el.likes.length}\n          </Icon.Button>\n          <Icon.Button\n            name=\"comments\"\n            backgroundColor=\"gray\"\n            onPress={() => console.log(\"comment\")}\n          >\n            {el.comments.length}\n          </Icon.Button>\n        </View>\n      </Card>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  div: {\n    width: 400,\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    borderStyle: \"solid\",\n    borderColor: \"black\",\n    borderWidth: 1,\n  },\n  icons: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}