{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/artur/elbrus/phase-3/\\u041F\\u0420\\u041E\\u0415\\u041A\\u0422\\u0412\\u0415\\u041A\\u0410/copy 2/RedditNativeChallenge/client/src/components/Profile/Profile.jsx\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { signOut as signOutAC } from \"../../redux/actions/user.ac\";\nimport { editProfile } from \"../../redux/actions/editProfile\";\nimport Item from \"../Item/Item\";\nimport EditPhoto from \"../editPhoto/EditPhoto\";\nimport styles from \"./style\";\nexport default function UserProfileView() {\n  var _this = this;\n\n  var navigation = useNavigation();\n  var dispatch = useDispatch();\n\n  var _useState = useState({\n    status: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      showEditForm = _useState2[0],\n      setshowEditForm = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      post = _useState4[0],\n      setPost = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      avatarStatus = _useState6[0],\n      setAvatarStatus = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      updatePhoto = _useState8[0],\n      setUpdatePhoto = _useState8[1];\n\n  var username = useSelector(function (state) {\n    return state.user.userInfo.userName;\n  });\n  var uri = useSelector(function (state) {\n    return state.user.userInfo.uri;\n  });\n  var email = useSelector(function (state) {\n    return state.user.userInfo.email;\n  });\n  var userId = useSelector(function (state) {\n    return state.user.userInfo.id;\n  });\n  var test = useSelector(function (state) {\n    return state.user.userInfo;\n  });\n  console.log(77, test);\n\n  var _useState9 = useState(username),\n      _useState10 = _slicedToArray(_useState9, 2),\n      inputUsername = _useState10[0],\n      setInputUsername = _useState10[1];\n\n  var _useState11 = useState(email),\n      _useState12 = _slicedToArray(_useState11, 2),\n      inputEmail = _useState12[0],\n      setInputEmail = _useState12[1];\n\n  var signOutFunc = function signOutFunc() {\n    dispatch(signOutAC());\n  };\n\n  var posts = useSelector(function (state) {\n    return state.content.content;\n  });\n  var autorPost = posts.filter(function (el) {\n    return el.author._id == userId;\n  });\n\n  var editProfileFunction = function editProfileFunction(id) {\n    if (inputUsername.trim() && inputEmail.trim()) {\n      var user = {\n        _id: userId,\n        userName: inputUsername,\n        email: inputEmail,\n        uri: updatePhoto\n      };\n      dispatch(editProfile(user));\n      setshowEditForm(function (prev) {\n        return !prev;\n      });\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.headerContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, uri ? React.createElement(Image, {\n    style: styles.avatar,\n    source: {\n      uri: uri\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }) : React.createElement(Image, {\n    style: styles.avatar,\n    source: {\n      uri: \"https://memepedia.ru/wp-content/uploads/2020/10/big-floppa-1-360x270.jpg\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), showEditForm.status ? React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setInputUsername(text);\n    },\n    style: styles.inputs,\n    value: inputUsername,\n    placeholder: \"New username\",\n    underlineColorAndroid: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }), React.createElement(Image, {\n    style: styles.inputIcon,\n    source: {\n      uri: \"https://img.icons8.com/nolan/40/000000/email.png\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setInputEmail(text);\n    },\n    style: styles.inputs,\n    value: inputEmail,\n    placeholder: \"New email\",\n    keyboardType: \"email-address\",\n    underlineColorAndroid: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }), React.createElement(Image, {\n    style: styles.inputIcon,\n    source: {\n      uri: \"https://img.icons8.com/nolan/40/000000/key.png\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  })), avatarStatus && React.createElement(EditPhoto, {\n    setUpdatePhoto: setUpdatePhoto,\n    updatePhoto: updatePhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }), updatePhoto && React.createElement(Image, {\n    source: {\n      uri: updatePhoto\n    },\n    style: {\n      width: 200,\n      height: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: [styles.buttonContainer, styles.updateButton],\n    onPress: function onPress() {\n      return setAvatarStatus(function (prev) {\n        return !prev;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, React.createElement(EditPhoto, {\n    setUpdatePhoto: setUpdatePhoto,\n    updatePhoto: updatePhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: [styles.buttonContainer, styles.updateButton],\n    onPress: function onPress() {\n      return editProfileFunction(userId);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.updateText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, \"Update\"))) : React.createElement(React.Fragment, null, React.createElement(Text, {\n    style: styles.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, username), React.createElement(Text, {\n    style: styles.userInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, email)))), React.createElement(View, {\n    style: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    size: 30,\n    name: \"rocket\",\n    color: \"#61dafb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, \" Subscribes\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setPost(function (prev) {\n        return !prev;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    size: 30,\n    name: \"inbox\",\n    color: \"#61dafb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, \" Posts\"))), post ? autorPost.length == 0 ? React.createElement(Text, {\n    style: styles.userInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, \"You dont have any posts\") : React.createElement(View, {\n    style: styles.modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    style: {\n      height: 430\n    },\n    data: autorPost,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate(\"OnePostPage\", {\n            el: item\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 19\n        }\n      }, React.createElement(Item, {\n        el: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }\n      }));\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  })) : React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setshowEditForm(function (prev) {\n        return {\n          status: !prev.status\n        };\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    size: 30,\n    name: \"edit\",\n    color: \"#61dafb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, \" Edit profile\"))), React.createElement(TouchableOpacity, {\n    onPress: signOutFunc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    size: 30,\n    name: \"close\",\n    color: \"#61dafb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, \" Logout\")))));\n}","map":{"version":3,"sources":["/home/artur/elbrus/phase-3/ПРОЕКТВЕКА/copy 2/RedditNativeChallenge/client/src/components/Profile/Profile.jsx"],"names":["React","useState","Icon","useDispatch","useSelector","useNavigation","signOut","signOutAC","editProfile","Item","EditPhoto","styles","UserProfileView","navigation","dispatch","status","showEditForm","setshowEditForm","post","setPost","avatarStatus","setAvatarStatus","updatePhoto","setUpdatePhoto","username","state","user","userInfo","userName","uri","email","userId","id","test","console","log","inputUsername","setInputUsername","inputEmail","setInputEmail","signOutFunc","posts","content","autorPost","filter","el","author","_id","editProfileFunction","trim","prev","container","headerContent","avatar","inputContainer","text","inputs","inputIcon","width","height","buttonContainer","updateButton","updateText","name","body","item","info","length","modal","navigate"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AASA,OAAOC,IAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,SAASC,OAAO,IAAIC,SAApB;AACA,SAASC,WAAT;AACA,OAAOC,IAAP;AACA,OAAOC,SAAP;AACA,OAAOC,MAAP;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AACxC,MAAMC,UAAU,GAAGR,aAAa,EAAhC;AACA,MAAMS,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,kBAAwCF,QAAQ,CAAC;AAAEc,IAAAA,MAAM,EAAE;AAAV,GAAD,CAAhD;AAAA;AAAA,MAAOC,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAAwBhB,QAAQ,CAAC,KAAD,CAAhC;AAAA;AAAA,MAAOiB,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAwClB,QAAQ,CAAC,KAAD,CAAhD;AAAA;AAAA,MAAOmB,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAAsCpB,QAAQ,EAA9C;AAAA;AAAA,MAAOqB,WAAP;AAAA,MAAoBC,cAApB;;AAKA,MAAMC,QAAQ,GAAGpB,WAAW,CAAC,UAAAqB,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoBC,QAAxB;AAAA,GAAN,CAA5B;AACA,MAAMC,GAAG,GAAGzB,WAAW,CAAC,UAAAqB,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoBE,GAAxB;AAAA,GAAN,CAAvB;AACA,MAAMC,KAAK,GAAG1B,WAAW,CAAC,UAAAqB,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoBG,KAAxB;AAAA,GAAN,CAAzB;AACA,MAAMC,MAAM,GAAG3B,WAAW,CAAC,UAAAqB,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoBK,EAAxB;AAAA,GAAN,CAA1B;AACA,MAAMC,IAAI,GAAG7B,WAAW,CAAC,UAAAqB,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWC,QAAf;AAAA,GAAN,CAAxB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ,EAAgBF,IAAhB;;AAEA,mBAA0ChC,QAAQ,CAACuB,QAAD,CAAlD;AAAA;AAAA,MAAOY,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,oBAAoCpC,QAAQ,CAAC6B,KAAD,CAA5C;AAAA;AAAA,MAAOQ,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB1B,IAAAA,QAAQ,CAACP,SAAS,EAAV,CAAR;AACD,GAFD;;AAGA,MAAMkC,KAAK,GAAGrC,WAAW,CAAC,UAAAqB,KAAK;AAAA,WAAIA,KAAK,CAACiB,OAAN,CAAcA,OAAlB;AAAA,GAAN,CAAzB;AAEA,MAAMC,SAAS,GAAGF,KAAK,CAACG,MAAN,CAAa,UAAAC,EAAE;AAAA,WAAIA,EAAE,CAACC,MAAH,CAAUC,GAAV,IAAiBhB,MAArB;AAAA,GAAf,CAAlB;;AAEA,MAAMiB,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAhB,EAAE,EAAI;AAChC,QAAII,aAAa,CAACa,IAAd,MAAwBX,UAAU,CAACW,IAAX,EAA5B,EAA+C;AAC7C,UAAMvB,IAAI,GAAG;AACXqB,QAAAA,GAAG,EAAEhB,MADM;AAEXH,QAAAA,QAAQ,EAAEQ,aAFC;AAGXN,QAAAA,KAAK,EAAEQ,UAHI;AAIXT,QAAAA,GAAG,EAAEP;AAJM,OAAb;AAMAR,MAAAA,QAAQ,CAACN,WAAW,CAACkB,IAAD,CAAZ,CAAR;AACAT,MAAAA,eAAe,CAAC,UAAAiC,IAAI;AAAA,eAAI,CAACA,IAAL;AAAA,OAAL,CAAf;AACD;AACF,GAXD;;AAaA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvC,MAAM,CAACwC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAExC,MAAM,CAACyC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,GAAG,GACF,oBAAC,KAAD;AACE,IAAA,KAAK,EAAElB,MAAM,CAAC0C,MADhB;AAEE,IAAA,MAAM,EAAE;AACNxB,MAAAA,GAAG,EAAEA;AADC,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,GAQF,oBAAC,KAAD;AACE,IAAA,KAAK,EAAElB,MAAM,CAAC0C,MADhB;AAEE,IAAA,MAAM,EAAE;AACNxB,MAAAA,GAAG,EAAE;AADC,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAiBGb,YAAY,CAACD,MAAb,GACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACwC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAExC,MAAM,CAAC2C,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,aAAIlB,gBAAgB,CAACkB,IAAD,CAApB;AAAA,KADpB;AAEE,IAAA,KAAK,EAAE5C,MAAM,CAAC6C,MAFhB;AAGE,IAAA,KAAK,EAAEpB,aAHT;AAIE,IAAA,WAAW,EAAC,cAJd;AAKE,IAAA,qBAAqB,EAAC,aALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEzB,MAAM,CAAC8C,SADhB;AAEE,IAAA,MAAM,EAAE;AACN5B,MAAAA,GAAG,EAAE;AADC,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,EAiBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElB,MAAM,CAAC2C,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,aAAIhB,aAAa,CAACgB,IAAD,CAAjB;AAAA,KADpB;AAEE,IAAA,KAAK,EAAE5C,MAAM,CAAC6C,MAFhB;AAGE,IAAA,KAAK,EAAElB,UAHT;AAIE,IAAA,WAAW,EAAC,WAJd;AAKE,IAAA,YAAY,EAAC,eALf;AAME,IAAA,qBAAqB,EAAC,aANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAE3B,MAAM,CAAC8C,SADhB;AAEE,IAAA,MAAM,EAAE;AACN5B,MAAAA,GAAG,EAAE;AADC,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CAjBF,EAiCGT,YAAY,IACX,oBAAC,SAAD;AACE,IAAA,cAAc,EAAEG,cADlB;AAEE,IAAA,WAAW,EAAED,WAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCJ,EAuCGA,WAAW,IACV,oBAAC,KAAD;AACE,IAAA,MAAM,EAAE;AAAEO,MAAAA,GAAG,EAAEP;AAAP,KADV;AAEE,IAAA,KAAK,EAAE;AAAEoC,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxCJ,EA6CE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAE,CAAChD,MAAM,CAACiD,eAAR,EAAyBjD,MAAM,CAACkD,YAAhC,CADT;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMxC,eAAe,CAAC,UAAA6B,IAAI;AAAA,eAAI,CAACA,IAAL;AAAA,OAAL,CAArB;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,SAAD;AACE,IAAA,cAAc,EAAE3B,cADlB;AAEE,IAAA,WAAW,EAAED,WAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CA7CF,EAsDE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAE,CAACX,MAAM,CAACiD,eAAR,EAAyBjD,MAAM,CAACkD,YAAhC,CADT;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMb,mBAAmB,CAACjB,MAAD,CAAzB;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEpB,MAAM,CAACmD,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CAtDF,CADD,GA+DC,0CACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnD,MAAM,CAACoD,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BvC,QAA3B,CADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAACgB,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BG,KAA/B,CAFF,CAhFJ,CADF,CADF,EA0FE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnB,MAAM,CAACqD,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErD,MAAM,CAACsD,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,EAAZ;AAAgB,IAAA,IAAI,EAAC,QAArB;AAA8B,IAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEtD,MAAM,CAACuD,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CADF,EAKE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAM/C,OAAO,CAAC,UAAA+B,IAAI;AAAA,eAAI,CAACA,IAAL;AAAA,OAAL,CAAb;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvC,MAAM,CAACsD,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,EAAZ;AAAgB,IAAA,IAAI,EAAC,OAArB;AAA6B,IAAA,KAAK,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEtD,MAAM,CAACuD,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF,CALF,EAWGhD,IAAI,GACHyB,SAAS,CAACwB,MAAV,IAAoB,CAApB,GACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAExD,MAAM,CAACgB,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,GAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,MAAM,CAACyD,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAE;AAAET,MAAAA,MAAM,EAAE;AAAV,KADT;AAEE,IAAA,IAAI,EAAEhB,SAFR;AAGE,IAAA,UAAU,EAAE;AAAA,UAAGsB,IAAH,QAAGA,IAAH;AAAA,aACV,oBAAC,gBAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACbpD,UAAAA,UAAU,CAACwD,QAAX,CAAoB,aAApB,EAAmC;AACjCxB,YAAAA,EAAE,EAAEoB;AAD6B,WAAnC;AAGD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAEA,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADU;AAAA,KAHd;AAcE,IAAA,YAAY,EAAE,sBAAAA,IAAI;AAAA,aAAIA,IAAI,CAACjC,EAAT;AAAA,KAdpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJC,GAwBH,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCJ,EAqCE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aACPf,eAAe,CAAC,UAAAiC,IAAI;AAAA,eAAK;AACvBnC,UAAAA,MAAM,EAAE,CAACmC,IAAI,CAACnC;AADS,SAAL;AAAA,OAAL,CADR;AAAA,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACsD,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,EAAZ;AAAgB,IAAA,IAAI,EAAC,MAArB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEtD,MAAM,CAACuD,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,CAPF,CArCF,EAkDE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE1B,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE7B,MAAM,CAACsD,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,EAAZ;AAAgB,IAAA,IAAI,EAAC,OAArB;AAA6B,IAAA,KAAK,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEtD,MAAM,CAACuD,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CADF,CAlDF,CA1FF,CADF;AAsJD","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Text,\n  View,\n  TextInput,\n  Image,\n  TouchableOpacity,\n  FlatList,\n} from \"react-native\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nimport { signOut as signOutAC } from \"../../redux/actions/user.ac\";\nimport { editProfile } from \"../../redux/actions/editProfile\";\nimport Item from \"../Item/Item\";\nimport EditPhoto from \"../editPhoto/EditPhoto\";\nimport styles from \"./style\";\n\nexport default function UserProfileView() {\n  const navigation = useNavigation();\n  const dispatch = useDispatch();\n\n  const [showEditForm, setshowEditForm] = useState({ status: false });\n  const [post, setPost] = useState(false);\n  const [avatarStatus, setAvatarStatus] = useState(false);\n  const [updatePhoto, setUpdatePhoto] = useState();\n\n  // const { username, uri, email, userId } = useSelector(\n  //   state => state.user.userInfo\n  // );\n  const username = useSelector(state => state.user.userInfo.userName);\n  const uri = useSelector(state => state.user.userInfo.uri);\n  const email = useSelector(state => state.user.userInfo.email);\n  const userId = useSelector(state => state.user.userInfo.id);\n  const test = useSelector(state => state.user.userInfo);\n  console.log(77, test);\n\n  const [inputUsername, setInputUsername] = useState(username);\n  const [inputEmail, setInputEmail] = useState(email);\n\n  const signOutFunc = () => {\n    dispatch(signOutAC());\n  };\n  const posts = useSelector(state => state.content.content);\n\n  const autorPost = posts.filter(el => el.author._id == userId);\n\n  const editProfileFunction = id => {\n    if (inputUsername.trim() && inputEmail.trim()) {\n      const user = {\n        _id: userId,\n        userName: inputUsername,\n        email: inputEmail,\n        uri: updatePhoto,\n      };\n      dispatch(editProfile(user));\n      setshowEditForm(prev => !prev);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <View>\n        <View style={styles.headerContent}>\n          {uri ? (\n            <Image\n              style={styles.avatar}\n              source={{\n                uri: uri,\n              }}\n            />\n          ) : (\n            <Image\n              style={styles.avatar}\n              source={{\n                uri: \"https://memepedia.ru/wp-content/uploads/2020/10/big-floppa-1-360x270.jpg\",\n              }}\n            />\n          )}\n\n          {showEditForm.status ? (\n            <View style={styles.container}>\n              <View style={styles.inputContainer}>\n                <TextInput\n                  onChangeText={text => setInputUsername(text)}\n                  style={styles.inputs}\n                  value={inputUsername}\n                  placeholder=\"New username\"\n                  underlineColorAndroid=\"transparent\"\n                />\n                <Image\n                  style={styles.inputIcon}\n                  source={{\n                    uri: \"https://img.icons8.com/nolan/40/000000/email.png\",\n                  }}\n                />\n              </View>\n\n              <View style={styles.inputContainer}>\n                <TextInput\n                  onChangeText={text => setInputEmail(text)}\n                  style={styles.inputs}\n                  value={inputEmail}\n                  placeholder=\"New email\"\n                  keyboardType=\"email-address\"\n                  underlineColorAndroid=\"transparent\"\n                />\n                <Image\n                  style={styles.inputIcon}\n                  source={{\n                    uri: \"https://img.icons8.com/nolan/40/000000/key.png\",\n                  }}\n                />\n              </View>\n              {avatarStatus && (\n                <EditPhoto\n                  setUpdatePhoto={setUpdatePhoto}\n                  updatePhoto={updatePhoto}\n                />\n              )}\n              {updatePhoto && (\n                <Image\n                  source={{ uri: updatePhoto }}\n                  style={{ width: 200, height: 200 }}\n                />\n              )}\n              <TouchableOpacity\n                style={[styles.buttonContainer, styles.updateButton]}\n                onPress={() => setAvatarStatus(prev => !prev)}\n              >\n                <EditPhoto\n                  setUpdatePhoto={setUpdatePhoto}\n                  updatePhoto={updatePhoto}\n                />\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[styles.buttonContainer, styles.updateButton]}\n                onPress={() => editProfileFunction(userId)}\n              >\n                <Text style={styles.updateText}>Update</Text>\n              </TouchableOpacity>\n            </View>\n          ) : (\n            <>\n              <Text style={styles.name}>{username}</Text>\n              <Text style={styles.userInfo}>{email}</Text>\n            </>\n          )}\n        </View>\n      </View>\n\n      <View style={styles.body}>\n        <View style={styles.item}>\n          <Icon size={30} name=\"rocket\" color=\"#61dafb\"></Icon>\n          <Text style={styles.info}> Subscribes</Text>\n        </View>\n        <TouchableOpacity onPress={() => setPost(prev => !prev)}>\n          <View style={styles.item}>\n            <Icon size={30} name=\"inbox\" color=\"#61dafb\"></Icon>\n            <Text style={styles.info}> Posts</Text>\n          </View>\n        </TouchableOpacity>\n        {post ? (\n          autorPost.length == 0 ? (\n            <Text style={styles.userInfo}>You dont have any posts</Text>\n          ) : (\n            <View style={styles.modal}>\n              <FlatList\n                style={{ height: 430 }}\n                data={autorPost}\n                renderItem={({ item }) => (\n                  <TouchableOpacity\n                    onPress={() => {\n                      navigation.navigate(\"OnePostPage\", {\n                        el: item,\n                      });\n                    }}\n                  >\n                    <Item el={item} />\n                  </TouchableOpacity>\n                )}\n                keyExtractor={item => item.id}\n              />\n            </View>\n          )\n        ) : (\n          <Text></Text>\n        )}\n        <TouchableOpacity\n          onPress={() =>\n            setshowEditForm(prev => ({\n              status: !prev.status,\n            }))\n          }\n        >\n          <View style={styles.item}>\n            <Icon size={30} name=\"edit\" color=\"#61dafb\"></Icon>\n            <Text style={styles.info}> Edit profile</Text>\n          </View>\n        </TouchableOpacity>\n\n        <TouchableOpacity onPress={signOutFunc}>\n          <View style={styles.item}>\n            <Icon size={30} name=\"close\" color=\"#61dafb\"></Icon>\n            <Text style={styles.info}> Logout</Text>\n          </View>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}