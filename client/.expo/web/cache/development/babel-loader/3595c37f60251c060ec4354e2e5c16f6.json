{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/user/Documents/elbrus/phase 3/RedditNativeChallenge/client/src/components/AddCommentMenu/AddCommentMenu.jsx\";\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Input, Text } from \"react-native-elements\";\nimport Header from \"../Header/Header\";\nimport LowerMenu from \"../LowerMenu/LowerMenu\";\nimport PostList from \"../PostList/PostList\";\nimport { addLike, addDislike, getContent, createComMain, createComToCom } from \"../../redux/actions/content\";\nimport styles from \"./style\";\n\nvar AddCommentMenu = function AddCommentMenu(_ref) {\n  var userId = _ref.userId,\n      postId = _ref.postId;\n  var dispatch = useDispatch();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      comment = _useState2[0],\n      setComment = _useState2[1];\n\n  var createComment = function createComment() {\n    if (comment.trim().length > 5) {\n      var post = {\n        text: comment,\n        autorId: userId,\n        postId: postId\n      };\n      dispatch(createComMain(post));\n      setComment(\"\");\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.footer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      color: \"#f9fafb\",\n      width: 300,\n      height: 50\n    },\n    value: comment,\n    onChangeText: function onChangeText(text) {\n      return setComment(text);\n    },\n    placeholder: \"Comment\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.buttonComment,\n    onPress: function onPress() {\n      createComment();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Add\"))));\n};\n\nexport default AddCommentMenu;","map":{"version":3,"sources":["/Users/user/Documents/elbrus/phase 3/RedditNativeChallenge/client/src/components/AddCommentMenu/AddCommentMenu.jsx"],"names":["React","useState","useDispatch","useSelector","Button","Input","Text","Header","LowerMenu","PostList","addLike","addDislike","getContent","createComMain","createComToCom","styles","AddCommentMenu","userId","postId","dispatch","comment","setComment","createComment","trim","length","post","text","autorId","footer","centeredView","color","width","height","buttonComment"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,uBAApC;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,OAAOC,QAAP;AACA,SACEC,OADF,EAEEC,UAFF,EAGEC,UAHF,EAIEC,aAJF,EAKEC,cALF;AAQA,OAAOC,MAAP;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAwB;AAAA,MAArBC,MAAqB,QAArBA,MAAqB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AAC7C,MAAMC,QAAQ,GAAGjB,WAAW,EAA5B;;AAGA,kBAA8BD,QAAQ,EAAtC;AAAA;AAAA,MAAOmB,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,QAAIF,OAAO,CAACG,IAAR,GAAeC,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,UAAMC,IAAI,GAAG;AAAEC,QAAAA,IAAI,EAAEN,OAAR;AAAiBO,QAAAA,OAAO,EAAEV,MAA1B;AAAkCC,QAAAA,MAAM,EAANA;AAAlC,OAAb;AACAC,MAAAA,QAAQ,CAACN,aAAa,CAACY,IAAD,CAAd,CAAR;AACAJ,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AACF,GAND;;AAQA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACa,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAACc,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,KAAK,EAAE,GAA3B;AAAgCC,MAAAA,MAAM,EAAE;AAAxC,KADT;AAEE,IAAA,KAAK,EAAEZ,OAFT;AAGE,IAAA,YAAY,EAAE,sBAAAM,IAAI;AAAA,aAAIL,UAAU,CAACK,IAAD,CAAd;AAAA,KAHpB;AAIE,IAAA,WAAW,EAAC,SAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEX,MAAM,CAACkB,aADhB;AAEE,IAAA,OAAO,EAAE,mBAAM;AACbX,MAAAA,aAAa;AACd,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACW,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALF,CAPF,CADF,CADF;AAmBD,CAjCD;;AAmCA,eAAeV,cAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { View, TouchableOpacity, TextInput } from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Input, Text } from \"react-native-elements\";\nimport Header from \"../Header/Header\";\nimport LowerMenu from \"../LowerMenu/LowerMenu\";\nimport PostList from \"../PostList/PostList\";\nimport {\n  addLike,\n  addDislike,\n  getContent,\n  createComMain,\n  createComToCom,\n} from \"../../redux/actions/content\";\n\nimport styles from \"./style\";\n\nconst AddCommentMenu = ({ userId, postId }) => {\n  const dispatch = useDispatch();\n\n  // const [commentToComment, setCommentToComment] = useState();\n  const [comment, setComment] = useState();\n\n  const createComment = () => {\n    if (comment.trim().length > 5) {\n      const post = { text: comment, autorId: userId, postId };\n      dispatch(createComMain(post));\n      setComment(\"\");\n    }\n  };\n\n  return (\n    <View style={styles.footer}>\n      <View style={styles.centeredView}>\n        <TextInput\n          style={{ color: \"#f9fafb\", width: 300, height: 50,  }}\n          value={comment}\n          onChangeText={text => setComment(text)}\n          placeholder=\"Comment\"\n        ></TextInput>\n        <TouchableOpacity\n          style={styles.buttonComment}\n          onPress={() => {\n            createComment();\n          }}>\n          <Text style={styles.text}>Add</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nexport default AddCommentMenu;\n"]},"metadata":{},"sourceType":"module"}