{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/artur/elbrus/phase-3/RedditNativeChallenge/client/src/navigation/AppNavigator.jsx\";\nimport \"react-native-gesture-handler\";\nimport React, { useState, useEffect } from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport MainPage from \"../components/MainPage/MainPage\";\nimport SignIn from \"../components/Forms/SignIn/SignIn\";\nimport SignUp from \"../components/Forms/SignUp/SignUp\";\nimport UserProfileView from \"../components/Profile/Profile\";\nimport Post from \"../components/post/post\";\nimport { useSelector, useDispatch } from \"react-redux\";\nvar Stack = createStackNavigator();\nexport default function Navigate() {\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      curUser = _useState2[0],\n      setCurUser = _useState2[1];\n\n  useEffect(function () {\n    setCurUser(user);\n  }, []);\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, curUser ? React.createElement(Stack.Screen, {\n    name: \"MainPage\",\n    component: MainPage,\n    options: {\n      title: \"Main Page\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }) : React.createElement(Stack.Screen, {\n    name: \"SignUp\",\n    component: SignUp,\n    options: {\n      title: \"Registration\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Profile\",\n    component: UserProfileView,\n    options: {\n      title: \"Your profile\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Post\",\n    component: Post,\n    options: {\n      title: \"Post\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/artur/elbrus/phase-3/RedditNativeChallenge/client/src/navigation/AppNavigator.jsx"],"names":["React","useState","useEffect","createStackNavigator","NavigationContainer","MainPage","SignIn","SignUp","UserProfileView","Post","useSelector","useDispatch","Stack","Navigate","user","state","curUser","setCurUser","title"],"mappings":";;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,QAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,eAAP;AACA,OAAOC,IAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,IAAMC,KAAK,GAAGT,oBAAoB,EAAlC;AAEA,eAAe,SAASU,QAAT,GAAoB;AACjC,MAAMC,IAAI,GAAGJ,WAAW,CAAC,UAAAK,KAAK;AAAA,WAAIA,KAAK,CAACD,IAAV;AAAA,GAAN,CAAxB;;AACA,kBAA8Bb,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOe,OAAP;AAAA,MAAgBC,UAAhB;;AACAf,EAAAA,SAAS,CAAC,YAAM;AAQde,IAAAA,UAAU,CAACH,IAAD,CAAV;AACD,GATQ,EASN,EATM,CAAT;AAUA,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,OAAO,GACN,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,SAAS,EAAEX,QAFb;AAGE,IAAA,OAAO,EAAE;AAAEa,MAAAA,KAAK,EAAE;AAAT,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAON,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAEX,MAFb;AAGE,IAAA,OAAO,EAAE;AAAEW,MAAAA,KAAK,EAAE;AAAT,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EAeE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,SAAS,EAAEV,eAFb;AAGE,IAAA,OAAO,EAAE;AAAEU,MAAAA,KAAK,EAAE;AAAT,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAoBE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAET,IAFb;AAGE,IAAA,OAAO,EAAE;AAAES,MAAAA,KAAK,EAAE;AAAT,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CADF,CADF;AA8BD","sourcesContent":["import \"react-native-gesture-handler\"; // мб нужно удалить\nimport React, { useState, useEffect } from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport MainPage from \"../components/MainPage/MainPage\";\nimport SignIn from \"../components/Forms/SignIn/SignIn\";\nimport SignUp from \"../components/Forms/SignUp/SignUp\";\nimport UserProfileView from \"../components/Profile/Profile\";\nimport Post from \"../components/post/post\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst Stack = createStackNavigator();\n\nexport default function Navigate() {\n  const user = useSelector(state => state.user);\n  const [curUser, setCurUser] = useState(null);\n  useEffect(() => {\n    // (async () => userFromStorage())();\n    // console.log(\"useEffect\");\n    // if (newUser) {\n    //   loadScene();\n    //   console.log(\"DONE\", newUser);\n    // }\n\n    setCurUser(user);\n  }, []);\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        {curUser ? (\n          <Stack.Screen\n            name=\"MainPage\"\n            component={MainPage}\n            options={{ title: \"Main Page\" }}\n          />\n        ) : (\n          <Stack.Screen\n            name=\"SignUp\"\n            component={SignUp}\n            options={{ title: \"Registration\" }}\n          />\n        )}\n\n        <Stack.Screen\n          name=\"Profile\"\n          component={UserProfileView}\n          options={{ title: \"Your profile\" }}\n        />\n        <Stack.Screen\n          name=\"Post\"\n          component={Post}\n          options={{ title: \"Post\" }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}