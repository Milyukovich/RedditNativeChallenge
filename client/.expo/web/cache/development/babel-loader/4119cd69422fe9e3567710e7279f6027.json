{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_CONTENT_START, POST_CREATE, SET_LIKE_ADD, SET_DISLIKE_ADD, EDIT_POST, DELETE_POST, CREATE_COMMENT, CREATE_COMMENT_TO_COMMENT, SET_DISLIKE_TO_COMMENT, SET_LIKE_TO_COMMENT, DISABLE_LOADER, ENABLE_LOADER } from \"../types/content\";\nvar initialState = {\n  content: [],\n  loader: false\n};\n\nvar contentReducer = function contentReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case GET_CONTENT_START:\n      {\n        return payload;\n      }\n\n    case POST_CREATE:\n      {\n        return [].concat(_toConsumableArray(state), [payload]);\n      }\n\n    case SET_LIKE_ADD:\n      {\n        return state.content.map(function (el) {\n          return el._id === payload._id ? payload : el;\n        });\n      }\n\n    case SET_DISLIKE_ADD:\n      {\n        return state.content.map(function (el) {\n          return el._id === payload._id ? payload : el;\n        });\n      }\n\n    case EDIT_POST:\n      {\n        var newState = state.content.map(function (el) {\n          return el._id === payload._id ? payload : el;\n        });\n        return newState;\n      }\n\n    case DELETE_POST:\n      {\n        var id = payload.id;\n        var newPostState = state.content.filter(function (el) {\n          return el._id !== id;\n        });\n        return newPostState;\n      }\n\n    case CREATE_COMMENT:\n      {\n        var postId = payload.description.postId;\n        return state.content.map(function (el) {\n          return el._id === postId ? _objectSpread(_objectSpread({}, el), {}, {\n            comments: [].concat(_toConsumableArray(el.comments), [_objectSpread({}, payload.data)])\n          }) : el;\n        });\n      }\n\n    case CREATE_COMMENT_TO_COMMENT:\n      {\n        var _postId = payload.description.postId;\n        return state.content.map(function (post) {\n          return post._id == _postId ? _objectSpread(_objectSpread({}, post), {}, {\n            comments: _toConsumableArray(post.comments.map(function (comment) {\n              return comment.id === payload.description.commentId ? _objectSpread(_objectSpread({}, comment), {}, {\n                comments: [].concat(_toConsumableArray(comment.comments), [payload.data])\n              }) : comment;\n            }))\n          }) : post;\n        });\n      }\n\n    case SET_LIKE_TO_COMMENT:\n      {\n        console.log(\"payID\", payload);\n\n        if (payload.father.uri || payload.father.content) {\n          console.log(\"FATHERPOST\");\n          return state.content.map(function (post) {\n            return post._id === payload.father._id ? _objectSpread(_objectSpread({}, post), {}, {\n              comments: _toConsumableArray(post.comments.map(function (comment) {\n                return comment._id === payload._id ? payload : comment;\n              }))\n            }) : post;\n          });\n        }\n\n        if (payload.postId) {\n          console.log(\"FATHERCOMMENT\");\n          return state.content.map(function (post) {\n            return post._id == payload.postId ? _objectSpread(_objectSpread({}, post), {}, {\n              comments: _toConsumableArray(post.comments.map(function (comment) {\n                return comment._id === payload.father._id ? _objectSpread(_objectSpread({}, comment), {}, {\n                  comments: _toConsumableArray(comment.comments.map(function (el) {\n                    return el._id == payload._id ? payload : el;\n                  }))\n                }) : comment;\n              }))\n            }) : post;\n          });\n        }\n\n        return state;\n      }\n\n    case SET_DISLIKE_TO_COMMENT:\n      {\n        console.log(\"FATHERPOST\", payload);\n        console.log(\"FATHERCOMMENT\", payload.postId);\n\n        if (payload.father.uri || payload.father.content) {\n          console.log(\"FATHERPOST\");\n          return state.content.map(function (post) {\n            return post._id === payload.father._id ? _objectSpread(_objectSpread({}, post), {}, {\n              comments: _toConsumableArray(post.comments.map(function (comment) {\n                return comment._id === payload._id ? payload : comment;\n              }))\n            }) : post;\n          });\n        }\n\n        if (payload.postId) {\n          console.log(\"FATHERCOMMENT\");\n          return state.content.map(function (post) {\n            return post._id == payload.postId ? _objectSpread(_objectSpread({}, post), {}, {\n              comments: _toConsumableArray(post.comments.map(function (comment) {\n                return comment._id === payload.father._id ? _objectSpread(_objectSpread({}, comment), {}, {\n                  comments: _toConsumableArray(comment.comments.map(function (el) {\n                    return el._id == payload._id ? payload : el;\n                  }))\n                }) : comment;\n              }))\n            }) : post;\n          });\n        }\n\n        return state;\n      }\n\n    case ENABLE_LOADER:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          loader: true\n        });\n      }\n\n    case DISABLE_LOADER:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          loader: true\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default contentReducer;","map":{"version":3,"sources":["/home/artur/elbrus/phase-3/ПРОЕКТВЕКА/copy 2/RedditNativeChallenge/client/src/redux/reduce/contentReducer.js"],"names":["GET_CONTENT_START","POST_CREATE","SET_LIKE_ADD","SET_DISLIKE_ADD","EDIT_POST","DELETE_POST","CREATE_COMMENT","CREATE_COMMENT_TO_COMMENT","SET_DISLIKE_TO_COMMENT","SET_LIKE_TO_COMMENT","DISABLE_LOADER","ENABLE_LOADER","initialState","content","loader","contentReducer","state","action","type","payload","map","el","_id","newState","id","newPostState","filter","postId","description","comments","data","post","comment","commentId","console","log","father","uri"],"mappings":"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","sourcesContent":["import {\n  GET_CONTENT_START,\n  POST_CREATE,\n  SET_LIKE_ADD,\n  SET_DISLIKE_ADD,\n  EDIT_POST,\n  DELETE_POST,\n  CREATE_COMMENT,\n  CREATE_COMMENT_TO_COMMENT,\n  SET_DISLIKE_TO_COMMENT,\n  SET_LIKE_TO_COMMENT,\n  DISABLE_LOADER,\n  ENABLE_LOADER,\n} from \"../types/content\";\n\nconst initialState = { content: [], loader: false };\n\nconst contentReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  // console.log(\"REDUCER PAYLOAD\", payload);\n  switch (type) {\n    case GET_CONTENT_START: {\n      return payload;\n    }\n    case POST_CREATE: {\n      return [...state, payload];\n    }\n    case SET_LIKE_ADD: {\n      return state.content.map(el => (el._id === payload._id ? payload : el));\n    }\n\n    case SET_DISLIKE_ADD: {\n      return state.content.map(el => (el._id === payload._id ? payload : el));\n    }\n\n    case EDIT_POST: {\n      const newState = state.content.map(el =>\n        el._id === payload._id ? payload : el\n      );\n      return newState;\n    }\n\n    case DELETE_POST: {\n      const { id } = payload;\n      const newPostState = state.content.filter(el => el._id !== id);\n      return newPostState;\n    }\n\n    case CREATE_COMMENT: {\n      const { postId } = payload.description;\n      // console.log(\n      //   1212,\n      //   state.map(el =>\n      //     el._id === postId\n      //       ? { ...el, comments: [...el.comments, { ...payload.data }] }\n      //       : el\n      //   )\n      // );\n      return state.content.map(el =>\n        el._id === postId\n          ? { ...el, comments: [...el.comments, { ...payload.data }] }\n          : el\n      );\n    }\n    case CREATE_COMMENT_TO_COMMENT: {\n      const postId = payload.description.postId;\n\n      return state.content.map(post =>\n        post._id == postId\n          ? {\n              ...post,\n              comments: [\n                ...post.comments.map(comment =>\n                  comment.id === payload.description.commentId\n                    ? {\n                        ...comment,\n                        comments: [...comment.comments, payload.data],\n                      }\n                    : comment\n                ),\n              ],\n            }\n          : post\n      );\n    }\n\n    case SET_LIKE_TO_COMMENT: {\n      console.log(\"payID\", payload);\n\n      if (payload.father.uri || payload.father.content) {\n        console.log(\"FATHERPOST\");\n\n        return state.content.map(post =>\n          post._id === payload.father._id\n            ? {\n                ...post,\n                comments: [\n                  ...post.comments.map(comment =>\n                    comment._id === payload._id ? payload : comment\n                  ),\n                ],\n              }\n            : post\n        );\n      }\n      if (payload.postId) {\n        console.log(\"FATHERCOMMENT\");\n        return state.content.map(post =>\n          post._id == payload.postId\n            ? {\n                ...post,\n                comments: [\n                  ...post.comments.map(comment =>\n                    comment._id === payload.father._id\n                      ? {\n                          ...comment,\n                          comments: [\n                            ...comment.comments.map(el =>\n                              el._id == payload._id ? payload : el\n                            ),\n                          ],\n                        }\n                      : comment\n                  ),\n                ],\n              }\n            : post\n        );\n      }\n      return state;\n    }\n\n    case SET_DISLIKE_TO_COMMENT: {\n      console.log(\"FATHERPOST\", payload);\n      console.log(\"FATHERCOMMENT\", payload.postId);\n      if (payload.father.uri || payload.father.content) {\n        console.log(\"FATHERPOST\");\n        return state.content.map(post =>\n          post._id === payload.father._id\n            ? {\n                ...post,\n                comments: [\n                  ...post.comments.map(comment =>\n                    comment._id === payload._id ? payload : comment\n                  ),\n                ],\n              }\n            : post\n        );\n      }\n      if (payload.postId) {\n        console.log(\"FATHERCOMMENT\");\n        return state.content.map(post =>\n          post._id == payload.postId\n            ? {\n                ...post,\n                comments: [\n                  ...post.comments.map(comment =>\n                    comment._id === payload.father._id\n                      ? {\n                          ...comment,\n                          comments: [\n                            ...comment.comments.map(el =>\n                              el._id == payload._id ? payload : el\n                            ),\n                          ],\n                        }\n                      : comment\n                  ),\n                ],\n              }\n            : post\n        );\n      }\n      return state;\n    }\n    case ENABLE_LOADER: {\n      return { ...state, loader: true };\n    }\n    case DISABLE_LOADER: {\n      return { ...state, loader: true };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default contentReducer;\n"]},"metadata":{},"sourceType":"module"}