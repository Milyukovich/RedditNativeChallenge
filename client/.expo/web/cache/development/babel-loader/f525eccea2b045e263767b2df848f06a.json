{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/artur/elbrus/phase-3/RedditNativeChallenge/client/src/components/LowerMenu/LowerMenu.jsx\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport styles from \"./style\";\nexport default function LowerMenu() {\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var loadScene = function loadScene() {\n    navigation.navigate(\"CreatePost\");\n  };\n\n  return React.createElement(View, {\n    style: styles.footer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      Alert.alert(\"Modal has been closed.\");\n      setModalVisible(!modalVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.modalText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, \"\\u0422\\u041E\\u0421\\u0422\\u042B \\u0413\\u0410\\u0422\\u041E\\u0412\\u042B!\"), React.createElement(View, {\n    style: styles.modalButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, React.createElement(Pressable, {\n    style: [styles.button, styles.buttonClose],\n    onPress: function onPress() {\n      setModalVisible(true), loadScene();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, React.createElement(Icon, {\n    name: \"thumbs-up\",\n    backgroundColor: \"gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }\n  }))), React.createElement(Pressable, {\n    style: [styles.button, styles.buttonClose],\n    onPress: function onPress() {\n      return setModalVisible(!modalVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Hide Modal\")))))), React.createElement(Pressable, {\n    style: [styles.button, styles.buttonOpen],\n    onPress: function onPress() {\n      return setModalVisible(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 40,\n      color: \"#fff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"+\")));\n}","map":{"version":3,"sources":["/home/artur/elbrus/phase-3/RedditNativeChallenge/client/src/components/LowerMenu/LowerMenu.jsx"],"names":["React","useState","useNavigation","Icon","styles","LowerMenu","navigation","modalVisible","setModalVisible","loadScene","navigate","footer","centeredView","Alert","alert","modalView","modalText","modalButtons","button","buttonClose","textStyle","buttonOpen","fontSize","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  Alert,\n  Modal,\n  Pressable,\n} from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\n\nimport styles from \"./style\";\n\nexport default function LowerMenu() {\n  const navigation = useNavigation();\n\n  const [modalVisible, setModalVisible] = useState(false);\n\n  const loadScene = () => {\n    navigation.navigate(\"CreatePost\");\n  };\n\n  return (\n    <View style={styles.footer}>\n      <View style={styles.centeredView}>\n        <Modal\n          animationType=\"slide\"\n          transparent={true}\n          visible={modalVisible}\n          onRequestClose={() => {\n            Alert.alert(\"Modal has been closed.\");\n            setModalVisible(!modalVisible);\n          }}\n        >\n          <View style={styles.centeredView}>\n            <View style={styles.modalView}>\n              <Text style={styles.modalText}>ТОСТЫ ГАТОВЫ!</Text>\n              <View style={styles.modalButtons}>\n                <Pressable\n                  style={[styles.button, styles.buttonClose]}\n                  onPress={() => {\n                    setModalVisible(true),\n                    loadScene();\n                  }}\n                >\n                  <Icon name=\"thumbs-up\" backgroundColor=\"gray\"></Icon>\n                </Pressable>\n              </View>\n              <Pressable\n                style={[styles.button, styles.buttonClose]}\n                onPress={() => setModalVisible(!modalVisible)}\n              >\n                <Text style={styles.textStyle}>Hide Modal</Text>\n              </Pressable>\n            </View>\n          </View>\n        </Modal>\n        {/* <Pressable\n          style={[styles.button, styles.buttonOpen]}\n          onPress={() => setModalVisible(true)}\n        >\n          <Text style={styles.textStyle}>Show Modal</Text>\n        </Pressable> */}\n      </View>\n      <Pressable\n        style={[styles.button, styles.buttonOpen]}\n        onPress={() => setModalVisible(true)}\n      >\n        <Text style={{ fontSize: 40, color: \"#fff\" }}>+</Text>\n      </Pressable>\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}