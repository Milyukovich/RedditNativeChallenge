{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport apiService from \"../../api/apiService\";\nimport { SEARCH_INIT } from \"../types/search\";\nexport var searchInit = function searchInit(sesrchText, searchTag) {\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            apiService.post(\"http://localhost:8080/search\", {\n              sesrchText: sesrchText,\n              searchTag: searchTag\n            }).then(function (res) {\n              return dispatch({\n                type: SEARCH_INIT,\n                payload: res.data\n              });\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["/home/artur/elbrus/phase-3/RedditNativeChallenge/client/src/redux/actions/search.js"],"names":["apiService","SEARCH_INIT","searchInit","sesrchText","searchTag","dispatch","post","then","res","type","payload","data"],"mappings":";AAAA,OAAOA,UAAP;AACA,SAASC,WAAT;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,UAAD,EAAaC,SAAb;AAAA,SAA2B,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AACnDL,YAAAA,UAAU,CACPM,IADH,CACQ,8BADR,EACwC;AAAEH,cAAAA,UAAU,EAAVA,UAAF;AAAcC,cAAAA,SAAS,EAATA;AAAd,aADxC,EAEGG,IAFH,CAEQ,UAAAC,GAAG;AAAA,qBAAIH,QAAQ,CAAC;AAAEI,gBAAAA,IAAI,EAAER,WAAR;AAAqBS,gBAAAA,OAAO,EAAEF,GAAG,CAACG;AAAlC,eAAD,CAAZ;AAAA,aAFX;;AADmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;AAAA,CAAnB","sourcesContent":["import apiService from \"../../api/apiService\";\nimport { SEARCH_INIT } from \"../types/search\";\n\nexport const searchInit = (sesrchText, searchTag) => async dispatch => {\n  apiService\n    .post(\"http://localhost:8080/search\", { sesrchText, searchTag })\n    .then(res => dispatch({ type: SEARCH_INIT, payload: res.data }));\n};\n"]},"metadata":{},"sourceType":"module"}