{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/artur/elbrus/phase-3/RedditNativeChallenge/client/src/components/OnePostPage/OnePostPage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Card, Button, Input } from \"react-native-elements\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addLike, addDislike, getContent } from \"../../redux/actions/content\";\nimport { createComMain, createComToCom } from \"../../redux/actions/comments\";\nimport AddCommentMenu from \"../AddCommentMenu/AddCommentMenu.jsx\";\nexport default function Post(_ref) {\n  var _this = this;\n\n  var route = _ref.route;\n  var dispatch = useDispatch();\n  var mainId = route.params.el._id;\n  var posts = useSelector(function (state) {\n    return state.content;\n  });\n  var mainPost = posts.filter(function (post) {\n    return post._id == mainId;\n  })[0];\n  var comments = mainPost.comments;\n  var likes = mainPost.likes;\n  var userId = useSelector(function (state) {\n    return state.user.userInfo.id;\n  });\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      commentToComment = _useState2[0],\n      setCommentToComment = _useState2[1];\n\n  var createCommentToComment = function createCommentToComment(commentId) {\n    console.log(\"commentId\", commentId);\n\n    if (commentToComment.trim().length > 5) {\n      var comment = {\n        text: commentToComment,\n        autorId: userId,\n        commentId: commentId,\n        mainId: mainId\n      };\n      console.log(\"COMMENT FRONT\", comment);\n      dispatch(createComToCom(comment));\n    }\n  };\n\n  var like = function like(userId, postId) {\n    dispatch(addLike(userId, postId));\n  };\n\n  var dislike = function dislike(userId, postId) {\n    dispatch(addDislike(userId, postId));\n  };\n\n  useEffect(function () {\n    dispatch(getContent());\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, mainPost.title), React.createElement(Card.Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), React.createElement(Image, {\n    style: styles.content,\n    source: {\n      uri: mainPost.content\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), React.createElement(Card.Image, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, mainPost.description)), React.createElement(View, {\n    style: styles.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon.Button, {\n    name: \"thumbs-up\",\n    \"thumbs-down\": true,\n    backgroundColor: \"gray\",\n    onPress: function onPress() {\n      return like(userId, mainPost._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, likes.length), React.createElement(Icon.Button, {\n    name: \"thumbs-down\",\n    backgroundColor: \"gray\",\n    onPress: function onPress() {\n      return dislike(userId, mainPost._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, mainPost.dislikes.length), React.createElement(Icon.Button, {\n    name: \"ellipsis-h\",\n    backgroundColor: \"gray\",\n    onPress: function onPress() {\n      return console.log(\"comment\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  })))), comments.length(React.createElement(React.Fragment, null, React.createElement(FlatList, {\n    data: comments,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Card, {\n        style: {\n          height: 30\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }\n      }, React.createElement(Card.Image, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          marginBottom: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 19\n        }\n      }, item.text)), console.log(item), React.createElement(View, {\n        style: styles.icons,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }\n      }, React.createElement(Icon.Button, {\n        name: \"thumbs-up\",\n        \"thumbs-down\": true,\n        backgroundColor: \"gray\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 19\n        }\n      }, item.likes.length), React.createElement(Icon.Button, {\n        name: \"thumbs-down\",\n        backgroundColor: \"gray\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 19\n        }\n      }, item.dislikes.length), React.createElement(Icon.Button, {\n        name: \"comments\",\n        backgroundColor: \"gray\",\n        onPress: function onPress() {\n          return console.log(\"comment\");\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 19\n        }\n      }, item.comments.length), React.createElement(Icon.Button, {\n        name: \"ellipsis-h\",\n        backgroundColor: \"gray\",\n        onPress: function onPress() {\n          return console.log(\"comment\");\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 19\n        }\n      })), React.createElement(Text, {\n        style: {\n          marginBottom: 1\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      }, item.date), React.createElement(FlatList, {\n        data: item.comments,\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item;\n          return React.createElement(React.Fragment, null, React.createElement(View, {\n            style: {\n              flex: 1,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 23\n            }\n          }, React.createElement(View, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 27\n            }\n          }, item.text)), React.createElement(View, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 27\n            }\n          }, item.creatorLogin), React.createElement(Text, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 27\n            }\n          }, item.date))));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }), React.createElement(Input, {\n        value: commentToComment,\n        onChangeText: function onChangeText(text) {\n          return setCommentToComment(text);\n        },\n        placeholder: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u044F\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }\n      }), React.createElement(Button, {\n        onPress: function onPress() {\n          createCommentToComment(item._id);\n        },\n        title: \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0438\\u0442\\u044C \\u043D\\u0430 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }\n      }));\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }))), React.createElement(AddCommentMenu, {\n    userId: userId,\n    postId: mainPost._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  icons: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  content: {\n    height: 200,\n    borderWidth: 4,\n    borderColor: \"white\",\n    marginBottom: 10\n  }\n});","map":{"version":3,"sources":["/home/artur/elbrus/phase-3/RedditNativeChallenge/client/src/components/OnePostPage/OnePostPage.js"],"names":["React","useEffect","useState","Card","Button","Input","Icon","useDispatch","useSelector","addLike","addDislike","getContent","createComMain","createComToCom","AddCommentMenu","Post","route","dispatch","mainId","params","el","_id","posts","state","content","mainPost","filter","post","comments","likes","userId","user","userInfo","id","commentToComment","setCommentToComment","createCommentToComment","commentId","console","log","trim","length","comment","text","autorId","like","postId","dislike","title","styles","uri","marginBottom","description","icons","dislikes","item","height","date","flex","flexDirection","justifyContent","creatorLogin","StyleSheet","create","borderWidth","borderColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Card, Button, Input } from \"react-native-elements\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport { StyleSheet, View, Text, FlatList, Image } from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addLike, addDislike, getContent } from \"../../redux/actions/content\";\nimport { createComMain, createComToCom } from \"../../redux/actions/comments\";\nimport AddCommentMenu from \"../AddCommentMenu/AddCommentMenu.jsx\";\n\nexport default function Post({ route }) {\n  const dispatch = useDispatch();\n\n  const mainId = route.params.el._id;\n\n  const posts = useSelector(state => state.content);\n  const mainPost = posts.filter(post => post._id == mainId)[0];\n\n  const comments = mainPost.comments;\n  const likes = mainPost.likes;\n  const userId = useSelector(state => state.user.userInfo.id);\n\n  const [commentToComment, setCommentToComment] = useState();\n  const createCommentToComment = commentId => {\n    console.log(\"commentId\", commentId);\n    if (commentToComment.trim().length > 5) {\n      const comment = {\n        text: commentToComment,\n        autorId: userId,\n        commentId,\n        mainId: mainId,\n      };\n      console.log(\"COMMENT FRONT\", comment);\n      dispatch(createComToCom(comment));\n    }\n  };\n\n  const like = (userId, postId) => {\n    dispatch(addLike(userId, postId));\n  };\n  const dislike = (userId, postId) => {\n    dispatch(addDislike(userId, postId));\n  };\n\n  useEffect(() => {\n    dispatch(getContent());\n  }, []);\n\n  return (\n    <>\n      <View>\n        <Card>\n          <Card.Title>{mainPost.title}</Card.Title>\n          <Card.Divider />\n          <Image\n            style={styles.content}\n            source={{\n              uri: mainPost.content,\n            }}\n          />\n          <Card.Image>\n            <Text style={{ marginBottom: 10 }}>{mainPost.description}</Text>\n          </Card.Image>\n          <View style={styles.icons}>\n            <Icon.Button\n              name=\"thumbs-up\"\n              thumbs-down\n              backgroundColor=\"gray\"\n              onPress={() => like(userId, mainPost._id)}\n            >\n              {likes.length}\n            </Icon.Button>\n            <Icon.Button\n              name=\"thumbs-down\"\n              backgroundColor=\"gray\"\n              onPress={() => dislike(userId, mainPost._id)}\n            >\n              {mainPost.dislikes.length}\n            </Icon.Button>\n\n            <Icon.Button\n              name=\"ellipsis-h\"\n              backgroundColor=\"gray\"\n              onPress={() => console.log(\"comment\")}\n            ></Icon.Button>\n          </View>\n        </Card>\n      </View>\n\n      {/* <Text style={{ alignItems: \"center\", justifyContent: \"center\" }}>\n        tuta\n      </Text> */}\n      {comments.length  (\n        <>\n          <FlatList\n            data={comments}\n            renderItem={({ item }) => (\n              <Card style={{ height: 30 }}>\n                <Card.Image /*source={\"ASd\"}*/>\n                  <Text style={{ marginBottom: 10 }}>{item.text}</Text>\n                </Card.Image>\n                {console.log(item)}\n                <View style={styles.icons}>\n                  <Icon.Button\n                    name=\"thumbs-up\"\n                    thumbs-down\n                    backgroundColor=\"gray\"\n                    // onPress={() => likeComment(userId, item._id)}\n                  >\n                    {item.likes.length}\n                  </Icon.Button>\n                  <Icon.Button\n                    name=\"thumbs-down\"\n                    backgroundColor=\"gray\"\n                    // onPress={() => dislikeComment(userId, item._id)}\n                  >\n                    {item.dislikes.length}\n                  </Icon.Button>\n                  <Icon.Button\n                    name=\"comments\"\n                    backgroundColor=\"gray\"\n                    onPress={() => console.log(\"comment\")}\n                  >\n                    {item.comments.length}\n                  </Icon.Button>\n                  <Icon.Button\n                    name=\"ellipsis-h\"\n                    backgroundColor=\"gray\"\n                    onPress={() => console.log(\"comment\")}\n                  ></Icon.Button>\n                </View>\n                <Text style={{ marginBottom: 1 }}>{item.date}</Text>\n                <FlatList\n                  data={item.comments}\n                  renderItem={({ item }) => (\n                    <>\n                      <View\n                        style={{\n                          flex: 1,\n                          flexDirection: \"row\",\n                          justifyContent: \"space-between\",\n                        }}\n                      >\n                        <View>\n                          <Text>{item.text}</Text>\n                        </View>\n                        <View>\n                          <Text>{item.creatorLogin}</Text>\n                          <Text>{item.date}</Text>\n                        </View>\n                      </View>\n                    </>\n                  )}\n                />\n                <Input\n                  value={commentToComment}\n                  onChangeText={text => setCommentToComment(text)}\n                  placeholder=\"Текст комментария\"\n                />\n                <Button\n                  onPress={() => {\n                    createCommentToComment(item._id);\n                  }}\n                  title=\"Ответить на комментарий\"\n                />\n              </Card>\n            )}\n            keyExtractor={item => item.id}\n          />\n\n          {/* <Input\n            value={comment}\n            onChangeText={text => setComment(text)}\n            placeholder=\"Текст комментария\"\n          />\n          <Button\n            onPress={() => {\n              createComment();\n            }}\n            title=\"Отправить комментарий\"\n          /> */}\n        </>\n      )}\n      <AddCommentMenu userId={userId} postId={mainPost._id} />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icons: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n  content: {\n    // width: 270,\n    height: 200,\n    // borderRadius: 63,\n    borderWidth: 4,\n    borderColor: \"white\",\n    marginBottom: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}