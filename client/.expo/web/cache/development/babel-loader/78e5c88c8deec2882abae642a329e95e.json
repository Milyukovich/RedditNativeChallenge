{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/roman/elbruss/phase 3/finalproject/RedditNativeChallenge/client/src/components/post/post.js\";\nimport React, { useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Card, ListItem, Button, Input } from \"react-native-elements\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { createPost } from \"../../redux/actions/content\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createComMain } from \"../../redux/actions/comments\";\nexport default function Post(_ref) {\n  var _this = this;\n\n  var route = _ref.route;\n  var dispatch = useDispatch();\n  var el = route.params.el;\n  var mainId = el._id;\n  console.log(el._id);\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      comment = _useState2[0],\n      setComment = _useState2[1];\n\n  var posts = useSelector(function (state) {\n    return state.content;\n  });\n  console.log(\"post zdesssss\", posts);\n  var userId = useSelector(function (state) {\n    return state.user.id;\n  });\n\n  var createComment = function createComment() {\n    var post = {\n      text: comment,\n      autorId: userId,\n      postId: el._id\n    };\n    dispatch(createComMain(post));\n  };\n\n  var posti = useSelector(function (state) {\n    return state.content;\n  });\n  var comments = post.comments;\n  console.log(\"ya tut\", posti);\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, el.title), React.createElement(Card.Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), React.createElement(Card.Image, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, el.description)), React.createElement(View, {\n    style: styles.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon.Button, {\n    name: \"thumbs-up\",\n    backgroundColor: \"gray\",\n    onPress: function onPress() {\n      return console.log(\"like\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, el.likes.length), React.createElement(Icon.Button, {\n    name: \"comments\",\n    backgroundColor: \"gray\",\n    onPress: function onPress() {\n      return console.log(\"comment\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, el.likes.length)))), el.comments.length == 0 ? React.createElement(Text, {\n    style: {\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"\\u0412\\u0430\\u0448 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439 \\u0431\\u0443\\u0434\\u0435\\u0442 \\u043F\\u0435\\u0440\\u0432\\u044B\\u043C\") : React.createElement(FlatList, {\n    data: el.comments,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Card, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, React.createElement(Card.Image, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          marginBottom: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, item.text)));\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    value: comment,\n    onChangeText: function onChangeText(text) {\n      return setComment(text);\n    },\n    placeholder: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u044F\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      createComment();\n    },\n    title: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  icons: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/home/roman/elbruss/phase 3/finalproject/RedditNativeChallenge/client/src/components/post/post.js"],"names":["React","useState","useNavigation","Card","ListItem","Button","Input","Icon","useRoute","createPost","useDispatch","useSelector","createComMain","Post","route","dispatch","el","params","mainId","_id","console","log","comment","setComment","posts","state","content","userId","user","id","createComment","post","text","autorId","postId","posti","comments","title","marginBottom","description","styles","icons","likes","length","alignItems","justifyContent","item","StyleSheet","create","flex","flexDirection"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,KAAjC,QAA8C,uBAA9C;AACA,OAAOC,IAAP;;;;;;;AAUA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,UAAT;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT;AACA,eAAe,SAASC,IAAT,OAAyB;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;AACtC,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,MAAMM,EAAE,GAAGF,KAAK,CAACG,MAAN,CAAaD,EAAxB;AACA,MAAME,MAAM,GAAGF,EAAE,CAACG,GAAlB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,EAAE,CAACG,GAAf;;AACA,kBAA8BlB,QAAQ,EAAtC;AAAA;AAAA,MAAOqB,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMC,KAAK,GAAGb,WAAW,CAAC,UAAAc,KAAK;AAAA,WAAIA,KAAK,CAACC,OAAV;AAAA,GAAN,CAAzB;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BG,KAA7B;AACA,MAAMG,MAAM,GAAGhB,WAAW,CAAC,UAAAc,KAAK;AAAA,WAAIA,KAAK,CAACG,IAAN,CAAWC,EAAf;AAAA,GAAN,CAA1B;;AACA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,QAAMC,IAAI,GAAG;AAAEC,MAAAA,IAAI,EAAEV,OAAR;AAAiBW,MAAAA,OAAO,EAAEN,MAA1B;AAAkCO,MAAAA,MAAM,EAAElB,EAAE,CAACG;AAA7C,KAAb;AACAJ,IAAAA,QAAQ,CAACH,aAAa,CAACmB,IAAD,CAAd,CAAR;AACD,GAHD;;AAIA,MAAMI,KAAK,GAAGxB,WAAW,CAAC,UAAAc,KAAK;AAAA,WAAIA,KAAK,CAACC,OAAV;AAAA,GAAN,CAAzB;AAEA,MAAMU,QAAQ,GAAGL,IAAI,CAACK,QAAtB;AACAhB,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBc,KAAtB;AACA,SACE,0CACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAanB,EAAE,CAACqB,KAAhB,CADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCtB,EAAE,CAACuB,WAAvC,CADF,CAHF,EAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,eAAe,EAAC,MAFlB;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMrB,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAN;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGL,EAAE,CAAC0B,KAAH,CAASC,MALZ,CADF,EAQE,oBAAC,IAAD,CAAM,MAAN;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,eAAe,EAAC,MAFlB;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMvB,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAN;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGL,EAAE,CAAC0B,KAAH,CAASC,MALZ,CARF,CANF,CADF,CADF,EA2BG3B,EAAE,CAACoB,QAAH,CAAYO,MAAZ,IAAsB,CAAtB,GACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE,QAAd;AAAwBC,MAAAA,cAAc,EAAE;AAAxC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iKADD,GAKC,oBAAC,QAAD;AACE,IAAA,IAAI,EAAE7B,EAAE,CAACoB,QADX;AAEE,IAAA,UAAU,EAAE;AAAA,UAAGU,IAAH,SAAGA,IAAH;AAAA,aACV,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAER,UAAAA,YAAY,EAAE;AAAhB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCQ,IAAI,CAACd,IAAzC,CADF,CADF,CADU;AAAA,KAFd;AASE,IAAA,YAAY,EAAE,sBAAAc,IAAI;AAAA,aAAIA,IAAI,CAACjB,EAAT;AAAA,KATpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCJ,EA4CE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEP,OADT;AAEE,IAAA,YAAY,EAAE,sBAAAU,IAAI;AAAA,aAAIT,UAAU,CAACS,IAAD,CAAd;AAAA,KAFpB;AAGE,IAAA,WAAW,EAAC,mGAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5CF,EAiDE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACbF,MAAAA,aAAa;AACd,KAHH;AAIE,IAAA,KAAK,EAAC,2HAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjDF,CADF;AA0DD;AAED,IAAMU,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,KAAK,EAAE;AACLQ,IAAAA,IAAI,EAAE,CADD;AAELC,IAAAA,aAAa,EAAE,KAFV;AAGLL,IAAAA,cAAc,EAAE;AAHX;AADwB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Card, ListItem, Button, Input } from \"react-native-elements\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\n\nimport {\n  StyleSheet,\n  View,\n  TextInput,\n  Text,\n  FlatList,\n  TouchableOpacity,\n} from \"react-native\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { createPost } from \"../../redux/actions/content\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createComMain } from \"../../redux/actions/comments\";\nexport default function Post({ route }) {\n  const dispatch = useDispatch();\n  const el = route.params.el;\n  const mainId = el._id;\n  console.log(el._id);\n  const [comment, setComment] = useState();\n  const posts = useSelector(state => state.content);\n  console.log(\"post zdesssss\", posts);\n  const userId = useSelector(state => state.user.id);\n  const createComment = () => {\n    const post = { text: comment, autorId: userId, postId: el._id };\n    dispatch(createComMain(post));\n  };\n  const posti = useSelector(state => state.content);\n\n  const comments = post.comments;\n  console.log(\"ya tut\", posti);\n  return (\n    <>\n      <View>\n        <Card>\n          <Card.Title>{el.title}</Card.Title>\n          <Card.Divider />\n          <Card.Image>\n            <Text style={{ marginBottom: 10 }}>{el.description}</Text>\n          </Card.Image>\n          <View style={styles.icons}>\n            <Icon.Button\n              name=\"thumbs-up\"\n              backgroundColor=\"gray\"\n              onPress={() => console.log(\"like\")}\n            >\n              {el.likes.length}\n            </Icon.Button>\n            <Icon.Button\n              name=\"comments\"\n              backgroundColor=\"gray\"\n              onPress={() => console.log(\"comment\")}\n            >\n              {el.likes.length}\n            </Icon.Button>\n          </View>\n        </Card>\n      </View>\n\n      {el.comments.length == 0 ? (\n        <Text style={{ alignItems: \"center\", justifyContent: \"center\" }}>\n          Ваш комментарий будет первым\n        </Text>\n      ) : (\n        <FlatList\n          data={el.comments}\n          renderItem={({ item }) => (\n            <Card>\n              <Card.Image /*source={\"ASd\"}*/>\n                <Text style={{ marginBottom: 10 }}>{item.text}</Text>\n              </Card.Image>\n            </Card>\n          )}\n          keyExtractor={item => item.id}\n        />\n      )}\n      <Input\n        value={comment}\n        onChangeText={text => setComment(text)}\n        placeholder=\"Текст комментария\"\n      />\n      <Button\n        onPress={() => {\n          createComment();\n        }}\n        title=\"Отправить комментарий\"\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icons: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}