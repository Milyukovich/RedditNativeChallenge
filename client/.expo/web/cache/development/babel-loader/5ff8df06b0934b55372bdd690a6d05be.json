{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/user/elbrus/PHASE 3/RedditNativeChallenge/client/src/components/EditProfile/EditProfile.jsx\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { editProfile } from \"../../redux/actions/editProfile\";\nexport default function EditProfileForm(_ref) {\n  var props = _ref.props;\n  var showEditForm = props.showEditForm,\n      setshowEditForm = props.setshowEditForm;\n  console.log(showEditForm, setshowEditForm);\n  var dispatch = useDispatch();\n  var currUserId = useSelector(function (state) {\n    return state.user.userInfo.id;\n  });\n  var currUserUsername = useSelector(function (state) {\n    return state.user.userInfo.userName;\n  });\n  var currUserEmail = useSelector(function (state) {\n    return state.user.userInfo.email;\n  });\n\n  var _useState = useState(currUserUsername),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputUsername = _useState2[0],\n      setInputUsername = _useState2[1];\n\n  var _useState3 = useState(currUserEmail),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inputEmail = _useState4[0],\n      setInputEmail = _useState4[1];\n\n  var editProfileFunction = function editProfileFunction(id, e) {\n    e.preventDefault();\n\n    if (inputUsername.trim() && inputEmail.trim()) {\n      var user = {\n        _id: currUserId,\n        userName: inputUsername,\n        email: inputEmail\n      };\n      dispatch(editProfile(user));\n      setshowEditForm(function (prev) {\n        return !prev;\n      });\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setInputUsername(text);\n    },\n    style: styles.inputs,\n    value: inputUsername,\n    placeholder: \"New username\",\n    underlineColorAndroid: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), React.createElement(Image, {\n    style: styles.inputIcon,\n    source: {\n      uri: \"https://img.icons8.com/nolan/40/000000/email.png\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setInputEmail(text);\n    },\n    style: styles.inputs,\n    value: inputEmail,\n    placeholder: \"New email\",\n    keyboardType: \"email-address\",\n    underlineColorAndroid: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), React.createElement(Image, {\n    style: styles.inputIcon,\n    source: {\n      uri: \"https://img.icons8.com/nolan/40/000000/key.png\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: [styles.buttonContainer, styles.updateButton],\n    onPress: function onPress(e) {\n      return editProfileFunction(currUserId, e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.updateText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Update\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#DCDCDC\"\n  },\n  inputContainer: {\n    borderBottomColor: \"#F5FCFF\",\n    backgroundColor: \"#FFFFFF\",\n    borderRadius: 30,\n    borderBottomWidth: 1,\n    width: 300,\n    height: 45,\n    marginBottom: 20,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  inputs: {\n    height: 45,\n    marginLeft: 16,\n    borderBottomColor: \"#FFFFFF\",\n    flex: 1\n  },\n  buttonContainer: {\n    height: 45,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 20,\n    width: 300,\n    borderRadius: 30,\n    backgroundColor: \"transparent\"\n  },\n  updateButton: {\n    backgroundColor: \"#00b5ec\",\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 9\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 12.35,\n    elevation: 19\n  },\n  updateText: {\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["/Users/user/elbrus/PHASE 3/RedditNativeChallenge/client/src/components/EditProfile/EditProfile.jsx"],"names":["React","useState","useDispatch","useSelector","editProfile","EditProfileForm","props","showEditForm","setshowEditForm","console","log","dispatch","currUserId","state","user","userInfo","id","currUserUsername","userName","currUserEmail","email","inputUsername","setInputUsername","inputEmail","setInputEmail","editProfileFunction","e","preventDefault","trim","_id","prev","styles","container","inputContainer","text","inputs","inputIcon","uri","buttonContainer","updateButton","updateText","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","borderBottomColor","borderRadius","borderBottomWidth","width","height","marginBottom","flexDirection","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","marginLeft","color"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AASA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT;AAEA,eAAe,SAASC,eAAT,OAAoC;AAAA,MAATC,KAAS,QAATA,KAAS;AACjD,MAAQC,YAAR,GAA0CD,KAA1C,CAAQC,YAAR;AAAA,MAAsBC,eAAtB,GAA0CF,KAA1C,CAAsBE,eAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ,EAA0BC,eAA1B;AACA,MAAMG,QAAQ,GAAGT,WAAW,EAA5B;AACA,MAAMU,UAAU,GAAGT,WAAW,CAAC,UAAAU,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoBC,EAAxB;AAAA,GAAN,CAA9B;AACA,MAAMC,gBAAgB,GAAGd,WAAW,CAAC,UAAAU,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoBG,QAAxB;AAAA,GAAN,CAApC;AACA,MAAMC,aAAa,GAAGhB,WAAW,CAAC,UAAAU,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoBK,KAAxB;AAAA,GAAN,CAAjC;;AACA,kBAA0CnB,QAAQ,CAACgB,gBAAD,CAAlD;AAAA;AAAA,MAAOI,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,mBAAoCrB,QAAQ,CAACkB,aAAD,CAA5C;AAAA;AAAA,MAAOI,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACT,EAAD,EAAKU,CAAL,EAAW;AACrCA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIN,aAAa,CAACO,IAAd,MAAwBL,UAAU,CAACK,IAAX,EAA5B,EAA+C;AAC7C,UAAMd,IAAI,GAAG;AACXe,QAAAA,GAAG,EAAEjB,UADM;AAEXM,QAAAA,QAAQ,EAAEG,aAFC;AAGXD,QAAAA,KAAK,EAAEG;AAHI,OAAb;AAKAZ,MAAAA,QAAQ,CAACP,WAAW,CAACU,IAAD,CAAZ,CAAR;AACAN,MAAAA,eAAe,CAAC,UAAAsB,IAAI;AAAA,eAAI,CAACA,IAAL;AAAA,OAAL,CAAf;AACD;AACF,GAXD;;AAaA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,aAAIZ,gBAAgB,CAACY,IAAD,CAApB;AAAA,KADpB;AAEE,IAAA,KAAK,EAAEH,MAAM,CAACI,MAFhB;AAGE,IAAA,KAAK,EAAEd,aAHT;AAIE,IAAA,WAAW,EAAC,cAJd;AAKE,IAAA,qBAAqB,EAAC,aALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEU,MAAM,CAACK,SADhB;AAEE,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,EAeE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACE,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,aAAIV,aAAa,CAACU,IAAD,CAAjB;AAAA,KADpB;AAEE,IAAA,KAAK,EAAEH,MAAM,CAACI,MAFhB;AAGE,IAAA,KAAK,EAAEZ,UAHT;AAIE,IAAA,WAAW,EAAC,WAJd;AAKE,IAAA,YAAY,EAAC,eALf;AAME,IAAA,qBAAqB,EAAC,aANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEQ,MAAM,CAACK,SADhB;AAEE,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CAfF,EA6BE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAE,CAACN,MAAM,CAACO,eAAR,EAAyBP,MAAM,CAACQ,YAAhC,CADT;AAEE,IAAA,OAAO,EAAE,iBAAAb,CAAC;AAAA,aAAID,mBAAmB,CAACb,UAAD,EAAac,CAAb,CAAvB;AAAA,KAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEK,MAAM,CAACS,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CA7BF,CADF;AAsCD;AAED,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,SAAS,EAAE;AACTW,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,eAAe,EAAE;AAJR,GADoB;AAO/Bb,EAAAA,cAAc,EAAE;AACdc,IAAAA,iBAAiB,EAAE,SADL;AAEdD,IAAAA,eAAe,EAAE,SAFH;AAGdE,IAAAA,YAAY,EAAE,EAHA;AAIdC,IAAAA,iBAAiB,EAAE,CAJL;AAKdC,IAAAA,KAAK,EAAE,GALO;AAMdC,IAAAA,MAAM,EAAE,EANM;AAOdC,IAAAA,YAAY,EAAE,EAPA;AAQdC,IAAAA,aAAa,EAAE,KARD;AASdR,IAAAA,UAAU,EAAE,QATE;AAWdS,IAAAA,WAAW,EAAE,SAXC;AAYdC,IAAAA,YAAY,EAAE;AACZL,MAAAA,KAAK,EAAE,CADK;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAZA;AAgBdK,IAAAA,aAAa,EAAE,IAhBD;AAiBdC,IAAAA,YAAY,EAAE,IAjBA;AAmBdC,IAAAA,SAAS,EAAE;AAnBG,GAPe;AA4B/BvB,EAAAA,MAAM,EAAE;AACNgB,IAAAA,MAAM,EAAE,EADF;AAENQ,IAAAA,UAAU,EAAE,EAFN;AAGNZ,IAAAA,iBAAiB,EAAE,SAHb;AAINJ,IAAAA,IAAI,EAAE;AAJA,GA5BuB;AAkC/BL,EAAAA,eAAe,EAAE;AACfa,IAAAA,MAAM,EAAE,EADO;AAEfE,IAAAA,aAAa,EAAE,KAFA;AAGfT,IAAAA,cAAc,EAAE,QAHD;AAIfC,IAAAA,UAAU,EAAE,QAJG;AAKfO,IAAAA,YAAY,EAAE,EALC;AAMfF,IAAAA,KAAK,EAAE,GANQ;AAOfF,IAAAA,YAAY,EAAE,EAPC;AAQfF,IAAAA,eAAe,EAAE;AARF,GAlCc;AA6C/BP,EAAAA,YAAY,EAAE;AACZO,IAAAA,eAAe,EAAE,SADL;AAGZQ,IAAAA,WAAW,EAAE,SAHD;AAIZC,IAAAA,YAAY,EAAE;AACZL,MAAAA,KAAK,EAAE,CADK;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAJF;AAQZK,IAAAA,aAAa,EAAE,GARH;AASZC,IAAAA,YAAY,EAAE,KATF;AAWZC,IAAAA,SAAS,EAAE;AAXC,GA7CiB;AA0D/BlB,EAAAA,UAAU,EAAE;AACVoB,IAAAA,KAAK,EAAE;AADG;AA1DmB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  TextInput,\n  Image,\n  StyleSheet,\n  TouchableOpacity,\n  Text,\n} from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { editProfile } from \"../../redux/actions/editProfile\";\n\nexport default function EditProfileForm({ props }) {\n  const { showEditForm, setshowEditForm } = props;\n  console.log(showEditForm, setshowEditForm);\n  const dispatch = useDispatch();\n  const currUserId = useSelector(state => state.user.userInfo.id);\n  const currUserUsername = useSelector(state => state.user.userInfo.userName);\n  const currUserEmail = useSelector(state => state.user.userInfo.email);\n  const [inputUsername, setInputUsername] = useState(currUserUsername);\n  const [inputEmail, setInputEmail] = useState(currUserEmail);\n\n  const editProfileFunction = (id, e) => {\n    e.preventDefault();\n    if (inputUsername.trim() && inputEmail.trim()) {\n      const user = {\n        _id: currUserId,\n        userName: inputUsername,\n        email: inputEmail,\n      };\n      dispatch(editProfile(user));\n      setshowEditForm(prev => !prev);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.inputContainer}>\n        <TextInput\n          onChangeText={text => setInputUsername(text)}\n          style={styles.inputs}\n          value={inputUsername}\n          placeholder=\"New username\"\n          underlineColorAndroid=\"transparent\"\n        />\n        <Image\n          style={styles.inputIcon}\n          source={{ uri: \"https://img.icons8.com/nolan/40/000000/email.png\" }}\n        />\n      </View>\n\n      <View style={styles.inputContainer}>\n        <TextInput\n          onChangeText={text => setInputEmail(text)}\n          style={styles.inputs}\n          value={inputEmail}\n          placeholder=\"New email\"\n          keyboardType=\"email-address\"\n          underlineColorAndroid=\"transparent\"\n        />\n        <Image\n          style={styles.inputIcon}\n          source={{ uri: \"https://img.icons8.com/nolan/40/000000/key.png\" }}\n        />\n      </View>\n      <TouchableOpacity\n        style={[styles.buttonContainer, styles.updateButton]}\n        onPress={e => editProfileFunction(currUserId, e)}\n      >\n        <Text style={styles.updateText}>Update</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#DCDCDC\",\n  },\n  inputContainer: {\n    borderBottomColor: \"#F5FCFF\",\n    backgroundColor: \"#FFFFFF\",\n    borderRadius: 30,\n    borderBottomWidth: 1,\n    width: 300,\n    height: 45,\n    marginBottom: 20,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n\n    elevation: 5,\n  },\n  inputs: {\n    height: 45,\n    marginLeft: 16,\n    borderBottomColor: \"#FFFFFF\",\n    flex: 1,\n  },\n  buttonContainer: {\n    height: 45,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 20,\n    width: 300,\n    borderRadius: 30,\n    backgroundColor: \"transparent\",\n  },\n\n  updateButton: {\n    backgroundColor: \"#00b5ec\",\n\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 9,\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 12.35,\n\n    elevation: 19,\n  },\n  updateText: {\n    color: \"white\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}