{
  "ast": null,
  "code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/user/Documents/elbrus/phase 3/RedditNativeChallenge/client/src/components/Header/Header.jsx\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Card } from \"react-native-elements\";\nimport { useNavigation } from \"@react-navigation/native\";\nexport default function Header() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      formValue = _useState2[0],\n      setFormValue = _useState2[1];\n\n  var navigation = useNavigation();\n\n  var loadScene = function loadScene() {\n    navigation.navigate(\"Profile\");\n  };\n\n  var loadSearcjScene = function loadSearcjScene() {\n    navigation.navigate(\"Search\", {\n      data: formValue\n    });\n  };\n\n  var submitForm = function submitForm() {\n    if (formValue.trim()) {\n      loadSearcjScene();\n      setFormValue(\"\");\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: loadScene,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: \"https://cdn.frankerfacez.com/avatar/twitch/80339713\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setFormValue(text);\n    },\n    value: formValue,\n    style: styles.input,\n    autoCorrect: false,\n    autoCapitalize: \"none\",\n    placeholder: \"Write here...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: submitForm,\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Search\"))));\n}\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: \"#64748b\",\n    borderWidth: 2\n  },\n  container: {\n    padding: 5,\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    borderWidth: 2,\n    borderRadius: 3,\n    borderStyle: \"solid\",\n    borderColor: \"#f9fafb\"\n  },\n  form: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  input: {\n    padding: 7,\n    width: 200,\n    height: 40,\n    borderStyle: \"solid\",\n    borderRadius: 7,\n    borderWidth: 2,\n    borderColor: \"#f9fafb\",\n    color: \"#f9fafb\",\n    backgroundColor: \"#111827\"\n  },\n  image: {\n    width: 70,\n    height: 70,\n    borderRadius: 45,\n    borderStyle: \"solid\",\n    borderWidth: 2,\n    borderColor: \"#f9fafb\"\n  },\n  hr: {\n    backgroundColor: \"#f9fafb\",\n    height: 1.3\n  }\n});",
  "map": {
    "version": 3,
    "sources": [
      "/Users/user/Documents/elbrus/phase 3/RedditNativeChallenge/client/src/components/Header/Header.jsx"
    ],
    "names": [
      "React",
      "useState",
      "Card",
      "useNavigation",
      "Header",
      "formValue",
      "setFormValue",
      "navigation",
      "loadScene",
      "navigate",
      "loadSearcjScene",
      "data",
      "submitForm",
      "trim",
      "styles",
      "container",
      "image",
      "uri",
      "form",
      "text",
      "input",
      "button",
      "StyleSheet",
      "create",
      "backgroundColor",
      "borderWidth",
      "padding",
      "flex",
      "flexDirection",
      "alignItems",
      "justifyContent",
      "borderRadius",
      "borderStyle",
      "borderColor",
      "width",
      "height",
      "color",
      "hr"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  TextInput,\n  Button,\n  Image,\n  TouchableOpacity,\n  Text,\n} from \"react-native\";\nimport { Card } from \"react-native-elements\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nexport default function Header() {\n  const [formValue, setFormValue] = useState(\"\");\n\n  const navigation = useNavigation();\n\n  const loadScene = () => {\n    navigation.navigate(\"Profile\");\n  };\n\n  const loadSearcjScene = () => {\n    navigation.navigate(\"Search\", { data: formValue });\n  };\n\n  const submitForm = () => {\n    if (formValue.trim()) {\n      loadSearcjScene();\n      setFormValue(\"\");\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity onPress={loadScene}>\n        <Image\n          style={styles.image}\n          source={{\n            uri: \"https://cdn.frankerfacez.com/avatar/twitch/80339713\",\n          }}\n        />\n      </TouchableOpacity>\n\n      <View style={styles.form}>\n        <TextInput\n          onChangeText={text => setFormValue(text)}\n          value={formValue}\n          style={styles.input}\n          autoCorrect={false}\n          autoCapitalize=\"none\"\n          placeholder=\"Write here...\"\n        ></TextInput>\n\n        <TouchableOpacity onPress={submitForm} style={styles.button}>\n          <Text>Search</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    backgroundColor: \"#64748b\",\n    borderWidth: 2,\n  },\n\n  container: {\n    padding: 5,\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    borderWidth: 2,\n    borderRadius: 3,\n    borderStyle: \"solid\",\n    borderColor: \"#f9fafb\",\n  },\n\n  form: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n\n  input: {\n    padding: 7,\n    width: 200,\n    height: 40,\n    borderStyle: \"solid\",\n    borderRadius: 7,\n    borderWidth: 2,\n    borderColor: \"#f9fafb\",\n    color: \"#f9fafb\",\n    backgroundColor: \"#111827\",\n  },\n\n  image: {\n    width: 70,\n    height: 70,\n    borderRadius: 45,\n    borderStyle: \"solid\",\n    borderWidth: 2,\n    borderColor: \"#f9fafb\",\n  },\n  hr: {\n    backgroundColor: \"#f9fafb\",\n    height: 1.3,\n  },\n});\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
