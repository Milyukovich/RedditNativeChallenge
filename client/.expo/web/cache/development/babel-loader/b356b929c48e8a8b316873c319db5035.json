{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/artur/elbrus/phase-3/RedditNativeChallenge/client/src/components/AddCommentMenu/AddCommentMenu.jsx\";\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Header from \"../Header/Header\";\nimport LowerMenu from \"../LowerMenu/LowerMenu\";\nimport PostList from \"../PostList/PostList\";\nimport { addLike, addDislike, getContent } from \"../../redux/actions/content\";\nimport { createComMain, createComToCom } from \"../../redux/actions/comments\";\n\nvar AddCommentMenu = function AddCommentMenu() {\n  var dispatch = useDispatch();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      comment = _useState2[0],\n      setComment = _useState2[1];\n\n  var createComment = function createComment() {\n    if (comment.trim().length > 5) {\n      var post = {\n        text: comment,\n        autorId: userId,\n        postId: mainPost._id\n      };\n      dispatch(createComMain(post));\n    }\n  };\n\n  return React.createElement(View, {\n    style: {\n      backgroundColor: \"#334155\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(Input, {\n    value: comment,\n    onChangeText: function onChangeText(text) {\n      return setComment(text);\n    },\n    placeholder: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u044F\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      createComment();\n    },\n    title: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default AddCommentMenu;\nReact.createElement(View, {\n  style: styles.footer,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 1\n  }\n}, React.createElement(View, {\n  style: styles.centeredView,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }\n}, React.createElement(Modal, {\n  animationType: \"slide\",\n  transparent: true,\n  visible: modalVisible,\n  onRequestClose: function onRequestClose() {\n    Alert.alert(\"Modal has been closed.\");\n    setModalVisible(!modalVisible);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }\n}, React.createElement(View, {\n  style: styles.centeredView,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 11\n  }\n}, React.createElement(View, {\n  style: styles.modalView,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 13\n  }\n}, React.createElement(Text, {\n  style: styles.modalText,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 15\n  }\n}, \"\\u0422\\u041E\\u0421\\u0422\\u042B \\u0413\\u0410\\u0422\\u041E\\u0412\\u042B!\"), React.createElement(View, {\n  style: styles.modalButtons,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 15\n  }\n}, React.createElement(Pressable, {\n  style: [styles.button, styles.buttonClose],\n  onPress: function onPress() {\n    loadScene();\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 17\n  }\n}, React.createElement(Icon, {\n  name: \"thumbs-up\",\n  backgroundColor: \"gray\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 19\n  }\n}))), React.createElement(Pressable, {\n  style: [styles.button, styles.buttonClose],\n  onPress: function onPress() {\n    return setModalVisible(!modalVisible);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 15\n  }\n}, React.createElement(Text, {\n  style: styles.textStyle,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 17\n  }\n}, \"Hide Modal\")))))), React.createElement(Pressable, {\n  style: [styles.button, styles.buttonOpen],\n  onPress: function onPress() {\n    return setModalVisible(true);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 7\n  }\n}, React.createElement(Text, {\n  style: {\n    fontSize: 40,\n    color: \"#fff\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }\n}, \"+\")));","map":{"version":3,"sources":["/home/artur/elbrus/phase-3/RedditNativeChallenge/client/src/components/AddCommentMenu/AddCommentMenu.jsx"],"names":["React","useState","useDispatch","useSelector","Header","LowerMenu","PostList","addLike","addDislike","getContent","createComMain","createComToCom","AddCommentMenu","dispatch","comment","setComment","createComment","trim","length","post","text","autorId","userId","postId","mainPost","_id","backgroundColor","styles","footer","centeredView","modalVisible","Alert","alert","setModalVisible","modalView","modalText","modalButtons","button","buttonClose","loadScene","textStyle","buttonOpen","fontSize","color"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,OAAOC,QAAP;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,UAA9B;AACA,SAASC,aAAT,EAAwBC,cAAxB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,kBAA8BD,QAAQ,EAAtC;AAAA;AAAA,MAAOa,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,QAAIF,OAAO,CAACG,IAAR,GAAeC,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,UAAMC,IAAI,GAAG;AAAEC,QAAAA,IAAI,EAAEN,OAAR;AAAiBO,QAAAA,OAAO,EAAEC,MAA1B;AAAkCC,QAAAA,MAAM,EAAEC,QAAQ,CAACC;AAAnD,OAAb;AACAZ,MAAAA,QAAQ,CAACH,aAAa,CAACS,IAAD,CAAd,CAAR;AACD;AACF,GALD;;AAOA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEO,MAAAA,eAAe,EAAE;AAAnB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEZ,OADT;AAEE,IAAA,YAAY,EAAE,sBAAAM,IAAI;AAAA,aAAIL,UAAU,CAACK,IAAD,CAAd;AAAA,KAFpB;AAGE,IAAA,WAAW,EAAC,mGAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACbJ,MAAAA,aAAa;AACd,KAHH;AAIE,IAAA,KAAK,EAAC,2HAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAeD,CA3BD;;AA6BA,eAAeJ,cAAf;AAEA,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAEe,MAAM,CAACC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACM,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAED,MAAM,CAACE,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,KAAD;AACE,EAAA,aAAa,EAAC,OADhB;AAEE,EAAA,WAAW,EAAE,IAFf;AAGE,EAAA,OAAO,EAAEC,YAHX;AAIE,EAAA,cAAc,EAAE,0BAAM;AACpBC,IAAAA,KAAK,CAACC,KAAN,CAAY,wBAAZ;AACAC,IAAAA,eAAe,CAAC,CAACH,YAAF,CAAf;AACD,GAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASE,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAEH,MAAM,CAACE,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAEF,MAAM,CAACO,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAEP,MAAM,CAACQ,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EADF,EAEE,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAER,MAAM,CAACS,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,SAAD;AACE,EAAA,KAAK,EAAE,CAACT,MAAM,CAACU,MAAR,EAAgBV,MAAM,CAACW,WAAvB,CADT;AAEE,EAAA,OAAO,EAAE,mBAAM;AACbC,IAAAA,SAAS;AACV,GAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAME,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAC,WAAX;AAAuB,EAAA,eAAe,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANF,CADF,CAFF,EAYE,oBAAC,SAAD;AACE,EAAA,KAAK,EAAE,CAACZ,MAAM,CAACU,MAAR,EAAgBV,MAAM,CAACW,WAAvB,CADT;AAEE,EAAA,OAAO,EAAE;AAAA,WAAML,eAAe,CAAC,CAACH,YAAF,CAArB;AAAA,GAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAIE,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAEH,MAAM,CAACa,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CAZF,CADF,CATF,CADF,CADN,EAwCM,oBAAC,SAAD;AACE,EAAA,KAAK,EAAE,CAACb,MAAM,CAACU,MAAR,EAAgBV,MAAM,CAACc,UAAvB,CADT;AAEE,EAAA,OAAO,EAAE;AAAA,WAAMR,eAAe,CAAC,IAAD,CAArB;AAAA,GAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAIE,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAE;AAAES,IAAAA,QAAQ,EAAE,EAAZ;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJF,CAxCN","sourcesContent":["import React, { useState } from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Header from \"../Header/Header\";\nimport LowerMenu from \"../LowerMenu/LowerMenu\";\nimport PostList from \"../PostList/PostList\";\nimport { addLike, addDislike, getContent } from \"../../redux/actions/content\";\nimport { createComMain, createComToCom } from \"../../redux/actions/comments\";\n\nconst AddCommentMenu = () => {\n  const dispatch = useDispatch();\n  // const [commentToComment, setCommentToComment] = useState();\n  const [comment, setComment] = useState();\n\n  const createComment = () => {\n    if (comment.trim().length > 5) {\n      const post = { text: comment, autorId: userId, postId: mainPost._id };\n      dispatch(createComMain(post));\n    }\n  };\n\n  return (\n    <View style={{ backgroundColor: \"#334155\" }}>\n      <Input\n        value={comment}\n        onChangeText={text => setComment(text)}\n        placeholder=\"Текст комментария\"\n      />\n      <Button\n        onPress={() => {\n          createComment();\n        }}\n        title=\"Отправить комментарий\"\n      />\n    </View>\n  );\n};\n\nexport default AddCommentMenu;\n\n<View style={styles.footer}>\n      <View style={styles.centeredView}>\n        <Modal\n          animationType=\"slide\"\n          transparent={true}\n          visible={modalVisible}\n          onRequestClose={() => {\n            Alert.alert(\"Modal has been closed.\");\n            setModalVisible(!modalVisible);\n          }}\n        >\n          <View style={styles.centeredView}>\n            <View style={styles.modalView}>\n              <Text style={styles.modalText}>ТОСТЫ ГАТОВЫ!</Text>\n              <View style={styles.modalButtons}>\n                <Pressable\n                  style={[styles.button, styles.buttonClose]}\n                  onPress={() => {\n                    loadScene();\n                  }}\n                >\n                  <Icon name=\"thumbs-up\" backgroundColor=\"gray\"></Icon>\n                </Pressable>\n              </View>\n              <Pressable\n                style={[styles.button, styles.buttonClose]}\n                onPress={() => setModalVisible(!modalVisible)}\n              >\n                <Text style={styles.textStyle}>Hide Modal</Text>\n              </Pressable>\n            </View>\n          </View>\n        </Modal>\n        {/* <Pressable\n          style={[styles.button, styles.buttonOpen]}\n          onPress={() => setModalVisible(true)}\n        >\n          <Text style={styles.textStyle}>Show Modal</Text>\n        </Pressable> */}\n      </View>\n      <Pressable\n        style={[styles.button, styles.buttonOpen]}\n        onPress={() => setModalVisible(true)}\n      >\n        <Text style={{ fontSize: 40, color: \"#fff\" }}>+</Text>\n      </Pressable>\n    </View>\n"]},"metadata":{},"sourceType":"module"}