{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { persistStore } from \"redux-persist\";\nimport thunk from \"redux-thunk\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { rootReducer } from \"./reduce/rootReducer\";\nvar store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\nexport var persistor = persistStore(store);\n\nvar saveUserInStorage = function saveUserInStorage() {\n  var _store$getState, user;\n\n  return _regeneratorRuntime.async(function saveUserInStorage$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _store$getState = store.getState(), user = _store$getState.user;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"userInfo\", JSON.stringify(user)));\n\n        case 4:\n          _context.next = 9;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nstore.subscribe(function () {\n  saveUserInStorage();\n});\nexport default store;","map":{"version":3,"sources":["/Users/user/Documents/elbrus/phase 3/RedditNativeChallenge/client/src/redux/store.js"],"names":["persistStore","thunk","applyMiddleware","createStore","composeWithDevTools","AsyncStorage","rootReducer","store","persistor","saveUserInStorage","getState","user","setItem","JSON","stringify","console","log","subscribe"],"mappings":";AAAA,SAASA,YAAT,QAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,SAASC,WAAT;AAEA,IAAMC,KAAK,GAAGJ,WAAW,CACvBG,WADuB,EAEvBF,mBAAmB,CAACF,eAAe,CAACD,KAAD,CAAhB,CAFI,CAAzB;AAKA,OAAO,IAAMO,SAAS,GAAGR,YAAY,CAACO,KAAD,CAA9B;;AAEP,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAELF,KAAK,CAACG,QAAN,EAFK,EAEdC,IAFc,mBAEdA,IAFc;AAAA;AAAA,2CAGhBN,YAAY,CAACO,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAjC,CAHgB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKtBI,UAAAA,OAAO,CAACC,GAAR;;AALsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AASAT,KAAK,CAACU,SAAN,CAAgB,YAAM;AACpBR,EAAAA,iBAAiB;AAElB,CAHD;AAKA,eAAeF,KAAf","sourcesContent":["import { persistStore } from \"redux-persist\";\nimport thunk from \"redux-thunk\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nimport { rootReducer } from \"./reduce/rootReducer\";\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport const persistor = persistStore(store);\n\nconst saveUserInStorage = async () => {\n  try {\n    const { user } = store.getState();\n    await AsyncStorage.setItem(\"userInfo\", JSON.stringify(user));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nstore.subscribe(() => {\n  saveUserInStorage();\n  // console.log(\"Store =>\", store.getState());\n});\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}