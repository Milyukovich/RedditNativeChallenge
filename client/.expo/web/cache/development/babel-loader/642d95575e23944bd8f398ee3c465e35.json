{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_CONTENT_START, POST_CREATE, SET_LIKE_ADD, SET_DISLIKE_ADD, EDIT_POST, DELETE_POST, CREATE_COMMENT, CREATE_COMMENT_TO_COMMENT, SET_DISLIKE_TO_COMMENT, SET_LIKE_TO_COMMENT, DISABLE_LOADER, ENABLE_LOADER } from \"../types/content\";\nvar initialState = {\n  content: [],\n  loader: false\n};\n\nvar contentReducer = function contentReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case GET_CONTENT_START:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          content: payload\n        });\n      }\n\n    case POST_CREATE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          content: [].concat(_toConsumableArray(state.content), [payload])\n        });\n      }\n\n    case SET_LIKE_ADD:\n      {\n        console.log(\"SHOZA EBALA\", state.content);\n        return _objectSpread(_objectSpread({}, state), {}, {\n          content: _toConsumableArray(state.content.map(function (el) {\n            return el._id === payload._id ? payload : el;\n          }))\n        });\n      }\n\n    case SET_DISLIKE_ADD:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          content: _toConsumableArray(state.content.map(function (el) {\n            return el._id === payload._id ? payload : el;\n          }))\n        });\n      }\n\n    case EDIT_POST:\n      {\n        var newState = state.content.map(function (el) {\n          return el._id === payload._id ? payload : el;\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          content: newState\n        });\n      }\n\n    case DELETE_POST:\n      {\n        var id = payload.id;\n        var newPostState = state.content.filter(function (el) {\n          return el._id !== id;\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          content: newPostState\n        });\n      }\n\n    case CREATE_COMMENT:\n      {\n        var postId = payload.description.postId;\n        console.log(\"COMMENT\", payload.description);\n        return _objectSpread(_objectSpread({}, state), {}, {\n          content: state.content.map(function (el) {\n            return el._id === postId ? _objectSpread(_objectSpread({}, el), {}, {\n              comments: [].concat(_toConsumableArray(el.comments), [_objectSpread({}, payload.data)])\n            }) : el;\n          })\n        });\n      }\n\n    case CREATE_COMMENT_TO_COMMENT:\n      {\n        var _postId = payload.description.postId;\n        console.log(\"PAY\", payload.data);\n        console.log(\"STATE\", state);\n        console.log(payload.data.father);\n        return _objectSpread(_objectSpread({}, state), {}, {\n          content: state.content.map(function (post) {\n            return post._id == _postId ? _objectSpread(_objectSpread({}, post), {}, {\n              comments: _toConsumableArray(post.comments.map(function (comment) {\n                return comment._id === payload.data.father._id ? _objectSpread(_objectSpread({}, comment), {}, {\n                  comments: [].concat(_toConsumableArray(comment.comments), [payload.data])\n                }) : comment;\n              }))\n            }) : post;\n          })\n        });\n      }\n\n    case SET_LIKE_TO_COMMENT:\n      {\n        if (payload.father.uri || payload.father.content) {\n          console.log(\"PAY\", payload);\n          return _objectSpread(_objectSpread({}, state), {}, {\n            content: state.content.map(function (post) {\n              return post._id === payload.father._id ? _objectSpread(_objectSpread({}, post), {}, {\n                comments: _toConsumableArray(post.comments.map(function (comment) {\n                  return comment._id === payload._id ? _objectSpread(_objectSpread({}, payload), {}, {\n                    comments: comment.comments\n                  }) : comment;\n                }))\n              }) : post;\n            })\n          });\n        }\n\n        if (payload.postId) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            content: state.content.map(function (post) {\n              return post._id == payload.postId ? _objectSpread(_objectSpread({}, post), {}, {\n                comments: _toConsumableArray(post.comments.map(function (comment) {\n                  return comment._id === payload.father._id ? _objectSpread(_objectSpread({}, comment), {}, {\n                    comments: _toConsumableArray(comment.comments.map(function (el) {\n                      return el._id == payload._id ? payload : el;\n                    }))\n                  }) : comment;\n                }))\n              }) : post;\n            })\n          });\n        }\n\n        return state;\n      }\n\n    case SET_DISLIKE_TO_COMMENT:\n      {\n        if (payload.father.uri || payload.father.content) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            content: state.content.map(function (post) {\n              return post._id === payload.father._id ? _objectSpread(_objectSpread({}, post), {}, {\n                comments: _toConsumableArray(post.comments.map(function (comment) {\n                  return comment._id === payload._id ? _objectSpread(_objectSpread({}, payload), {}, {\n                    comments: comment.comments\n                  }) : comment;\n                }))\n              }) : post;\n            })\n          });\n        }\n\n        if (payload.postId) {\n          console.log(\"FATHERCOMMENT\");\n          return _objectSpread(_objectSpread({}, state), {}, {\n            content: state.content.map(function (post) {\n              return post._id == payload.postId ? _objectSpread(_objectSpread({}, post), {}, {\n                comments: _toConsumableArray(post.comments.map(function (comment) {\n                  return comment._id === payload.father._id ? _objectSpread(_objectSpread({}, comment), {}, {\n                    comments: _toConsumableArray(comment.comments.map(function (el) {\n                      return el._id == payload._id ? payload : el;\n                    }))\n                  }) : comment;\n                }))\n              }) : post;\n            })\n          });\n        }\n\n        return state;\n      }\n\n    case ENABLE_LOADER:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          loader: true\n        });\n      }\n\n    case DISABLE_LOADER:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          loader: false\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default contentReducer;","map":{"version":3,"sources":["/home/artur/elbrus/phase-3/ПРОЕКТВЕКА/copy 2/RedditNativeChallenge/client/src/redux/reduce/contentReducer.js"],"names":["GET_CONTENT_START","POST_CREATE","SET_LIKE_ADD","SET_DISLIKE_ADD","EDIT_POST","DELETE_POST","CREATE_COMMENT","CREATE_COMMENT_TO_COMMENT","SET_DISLIKE_TO_COMMENT","SET_LIKE_TO_COMMENT","DISABLE_LOADER","ENABLE_LOADER","initialState","content","loader","contentReducer","state","action","type","payload","console","log","map","el","_id","newState","id","newPostState","filter","postId","description","comments","data","father","post","comment","uri"],"mappings":";;;;;;;AAAA,SACEA,iBADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,eAJF,EAKEC,SALF,EAMEC,WANF,EAOEC,cAPF,EAQEC,yBARF,EASEC,sBATF,EAUEC,mBAVF,EAWEC,cAXF,EAYEC,aAZF;AAeA,IAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,EAAX;AAAeC,EAAAA,MAAM,EAAE;AAAvB,CAArB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;AACvD,MAAQC,IAAR,GAA0BD,MAA1B,CAAQC,IAAR;AAAA,MAAcC,OAAd,GAA0BF,MAA1B,CAAcE,OAAd;;AAEA,UAAQD,IAAR;AACE,SAAKlB,iBAAL;AAAwB;AACtB,+CAAYgB,KAAZ;AAAmBH,UAAAA,OAAO,EAAEM;AAA5B;AACD;;AACD,SAAKlB,WAAL;AAAkB;AAChB,+CAAYe,KAAZ;AAAmBH,UAAAA,OAAO,+BAAMG,KAAK,CAACH,OAAZ,IAAqBM,OAArB;AAA1B;AACD;;AACD,SAAKjB,YAAL;AAAmB;AACjBkB,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BL,KAAK,CAACH,OAAjC;AACA,+CACKG,KADL;AAEEH,UAAAA,OAAO,qBACFG,KAAK,CAACH,OAAN,CAAcS,GAAd,CAAkB,UAAAC,EAAE;AAAA,mBAAKA,EAAE,CAACC,GAAH,KAAWL,OAAO,CAACK,GAAnB,GAAyBL,OAAzB,GAAmCI,EAAxC;AAAA,WAApB,CADE;AAFT;AAMD;;AAED,SAAKpB,eAAL;AAAsB;AACpB,+CACKa,KADL;AAEEH,UAAAA,OAAO,qBACFG,KAAK,CAACH,OAAN,CAAcS,GAAd,CAAkB,UAAAC,EAAE;AAAA,mBAAKA,EAAE,CAACC,GAAH,KAAWL,OAAO,CAACK,GAAnB,GAAyBL,OAAzB,GAAmCI,EAAxC;AAAA,WAApB,CADE;AAFT;AAMD;;AAED,SAAKnB,SAAL;AAAgB;AACd,YAAMqB,QAAQ,GAAGT,KAAK,CAACH,OAAN,CAAcS,GAAd,CAAkB,UAAAC,EAAE;AAAA,iBACnCA,EAAE,CAACC,GAAH,KAAWL,OAAO,CAACK,GAAnB,GAAyBL,OAAzB,GAAmCI,EADA;AAAA,SAApB,CAAjB;AAGA,+CAAYP,KAAZ;AAAmBH,UAAAA,OAAO,EAAEY;AAA5B;AACD;;AAED,SAAKpB,WAAL;AAAkB;AAChB,YAAQqB,EAAR,GAAeP,OAAf,CAAQO,EAAR;AACA,YAAMC,YAAY,GAAGX,KAAK,CAACH,OAAN,CAAce,MAAd,CAAqB,UAAAL,EAAE;AAAA,iBAAIA,EAAE,CAACC,GAAH,KAAWE,EAAf;AAAA,SAAvB,CAArB;AACA,+CAAYV,KAAZ;AAAmBH,UAAAA,OAAO,EAAEc;AAA5B;AACD;;AAED,SAAKrB,cAAL;AAAqB;AACnB,YAAQuB,MAAR,GAAmBV,OAAO,CAACW,WAA3B,CAAQD,MAAR;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,OAAO,CAACW,WAA/B;AACA,+CACKd,KADL;AAEEH,UAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,CAAcS,GAAd,CAAkB,UAAAC,EAAE;AAAA,mBAC3BA,EAAE,CAACC,GAAH,KAAWK,MAAX,mCACSN,EADT;AACaQ,cAAAA,QAAQ,+BAAMR,EAAE,CAACQ,QAAT,sBAAwBZ,OAAO,CAACa,IAAhC;AADrB,iBAEIT,EAHuB;AAAA,WAApB;AAFX;AAQD;;AAED,SAAKhB,yBAAL;AAAgC;AAC9B,YAAMsB,OAAM,GAAGV,OAAO,CAACW,WAAR,CAAoBD,MAAnC;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,OAAO,CAACa,IAA3B;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,KAArB;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACa,IAAR,CAAaC,MAAzB;AACA,+CACKjB,KADL;AAEEH,UAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,CAAcS,GAAd,CAAkB,UAAAY,IAAI;AAAA,mBAC7BA,IAAI,CAACV,GAAL,IAAYK,OAAZ,mCAESK,IAFT;AAGMH,cAAAA,QAAQ,qBACHG,IAAI,CAACH,QAAL,CAAcT,GAAd,CAAkB,UAAAa,OAAO;AAAA,uBAC1BA,OAAO,CAACX,GAAR,KAAgBL,OAAO,CAACa,IAAR,CAAaC,MAAb,CAAoBT,GAApC,mCAESW,OAFT;AAGMJ,kBAAAA,QAAQ,+BAAMI,OAAO,CAACJ,QAAd,IAAwBZ,OAAO,CAACa,IAAhC;AAHd,qBAKIG,OANsB;AAAA,eAAzB,CADG;AAHd,iBAcID,IAfyB;AAAA,WAAtB;AAFX;AAoBD;;AAED,SAAKzB,mBAAL;AAA0B;AACxB,YAAIU,OAAO,CAACc,MAAR,CAAeG,GAAf,IAAsBjB,OAAO,CAACc,MAAR,CAAepB,OAAzC,EAAkD;AAChDO,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,OAAnB;AAEA,iDACKH,KADL;AAEEH,YAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,CAAcS,GAAd,CAAkB,UAAAY,IAAI;AAAA,qBAC7BA,IAAI,CAACV,GAAL,KAAaL,OAAO,CAACc,MAAR,CAAeT,GAA5B,mCAESU,IAFT;AAGMH,gBAAAA,QAAQ,qBACHG,IAAI,CAACH,QAAL,CAAcT,GAAd,CAAkB,UAAAa,OAAO;AAAA,yBAC1BA,OAAO,CAACX,GAAR,KAAgBL,OAAO,CAACK,GAAxB,mCACSL,OADT;AACkBY,oBAAAA,QAAQ,EAAEI,OAAO,CAACJ;AADpC,uBAEII,OAHsB;AAAA,iBAAzB,CADG;AAHd,mBAWID,IAZyB;AAAA,aAAtB;AAFX;AAiBD;;AACD,YAAIf,OAAO,CAACU,MAAZ,EAAoB;AAClB,iDACKb,KADL;AAEEH,YAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,CAAcS,GAAd,CAAkB,UAAAY,IAAI;AAAA,qBAC7BA,IAAI,CAACV,GAAL,IAAYL,OAAO,CAACU,MAApB,mCAESK,IAFT;AAGMH,gBAAAA,QAAQ,qBACHG,IAAI,CAACH,QAAL,CAAcT,GAAd,CAAkB,UAAAa,OAAO;AAAA,yBAC1BA,OAAO,CAACX,GAAR,KAAgBL,OAAO,CAACc,MAAR,CAAeT,GAA/B,mCAESW,OAFT;AAGMJ,oBAAAA,QAAQ,qBACHI,OAAO,CAACJ,QAAR,CAAiBT,GAAjB,CAAqB,UAAAC,EAAE;AAAA,6BACxBA,EAAE,CAACC,GAAH,IAAUL,OAAO,CAACK,GAAlB,GAAwBL,OAAxB,GAAkCI,EADV;AAAA,qBAAvB,CADG;AAHd,uBASIY,OAVsB;AAAA,iBAAzB,CADG;AAHd,mBAkBID,IAnByB;AAAA,aAAtB;AAFX;AAwBD;;AACD,eAAOlB,KAAP;AACD;;AAED,SAAKR,sBAAL;AAA6B;AAC3B,YAAIW,OAAO,CAACc,MAAR,CAAeG,GAAf,IAAsBjB,OAAO,CAACc,MAAR,CAAepB,OAAzC,EAAkD;AAChD,iDACKG,KADL;AAEEH,YAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,CAAcS,GAAd,CAAkB,UAAAY,IAAI;AAAA,qBAC7BA,IAAI,CAACV,GAAL,KAAaL,OAAO,CAACc,MAAR,CAAeT,GAA5B,mCAESU,IAFT;AAGMH,gBAAAA,QAAQ,qBACHG,IAAI,CAACH,QAAL,CAAcT,GAAd,CAAkB,UAAAa,OAAO;AAAA,yBAC1BA,OAAO,CAACX,GAAR,KAAgBL,OAAO,CAACK,GAAxB,mCACSL,OADT;AACkBY,oBAAAA,QAAQ,EAAEI,OAAO,CAACJ;AADpC,uBAEII,OAHsB;AAAA,iBAAzB,CADG;AAHd,mBAWID,IAZyB;AAAA,aAAtB;AAFX;AAiBD;;AACD,YAAIf,OAAO,CAACU,MAAZ,EAAoB;AAClBT,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,iDACKL,KADL;AAEEH,YAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,CAAcS,GAAd,CAAkB,UAAAY,IAAI;AAAA,qBAC7BA,IAAI,CAACV,GAAL,IAAYL,OAAO,CAACU,MAApB,mCAESK,IAFT;AAGMH,gBAAAA,QAAQ,qBACHG,IAAI,CAACH,QAAL,CAAcT,GAAd,CAAkB,UAAAa,OAAO;AAAA,yBAC1BA,OAAO,CAACX,GAAR,KAAgBL,OAAO,CAACc,MAAR,CAAeT,GAA/B,mCAESW,OAFT;AAGMJ,oBAAAA,QAAQ,qBACHI,OAAO,CAACJ,QAAR,CAAiBT,GAAjB,CAAqB,UAAAC,EAAE;AAAA,6BACxBA,EAAE,CAACC,GAAH,IAAUL,OAAO,CAACK,GAAlB,GAAwBL,OAAxB,GAAkCI,EADV;AAAA,qBAAvB,CADG;AAHd,uBASIY,OAVsB;AAAA,iBAAzB,CADG;AAHd,mBAkBID,IAnByB;AAAA,aAAtB;AAFX;AAwBD;;AACD,eAAOlB,KAAP;AACD;;AACD,SAAKL,aAAL;AAAoB;AAClB,+CAAYK,KAAZ;AAAmBF,UAAAA,MAAM,EAAE;AAA3B;AACD;;AACD,SAAKJ,cAAL;AAAqB;AACnB,+CAAYM,KAAZ;AAAmBF,UAAAA,MAAM,EAAE;AAA3B;AACD;;AAED;AACE,aAAOE,KAAP;AA3LJ;AA6LD,CAhMD;;AAkMA,eAAeD,cAAf","sourcesContent":["import {\n  GET_CONTENT_START,\n  POST_CREATE,\n  SET_LIKE_ADD,\n  SET_DISLIKE_ADD,\n  EDIT_POST,\n  DELETE_POST,\n  CREATE_COMMENT,\n  CREATE_COMMENT_TO_COMMENT,\n  SET_DISLIKE_TO_COMMENT,\n  SET_LIKE_TO_COMMENT,\n  DISABLE_LOADER,\n  ENABLE_LOADER,\n} from \"../types/content\";\n\nconst initialState = { content: [], loader: false };\n\nconst contentReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_CONTENT_START: {\n      return { ...state, content: payload };\n    }\n    case POST_CREATE: {\n      return { ...state, content: [...state.content, payload] };\n    }\n    case SET_LIKE_ADD: {\n      console.log(\"SHOZA EBALA\", state.content);\n      return {\n        ...state,\n        content: [\n          ...state.content.map(el => (el._id === payload._id ? payload : el)),\n        ],\n      };\n    }\n\n    case SET_DISLIKE_ADD: {\n      return {\n        ...state,\n        content: [\n          ...state.content.map(el => (el._id === payload._id ? payload : el)),\n        ],\n      };\n    }\n\n    case EDIT_POST: {\n      const newState = state.content.map(el =>\n        el._id === payload._id ? payload : el\n      );\n      return { ...state, content: newState };\n    }\n\n    case DELETE_POST: {\n      const { id } = payload;\n      const newPostState = state.content.filter(el => el._id !== id);\n      return { ...state, content: newPostState };\n    }\n\n    case CREATE_COMMENT: {\n      const { postId } = payload.description;\n      console.log(\"COMMENT\", payload.description);\n      return {\n        ...state,\n        content: state.content.map(el =>\n          el._id === postId\n            ? { ...el, comments: [...el.comments, { ...payload.data }] }\n            : el\n        ),\n      };\n    }\n\n    case CREATE_COMMENT_TO_COMMENT: {\n      const postId = payload.description.postId;\n      console.log(\"PAY\", payload.data);\n      console.log(\"STATE\", state);\n      console.log(payload.data.father);\n      return {\n        ...state,\n        content: state.content.map(post =>\n          post._id == postId\n            ? {\n                ...post,\n                comments: [\n                  ...post.comments.map(comment =>\n                    comment._id === payload.data.father._id\n                      ? {\n                          ...comment,\n                          comments: [...comment.comments, payload.data],\n                        }\n                      : comment\n                  ),\n                ],\n              }\n            : post\n        ),\n      };\n    }\n\n    case SET_LIKE_TO_COMMENT: {\n      if (payload.father.uri || payload.father.content) {\n        console.log(\"PAY\", payload);\n\n        return {\n          ...state,\n          content: state.content.map(post =>\n            post._id === payload.father._id\n              ? {\n                  ...post,\n                  comments: [\n                    ...post.comments.map(comment =>\n                      comment._id === payload._id\n                        ? { ...payload, comments: comment.comments }\n                        : comment\n                    ),\n                  ],\n                }\n              : post\n          ),\n        };\n      }\n      if (payload.postId) {\n        return {\n          ...state,\n          content: state.content.map(post =>\n            post._id == payload.postId\n              ? {\n                  ...post,\n                  comments: [\n                    ...post.comments.map(comment =>\n                      comment._id === payload.father._id\n                        ? {\n                            ...comment,\n                            comments: [\n                              ...comment.comments.map(el =>\n                                el._id == payload._id ? payload : el\n                              ),\n                            ],\n                          }\n                        : comment\n                    ),\n                  ],\n                }\n              : post\n          ),\n        };\n      }\n      return state;\n    }\n\n    case SET_DISLIKE_TO_COMMENT: {\n      if (payload.father.uri || payload.father.content) {\n        return {\n          ...state,\n          content: state.content.map(post =>\n            post._id === payload.father._id\n              ? {\n                  ...post,\n                  comments: [\n                    ...post.comments.map(comment =>\n                      comment._id === payload._id\n                        ? { ...payload, comments: comment.comments }\n                        : comment\n                    ),\n                  ],\n                }\n              : post\n          ),\n        };\n      }\n      if (payload.postId) {\n        console.log(\"FATHERCOMMENT\");\n        return {\n          ...state,\n          content: state.content.map(post =>\n            post._id == payload.postId\n              ? {\n                  ...post,\n                  comments: [\n                    ...post.comments.map(comment =>\n                      comment._id === payload.father._id\n                        ? {\n                            ...comment,\n                            comments: [\n                              ...comment.comments.map(el =>\n                                el._id == payload._id ? payload : el\n                              ),\n                            ],\n                          }\n                        : comment\n                    ),\n                  ],\n                }\n              : post\n          ),\n        };\n      }\n      return state;\n    }\n    case ENABLE_LOADER: {\n      return { ...state, loader: true };\n    }\n    case DISABLE_LOADER: {\n      return { ...state, loader: false };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default contentReducer;\n"]},"metadata":{},"sourceType":"module"}