{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { GET_CONTENT_START } from \"../types/content\";\n\nvar getContentStart = function getContentStart(payload) {\n  return {\n    type: GET_CONTENT_START,\n    payload: payload\n  };\n};\n\nexport var getContent = function getContent() {\n  return function _callee(dispatch) {\n    var response, _await$response$json, post;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"http://localhost:8080/post\"));\n\n          case 2:\n            response = _context.sent;\n            console.log(response);\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            _await$response$json = _context.sent;\n            post = _await$response$json.post;\n            console.log(\"ya tut\", post);\n            dispatch(getContentStart({\n              post: post\n            }));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["/home/roman/elbruss/phase 3/finalproject/RedditNativeChallenge/client/src/redux/actions/content.js"],"names":["GET_CONTENT_START","getContentStart","payload","type","getContent","dispatch","fetch","response","console","log","json","post"],"mappings":";AAAA,SAASA,iBAAT;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,OAAO;AAAA,SAAK;AAAEC,IAAAA,IAAI,EAAEH,iBAAR;AAA2BE,IAAAA,OAAO,EAAPA;AAA3B,GAAL;AAAA,CAA/B;;AAEA,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,iBAAMC,QAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACPC,KAAK,CAAC,4BAAD,CADE;;AAAA;AACxBC,YAAAA,QADwB;AAE9BC,YAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAF8B;AAAA,6CAGTA,QAAQ,CAACG,IAAT,EAHS;;AAAA;AAAA;AAGvBC,YAAAA,IAHuB,wBAGvBA,IAHuB;AAI9BH,YAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBE,IAAtB;AAEAN,YAAAA,QAAQ,CAACJ,eAAe,CAAC;AAACU,cAAAA,IAAI,EAAJA;AAAD,aAAD,CAAhB,CAAR;;AAN8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAN;AAAA,CAAnB","sourcesContent":["import { GET_CONTENT_START } from \"../types/content\";\n\nconst getContentStart = payload => ({ type: GET_CONTENT_START, payload });\n\nexport const getContent = () => async dispatch => {\n  const response = await fetch(\"http://localhost:8080/post\");\n  console.log(response);\n  const {post} = await response.json();\n  console.log(\"ya tut\", post);\n\n  dispatch(getContentStart({post}));\n};\n"]},"metadata":{},"sourceType":"module"}