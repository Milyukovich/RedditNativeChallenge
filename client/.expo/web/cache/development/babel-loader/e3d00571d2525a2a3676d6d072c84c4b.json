{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_GAME_START } from \"../\";\n\nvar contentReducer = function contentReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case GET_GAME_START:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          values: payload\n        });\n      }\n  }\n};\n\nexport default contentReducer;","map":{"version":3,"sources":["/home/roman/elbruss/phase 3/finalproject/RedditNativeChallenge/client/src/redux/reduce/contentReducer.js"],"names":["GET_GAME_START","contentReducer","state","action","type","payload","values"],"mappings":";;;;;;AAAA,SAAQA,cAAR;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;AAC7C,MAAQC,IAAR,GAA0BD,MAA1B,CAAQC,IAAR;AAAA,MAAcC,OAAd,GAA0BF,MAA1B,CAAcE,OAAd;;AACA,UAAQD,IAAR;AACE,SAAKJ,cAAL;AAAqB;AACnB,+CAAYE,KAAZ;AAAmBI,UAAAA,MAAM,EAAED;AAA3B;AACD;AAHH;AAKD,CAPD;;AAQA,eAAeJ,cAAf","sourcesContent":["import {GET_GAME_START} from \"../\"\n\nconst contentReducer = (state = {}, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case GET_GAME_START: {\n      return { ...state, values: payload };\n    }\n  }\n};\nexport default contentReducer;\n"]},"metadata":{},"sourceType":"module"}