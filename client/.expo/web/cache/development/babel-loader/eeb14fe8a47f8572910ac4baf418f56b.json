{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/artur/elbrus/phase-3/RedditNativeChallenge/client/src/components/Forms/SignUp/SignUp.js\";\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { signUp } from \"../../../redux/actions/user.ac\";\n\nvar SignUp = function SignUp() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var dispatch = useDispatch();\n\n  var handleClick = function handleClick() {\n    var userInfo = {\n      userName: userName,\n      email: email,\n      password: password\n    };\n\n    if (userInfo.userName && userInfo.email && userInfo.password) {\n      dispatch(signUp(userInfo));\n      setUserName(\"\");\n      setEmail(\"\");\n      setPassword(\"\");\n    }\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputs,\n    placeholder: \"Enter username...\",\n    onChangeText: function onChangeText(userName) {\n      return setUserName(userName);\n    },\n    defaultValue: userName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputs,\n    placeholder: \"Enter email...\",\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    defaultValue: email,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    secure: true,\n    style: styles.inputs,\n    placeholder: \"Enter password...\",\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    defaultValue: password,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    style: [styles.buttonContainer, styles.loginButton],\n    onPress: handleClick,\n    title: \"SignUp\",\n    color: \"#841584\",\n    accessibilityLabel: \"Learn more about this purple button\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SignUp;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#DCDCDC\"\n  },\n  inputContainer: {\n    borderBottomColor: \"#F5FCFF\",\n    backgroundColor: \"#FFFFFF\",\n    borderRadius: 30,\n    borderBottomWidth: 1,\n    width: 300,\n    height: 45,\n    marginBottom: 20,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  inputs: {\n    height: 45,\n    marginLeft: 16,\n    borderBottomColor: \"#FFFFFF\",\n    flex: 1\n  },\n  inputIcon: {\n    width: 30,\n    height: 30,\n    marginRight: 15,\n    justifyContent: \"center\"\n  },\n  buttonContainer: {\n    height: 45,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 15,\n    width: 300,\n    borderRadius: 30,\n    backgroundColor: \"transparent\"\n  },\n  btnForgotPassword: {\n    height: 15,\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    alignItems: \"flex-end\",\n    marginBottom: 10,\n    width: 300,\n    backgroundColor: \"transparent\"\n  },\n  loginButton: {\n    backgroundColor: \"#00b5ec\",\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 9\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 12.35,\n    elevation: 19\n  },\n  loginText: {\n    color: \"white\"\n  },\n  bgImage: {\n    flex: 1,\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\"\n  },\n  btnText: {\n    color: \"white\",\n    fontWeight: \"bold\"\n  },\n  googleButton: {\n    backgroundColor: \"#ff0000\"\n  },\n  register: {\n    height: 45,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 15,\n    width: 300,\n    borderRadius: 30,\n    backgroundColor: \"transparent\",\n    position: \"absolute\",\n    bottom: 10\n  }\n});","map":{"version":3,"sources":["/home/artur/elbrus/phase-3/RedditNativeChallenge/client/src/components/Forms/SignUp/SignUp.js"],"names":["React","useState","useDispatch","useHistory","signUp","SignUp","userName","setUserName","email","setEmail","password","setPassword","dispatch","handleClick","userInfo","styles","inputs","buttonContainer","loginButton","StyleSheet","create","container","flex","justifyContent","alignItems","backgroundColor","inputContainer","borderBottomColor","borderRadius","borderBottomWidth","width","height","marginBottom","flexDirection","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","marginLeft","inputIcon","marginRight","btnForgotPassword","loginText","color","bgImage","position","btnText","fontWeight","googleButton","register","bottom"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  Button,\n  View,\n  SafeAreaView,\n  Text,\n  Alert,\n  TextInput,\n} from \"react-native\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { signUp } from \"../../../redux/actions/user.ac\";\n\nconst SignUp = () => {\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    const userInfo = {\n      userName,\n      email,\n      password,\n    };\n\n    if (userInfo.userName && userInfo.email && userInfo.password) {\n      dispatch(signUp(userInfo));\n      setUserName(\"\");\n      setEmail(\"\");\n      setPassword(\"\");\n    }\n  };\n\n  return (\n    <View>\n      <TextInput\n        style={styles.inputs}\n        placeholder=\"Enter username...\"\n        onChangeText={userName => setUserName(userName)}\n        defaultValue={userName}\n      />\n      <TextInput\n        style={styles.inputs}\n        placeholder=\"Enter email...\"\n        onChangeText={email => setEmail(email)}\n        defaultValue={email}\n      />\n      <TextInput\n      secure\n        style={styles.inputs}\n        placeholder=\"Enter password...\"\n        onChangeText={password => setPassword(password)}\n        defaultValue={password}\n      />\n\n      <Button\n        style={[styles.buttonContainer, styles.loginButton]}\n        onPress={handleClick}\n        title=\"SignUp\"\n        color=\"#841584\"\n        accessibilityLabel=\"Learn more about this purple button\"\n      />\n    </View>\n  );\n};\n\nexport default SignUp;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#DCDCDC\",\n  },\n  inputContainer: {\n    borderBottomColor: \"#F5FCFF\",\n    backgroundColor: \"#FFFFFF\",\n    borderRadius: 30,\n    borderBottomWidth: 1,\n    width: 300,\n    height: 45,\n    marginBottom: 20,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n\n    elevation: 5,\n  },\n  inputs: {\n    height: 45,\n    marginLeft: 16,\n    borderBottomColor: \"#FFFFFF\",\n    flex: 1,\n  },\n  inputIcon: {\n    width: 30,\n    height: 30,\n    marginRight: 15,\n    justifyContent: \"center\",\n  },\n  buttonContainer: {\n    height: 45,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 15,\n    width: 300,\n    borderRadius: 30,\n    backgroundColor: \"transparent\",\n  },\n  btnForgotPassword: {\n    height: 15,\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    alignItems: \"flex-end\",\n    marginBottom: 10,\n    width: 300,\n    backgroundColor: \"transparent\",\n  },\n  loginButton: {\n    backgroundColor: \"#00b5ec\",\n\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 9,\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 12.35,\n\n    elevation: 19,\n  },\n  loginText: {\n    color: \"white\",\n  },\n  bgImage: {\n    flex: 1,\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\",\n  },\n  btnText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n  },\n  googleButton: {\n    backgroundColor: \"#ff0000\",\n  },\n  register: {\n    height: 45,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 15,\n    width: 300,\n    borderRadius: 30,\n    backgroundColor: \"transparent\",\n    position: \"absolute\",\n    bottom: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}