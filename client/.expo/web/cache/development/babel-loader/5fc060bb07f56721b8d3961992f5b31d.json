{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { REMOVE_TOKEN, SET_TOKEN, SET_USER_INFO, REMOVE_USER_INFO, CHANGE_STATUS_LIKE, CHANGE_STATUS_COMMENT, CHANGE_STATUS_OLD, GET_SUBSCRIBE_START, PROFILE_EDIT } from \"../types/userTypes\";\nvar initialState = {\n  jwt: {\n    access: null,\n    refresh: null\n  },\n  userInfo: null,\n  statusSearch: {\n    likes: false,\n    comments: false,\n    old: false\n  }\n};\nexport var userPersistConfig = {\n  key: \"user\",\n  storage: AsyncStorage,\n  whitelist: [jwt]\n};\n\nvar userReducer = function userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var payload = action.payload;\n\n  switch (action.type) {\n    case SET_TOKEN:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        jwt: _objectSpread(_objectSpread({}, state.jwt), {}, {\n          access: action.payload.accessToken,\n          refresh: action.payload.refreshToken\n        })\n      });\n\n    case REMOVE_TOKEN:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        jwt: _objectSpread(_objectSpread({}, state.jwt), {}, {\n          access: null,\n          refresh: null\n        })\n      });\n\n    case SET_USER_INFO:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userInfo: action.payload.userInfo\n      });\n\n    case REMOVE_USER_INFO:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userInfo: null\n      });\n\n    case CHANGE_STATUS_LIKE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        statusSearch: _objectSpread(_objectSpread({}, state.statusSearch), {}, {\n          likes: !state.statusSearch.likes,\n          comments: false,\n          old: false\n        })\n      });\n\n    case CHANGE_STATUS_COMMENT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        statusSearch: _objectSpread(_objectSpread({}, state.statusSearch), {}, {\n          likes: false,\n          comments: !state.statusSearch.comments,\n          old: false\n        })\n      });\n\n    case CHANGE_STATUS_OLD:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        statusSearch: _objectSpread(_objectSpread({}, state.statusSearch), {}, {\n          likes: false,\n          comments: false,\n          old: !state.statusSearch.old\n        })\n      });\n\n    case PROFILE_EDIT:\n      {\n        var id = action.payload._id;\n        var newUserInfo = action.payload;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          userInfo: _objectSpread(_objectSpread({}, newUserInfo), {}, {\n            id: id\n          })\n        });\n      }\n\n    case GET_SUBSCRIBE_START:\n      {\n        return _objectSpread({}, state);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/home/artur/elbrus/phase-3/ПРОЕКТВЕКА/copy 2/RedditNativeChallenge/client/src/redux/reduce/userReducer.js"],"names":["AsyncStorage","REMOVE_TOKEN","SET_TOKEN","SET_USER_INFO","REMOVE_USER_INFO","CHANGE_STATUS_LIKE","CHANGE_STATUS_COMMENT","CHANGE_STATUS_OLD","GET_SUBSCRIBE_START","PROFILE_EDIT","initialState","jwt","access","refresh","userInfo","statusSearch","likes","comments","old","userPersistConfig","key","storage","whitelist","userReducer","state","action","payload","type","accessToken","refreshToken","id","_id","newUserInfo"],"mappings":"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","sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nimport {\n  REMOVE_TOKEN,\n  SET_TOKEN,\n  SET_USER_INFO,\n  REMOVE_USER_INFO,\n  CHANGE_STATUS_LIKE,\n  CHANGE_STATUS_COMMENT,\n  CHANGE_STATUS_OLD,\n  GET_SUBSCRIBE_START,\n  PROFILE_EDIT,\n} from \"../types/userTypes\";\n\nconst initialState = {\n  jwt: { access: null, refresh: null },\n  userInfo: null,\n  statusSearch: { likes: false, comments: false, old: false },\n};\n\nexport const userPersistConfig = {\n  key: \"user\",\n  storage: AsyncStorage,\n  whitelist: [jwt]\n};\n\nconst userReducer = (state = initialState, action) => {\n  const { payload } = action;\n  switch (action.type) {\n    case SET_TOKEN:\n      return {\n        ...state,\n        jwt: {\n          ...state.jwt,\n          access: action.payload.accessToken,\n          refresh: action.payload.refreshToken,\n        },\n      };\n\n    case REMOVE_TOKEN:\n      return { ...state, jwt: { ...state.jwt, access: null, refresh: null } };\n\n    case SET_USER_INFO:\n      return { ...state, userInfo: action.payload.userInfo };\n\n    case REMOVE_USER_INFO:\n      return { ...state, userInfo: null };\n\n    case CHANGE_STATUS_LIKE:\n      return {\n        ...state,\n        statusSearch: {\n          ...state.statusSearch,\n          likes: !state.statusSearch.likes,\n          comments: false,\n          old: false,\n        },\n      };\n    case CHANGE_STATUS_COMMENT:\n      return {\n        ...state,\n        statusSearch: {\n          ...state.statusSearch,\n          likes: false,\n          comments: !state.statusSearch.comments,\n          old: false,\n        },\n      };\n    case CHANGE_STATUS_OLD:\n      return {\n        ...state,\n        statusSearch: {\n          ...state.statusSearch,\n          likes: false,\n          comments: false,\n          old: !state.statusSearch.old,\n        },\n      };\n    case PROFILE_EDIT: {\n      const id = action.payload._id;\n      const newUserInfo = action.payload;\n      return { ...state, userInfo: { ...newUserInfo, id } };\n    }\n\n    case GET_SUBSCRIBE_START: {\n      return { ...state };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n"]},"metadata":{},"sourceType":"module"}