{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { rootReducer } from \"./reduce/rootReducer\";\nimport thunk from \"redux-thunk\";\nimport getInitState from \"./initialState\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { AsyncStorage } from \"@react-native-async-storage/async-storage\";\nvar store = createStore(rootReducer, getInitState(), composeWithDevTools(applyMiddleware(thunk)));\n\nvar storeData = function storeData() {\n  return _regeneratorRuntime.async(function storeData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"user\", \"userName\"));\n\n        case 3:\n          _context.next = 8;\n          break;\n\n        case 5:\n          _context.prev = 5;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n};\n\nconsole.log(999, storeData());\nconsole.log(\"888\", store.getState());\nstore.subscribe(function () {\n  storeData();\n  console.log(\"in Subscribe\", store.getState());\n});\nconsole.log(\"STORE\", store);\nexport default store;","map":{"version":3,"sources":["/home/artur/elbrus/phase-3/RedditNativeChallenge/client/src/redux/store.js"],"names":["rootReducer","thunk","getInitState","applyMiddleware","createStore","composeWithDevTools","AsyncStorage","store","storeData","setItem","console","log","getState","subscribe"],"mappings":";AAAA,SAASA,WAAT;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,YAAP;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,YAAT,QAA6B,2CAA7B;AAEA,IAAMC,KAAK,GAAGH,WAAW,CACvBJ,WADuB,EAEvBE,YAAY,EAFW,EAGvBG,mBAAmB,CAACF,eAAe,CAACF,KAAD,CAAhB,CAHI,CAAzB;;AAMA,IAAMO,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAERF,YAAY,CAACG,OAAb,CAAqB,MAArB,EAA6B,UAA7B,CAFQ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIdC,UAAAA,OAAO,CAACC,GAAR;;AAJc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;;AAQAD,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBH,SAAS,EAA1B;AAEAE,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBJ,KAAK,CAACK,QAAN,EAAnB;AACAL,KAAK,CAACM,SAAN,CAAgB,YAAM;AACpBL,EAAAA,SAAS;AAETE,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BJ,KAAK,CAACK,QAAN,EAA5B;AAED,CALD;AAOAF,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,KAArB;AAEA,eAAeA,KAAf","sourcesContent":["import { rootReducer } from \"./reduce/rootReducer\";\nimport thunk from \"redux-thunk\";\nimport getInitState from \"./initialState\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { AsyncStorage } from \"@react-native-async-storage/async-storage\";\n\nconst store = createStore(\n  rootReducer,\n  getInitState(),\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nconst storeData = async () => {\n  try {\n    await AsyncStorage.setItem(\"user\", \"userName\");\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconsole.log(999, storeData());\n\nconsole.log(\"888\", store.getState());\nstore.subscribe(() => {\n  storeData();\n\n  console.log(\"in Subscribe\", store.getState());\n  // window.localStorage.setItem(\"redux\", JSON.stringify(store.getState()));\n});\n\nconsole.log(\"STORE\", store);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}