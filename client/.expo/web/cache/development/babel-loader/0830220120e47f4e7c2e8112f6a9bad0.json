{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/user/elbrus/PHASE 3/RedditNativeChallenge/client/src/components/OnePostPage/OnePostPage.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Card, Button, Input } from \"react-native-elements\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addLike, addDislike, getContent, editPost } from \"../../redux/actions/content\";\nimport { createComMain, createComToCom } from \"../../redux/actions/comments\";\nimport AddCommentMenu from \"../AddCommentMenu/AddCommentMenu.jsx\";\nexport default function Post(_ref) {\n  var _this = this;\n\n  var route = _ref.route;\n  var dispatch = useDispatch();\n  var navigation = useNavigation();\n  var mainId = route.params.el._id;\n  var posts = useSelector(function (state) {\n    return state.content;\n  });\n  var mainPost = posts.filter(function (post) {\n    return post._id == mainId;\n  })[0];\n  var comments = mainPost.comments;\n  var userId = useSelector(function (state) {\n    return state.user.userInfo.id;\n  });\n\n  var _useState = useState(route.params.el.likes.includes(userId)),\n      _useState2 = _slicedToArray(_useState, 2),\n      likeColor = _useState2[0],\n      setLikeColor = _useState2[1];\n\n  var _useState3 = useState(route.params.el.dislikes.includes(userId)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dislikeColor = _useState4[0],\n      setDislikeColor = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      commentToComment = _useState6[0],\n      setCommentToComment = _useState6[1];\n\n  var createCommentToComment = function createCommentToComment(commentId) {\n    if (commentToComment.trim().length > 5) {\n      var comment = {\n        text: commentToComment,\n        autorId: userId,\n        commentId: commentId,\n        mainId: mainId,\n        postId: mainPost._id\n      };\n      dispatch(createComToCom(comment));\n    }\n  };\n\n  var like = function like(userId, postId) {\n    dispatch(addLike(userId, postId));\n  };\n\n  var dislike = function dislike(userId, postId) {\n    dispatch(addDislike(userId, postId));\n  };\n\n  useEffect(function () {\n    dispatch(getContent());\n    console.log(\"<><><><><><><>\", mainPost);\n    setDislikeColor(mainPost.dislikes.includes(userId));\n    setLikeColor(mainPost.likes.includes(userId));\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, React.createElement(Card, {\n    containerStyle: styles.div,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, React.createElement(Card.Title, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, mainPost.title), React.createElement(Card.Divider, {\n    style: styles.hr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), React.createElement(Card.Title, {\n    style: styles.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, mainPost.description), mainPost.content ? React.createElement(Card.Image, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, mainPost.content)) : React.createElement(React.Fragment, null), React.createElement(View, {\n    style: styles.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon.Button, {\n    color: likeColor ? \"#61dafb\" : \"#f9fafb\",\n    name: \"thumbs-up\",\n    backgroundColor: \"#1f2937\",\n    onPress: function onPress() {\n      like(userId, mainPost._id);\n      setLikeColor(function (prev) {\n        if (dislikeColor) setDislikeColor(function (prevD) {\n          return !prevD;\n        });\n        return !prev;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, mainPost.likes.length)), React.createElement(Icon.Button, {\n    color: dislikeColor ? \"#61dafb\" : \"#f9fafb\",\n    name: \"thumbs-down\",\n    backgroundColor: \"#1f2937\",\n    onPress: function onPress() {\n      dislike(userId, mainPost._id);\n      setDislikeColor(function (prev) {\n        if (likeColor) setLikeColor(function (prevL) {\n          return !prevL;\n        });\n        return !prev;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, mainPost.dislikes.length))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.navigate(\"DetailPage\", {\n        el: mainPost.author\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"Created by: \", mainPost.author.userName)), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, mainPost.date)), comments.length ? React.createElement(React.Fragment, null, React.createElement(FlatList, {\n    data: comments,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Card, {\n        style: {\n          height: 30\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }\n      }, console.log(item), React.createElement(Card.Image, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          marginBottom: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 19\n        }\n      }, item.text)), React.createElement(View, {\n        style: styles.icons,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }\n      }, React.createElement(Icon.Button, {\n        name: \"thumbs-up\",\n        \"thumbs-down\": true,\n        backgroundColor: \"gray\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 19\n        }\n      }, item.likes.length), React.createElement(Icon.Button, {\n        name: \"thumbs-down\",\n        backgroundColor: \"gray\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 19\n        }\n      }, item.dislikes.length), React.createElement(Icon.Button, {\n        name: \"comments\",\n        backgroundColor: \"gray\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 19\n        }\n      }, item.comments.length), React.createElement(Icon.Button, {\n        name: \"ellipsis-h\",\n        backgroundColor: \"gray\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 19\n        }\n      })), React.createElement(Text, {\n        style: {\n          marginBottom: 1\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }\n      }, item.date), React.createElement(FlatList, {\n        data: item.comments,\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item;\n          return React.createElement(React.Fragment, null, React.createElement(View, {\n            style: {\n              flex: 1,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 23\n            }\n          }, React.createElement(View, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 27\n            }\n          }, item.text)), React.createElement(View, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 27\n            }\n          }, item.creatorLogin), React.createElement(Text, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 27\n            }\n          }, item.date))));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }\n      }), React.createElement(Input, {\n        value: commentToComment,\n        onChangeText: function onChangeText(text) {\n          return setCommentToComment(text);\n        },\n        placeholder: \"Comment\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }\n      }), React.createElement(Button, {\n        onPress: function onPress() {\n          createCommentToComment(item._id);\n        },\n        title: \"Sub\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }\n      }));\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  })) : React.createElement(React.Fragment, null), React.createElement(AddCommentMenu, {\n    userId: userId,\n    postId: mainPost._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  div: {\n    width: 400,\n    flexDirection: \"column\",\n    borderWidth: 2,\n    borderRadius: 5,\n    borderStyle: \"solid\",\n    borderColor: \"#f9fafb\",\n    backgroundColor: \"#1f2937\"\n  },\n  container: {\n    flex: 1,\n    paddingTop: 20,\n    alignItems: \"center\",\n    fontSize: 13,\n    backgroundColor: \"#111827\",\n    height: 200\n  },\n  hr: {\n    backgroundColor: \"#61dafb\",\n    height: 1.3\n  },\n  title: {\n    fontSize: 25,\n    color: \"#f9fafb\"\n  },\n  description: {\n    color: \"#f9fafb\",\n    fontSize: 20\n  },\n  text: {\n    color: \"#f9fafb\"\n  },\n  icons: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  content: {\n    height: 200,\n    borderWidth: 4,\n    borderColor: \"white\",\n    marginBottom: 10\n  },\n  text: {\n    color: \"#f9fafb\"\n  }\n});","map":{"version":3,"sources":["/Users/user/elbrus/PHASE 3/RedditNativeChallenge/client/src/components/OnePostPage/OnePostPage.js"],"names":["React","useContext","useEffect","useState","useNavigation","Card","Button","Input","Icon","useDispatch","useSelector","addLike","addDislike","getContent","editPost","createComMain","createComToCom","AddCommentMenu","Post","route","dispatch","navigation","mainId","params","el","_id","posts","state","content","mainPost","filter","post","comments","userId","user","userInfo","id","likes","includes","likeColor","setLikeColor","dislikes","dislikeColor","setDislikeColor","commentToComment","setCommentToComment","createCommentToComment","commentId","trim","length","comment","text","autorId","postId","like","dislike","console","log","styles","container","div","title","hr","description","icons","prev","prevD","prevL","navigate","author","userName","date","item","height","marginBottom","flex","flexDirection","justifyContent","creatorLogin","StyleSheet","create","width","borderWidth","borderRadius","borderStyle","borderColor","backgroundColor","paddingTop","alignItems","fontSize","color"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Card, Button, Input } from \"react-native-elements\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  FlatList,\n  TouchableOpacity,\n} from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  addLike,\n  addDislike,\n  getContent,\n  editPost,\n} from \"../../redux/actions/content\";\nimport { createComMain, createComToCom } from \"../../redux/actions/comments\";\nimport AddCommentMenu from \"../AddCommentMenu/AddCommentMenu.jsx\";\n\nexport default function Post({ route }) {\n  const dispatch = useDispatch();\n  const navigation = useNavigation();\n\n  const mainId = route.params.el._id;\n\n  const posts = useSelector(state => state.content);\n  const mainPost = posts.filter(post => post._id == mainId)[0];\n  const comments = mainPost.comments;\n  // const likes = mainPost.likes;\n  // const dislikes = mainPost.dislikes;\n  const userId = useSelector(state => state.user.userInfo.id);\n\n  const [likeColor, setLikeColor] = useState(\n    route.params.el.likes.includes(userId)\n  );\n  const [dislikeColor, setDislikeColor] = useState(\n    route.params.el.dislikes.includes(userId)\n  );\n\n  const [commentToComment, setCommentToComment] = useState();\n  const createCommentToComment = commentId => {\n    if (commentToComment.trim().length > 5) {\n      const comment = {\n        text: commentToComment,\n        autorId: userId,\n        commentId,\n        mainId: mainId,\n        postId: mainPost._id,\n      };\n      dispatch(createComToCom(comment));\n    }\n  };\n\n  const like = (userId, postId) => {\n    dispatch(addLike(userId, postId));\n  };\n  const dislike = (userId, postId) => {\n    dispatch(addDislike(userId, postId));\n  };\n\n  useEffect(() => {\n    dispatch(getContent());\n    console.log(\"<><><><><><><>\",mainPost);\n    setDislikeColor(mainPost.dislikes.includes(userId));\n    setLikeColor(mainPost.likes.includes(userId));\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <Card containerStyle={styles.div}>\n        <Card.Title style={styles.title}>{mainPost.title}</Card.Title>\n        <Card.Divider style={styles.hr} />\n        <Card.Title style={styles.description}>\n          {mainPost.description}\n        </Card.Title>\n\n        {mainPost.content ? (\n          <Card.Image>\n            <Text>{mainPost.content}</Text>\n          </Card.Image>\n        ) : (\n          <></>\n        )}\n\n        <View style={styles.icons}>\n          <Icon.Button\n            color={likeColor ? \"#61dafb\" : \"#f9fafb\"}\n            name=\"thumbs-up\"\n            backgroundColor=\"#1f2937\"\n            onPress={() => {\n              // if(likes.includes(userId) === false){\n              like(userId, mainPost._id);\n              // setLikeColor(prev => !prev);\n              setLikeColor(prev => {\n                if (dislikeColor) setDislikeColor(prevD => !prevD);\n                return !prev;\n              });\n            }}\n          >\n            <Text style={styles.text}>{mainPost.likes.length}</Text>\n          </Icon.Button>\n          <Icon.Button\n            color={dislikeColor ? \"#61dafb\" : \"#f9fafb\"}\n            name=\"thumbs-down\"\n            backgroundColor=\"#1f2937\"\n            onPress={() => {\n              // if(dislikes.includes(userId) === false){\n              dislike(userId, mainPost._id);\n              // setDislikeColor(prev => !prev);\n              setDislikeColor(prev => {\n                if (likeColor) setLikeColor(prevL => !prevL);\n                return !prev;\n              });\n            }}\n          >\n            <Text style={styles.text}>{mainPost.dislikes.length}</Text>\n          </Icon.Button>\n        </View>\n\n        <TouchableOpacity\n          onPress={() => {\n            navigation.navigate(\"DetailPage\", {\n              el: mainPost.author,\n            });\n          }}\n        >\n          <Text style={styles.text}>\n            Created by: {mainPost.author.userName}\n          </Text>\n        </TouchableOpacity>\n        <Text style={styles.text}>{mainPost.date}</Text>\n      </Card>\n\n      {/* <Text style={{ alignItems: \"center\", justifyContent: \"center\" }}>\n        tuta\n      </Text> */}\n      {comments.length ? (\n        <>\n          <FlatList\n            data={comments}\n            renderItem={({ item }) => (\n              <Card style={{ height: 30 }}>\n                {console.log(item)}\n                <Card.Image /*source={\"ASd\"}*/>\n                  <Text style={{ marginBottom: 10 }}>{item.text}</Text>\n                </Card.Image>\n\n                <View style={styles.icons}>\n                  <Icon.Button\n                    name=\"thumbs-up\"\n                    thumbs-down\n                    backgroundColor=\"gray\"\n                    // onPress={() => likeComment(userId, item._id)}\n                  >\n                    {item.likes.length}\n                  </Icon.Button>\n                  <Icon.Button\n                    name=\"thumbs-down\"\n                    backgroundColor=\"gray\"\n                    // onPress={() => dislikeComment(userId, item._id)}\n                  >\n                    {item.dislikes.length}\n                  </Icon.Button>\n                  <Icon.Button name=\"comments\" backgroundColor=\"gray\">\n                    {item.comments.length}\n                  </Icon.Button>\n                  <Icon.Button\n                    name=\"ellipsis-h\"\n                    backgroundColor=\"gray\"\n                  ></Icon.Button>\n                </View>\n                <Text style={{ marginBottom: 1 }}>{item.date}</Text>\n                <FlatList\n                  data={item.comments}\n                  renderItem={({ item }) => (\n                    <>\n                      <View\n                        style={{\n                          flex: 1,\n                          flexDirection: \"row\",\n                          justifyContent: \"space-between\",\n                        }}\n                      >\n                        <View>\n                          <Text>{item.text}</Text>\n                        </View>\n\n                        <View>\n                          <Text>{item.creatorLogin}</Text>\n                          <Text>{item.date}</Text>\n                        </View>\n                      </View>\n                    </>\n                  )}\n                />\n                <Input\n                  value={commentToComment}\n                  onChangeText={text => setCommentToComment(text)}\n                  placeholder=\"Comment\"\n                />\n                <Button\n                  onPress={() => {\n                    createCommentToComment(item._id);\n                  }}\n                  title=\"Sub\"\n                />\n              </Card>\n            )}\n            keyExtractor={item => item.id}\n          />\n\n          {/* <Input\n            value={comment}\n            onChangeText={text => setComment(text)}\n            placeholder=\"Текст комментария\"\n            />\n            <Button\n            onPress={() => {\n              createComment();\n            }}\n            title=\"Отправить комментарий\"\n          /> */}\n        </>\n      ) : (\n        <></>\n      )}\n      <AddCommentMenu userId={userId} postId={mainPost._id} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  //post container\n  div: {\n    width: 400,\n    flexDirection: \"column\",\n    borderWidth: 2,\n    borderRadius: 5,\n    borderStyle: \"solid\",\n    borderColor: \"#f9fafb\",\n    backgroundColor: \"#1f2937\",\n  },\n  // all data\n  container: {\n    flex: 1,\n    paddingTop: 20,\n    alignItems: \"center\",\n    fontSize: 13,\n    backgroundColor: \"#111827\",\n    height: 200,\n  },\n\n  hr: {\n    backgroundColor: \"#61dafb\",\n    height: 1.3,\n  },\n\n  title: {\n    fontSize: 25,\n    color: \"#f9fafb\",\n  },\n\n  description: {\n    color: \"#f9fafb\",\n    fontSize: 20,\n  },\n\n  text: {\n    color: \"#f9fafb\",\n  },\n\n  icons: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n  content: {\n    // width: 270,\n    height: 200,\n    // borderRadius: 63,\n    borderWidth: 4,\n    borderColor: \"white\",\n    marginBottom: 10,\n  },\n  text: {\n    color: \"#f9fafb\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}