{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/artur/elbrus/phase-3/\\u041F\\u0420\\u041E\\u0415\\u041A\\u0422\\u0412\\u0415\\u041A\\u0410/copy 2/RedditNativeChallenge/client/src/components/Forms/SignIn/SignIn.js\";\n\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { signIn } from \"../../../redux/actions/user.ac\";\nimport styles from \"./style\";\n\nvar SignIn = function SignIn() {\n  var navigation = useNavigation();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var dispatch = useDispatch();\n\n  var handleClick = function handleClick() {\n    var userInfo = {\n      email: email,\n      password: password\n    };\n\n    if (userInfo.email && userInfo.password) {\n      dispatch(signIn(userInfo));\n      setEmail(\"\");\n      setPassword(\"\");\n    }\n  };\n\n  var handleClickLoadSignUp = function handleClickLoadSignUp() {\n    navigation.navigate(\"SignUp\");\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    style: styles.bgImage,\n    source: {\n      uri: \"https://i.pinimg.com/originals/f3/36/f4/f336f483d30551426051ce690b8d2d68.gif\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputs,\n    placeholder: \"Email\",\n    keyboardType: \"email-address\",\n    underlineColorAndroid: \"transparent\",\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    defaultValue: email,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), React.createElement(Image, {\n    style: styles.inputIcon,\n    source: {\n      uri: \"https://img.icons8.com/nolan/40/000000/email.png\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputs,\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    underlineColorAndroid: \"transparent\",\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    defaultValue: password,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), React.createElement(Image, {\n    style: styles.inputIcon,\n    source: {\n      uri: \"https://img.icons8.com/nolan/40/000000/key.png\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: [styles.buttonContainer, styles.loginButton],\n    onPress: handleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Login\")), React.createElement(TouchableOpacity, {\n    style: [styles.buttonContainer, styles.loginButton],\n    onPress: handleClickLoadSignUp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"SignUp\")));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/home/artur/elbrus/phase-3/ПРОЕКТВЕКА/copy 2/RedditNativeChallenge/client/src/components/Forms/SignIn/SignIn.js"],"names":["React","useState","useDispatch","useNavigation","signIn","styles","SignIn","navigation","email","setEmail","password","setPassword","dispatch","handleClick","userInfo","handleClickLoadSignUp","navigate","container","bgImage","uri","inputContainer","inputs","inputIcon","buttonContainer","loginButton","loginText"],"mappings":"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","sourcesContent":["import { View, Text, TextInput, Image, TouchableOpacity } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nimport { signIn } from \"../../../redux/actions/user.ac\";\nimport styles from \"./style\";\n\nconst SignIn = () => {\n  const navigation = useNavigation();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    const userInfo = {\n      email,\n      password,\n    };\n\n    if (userInfo.email && userInfo.password) {\n      dispatch(signIn(userInfo));\n\n      setEmail(\"\");\n      setPassword(\"\");\n    }\n  };\n\n  const handleClickLoadSignUp = () => {\n    navigation.navigate(\"SignUp\");\n  };\n\n  return (\n    <View style={styles.container}>\n      <Image\n        style={styles.bgImage}\n        source={{\n          uri: \"https://i.pinimg.com/originals/f3/36/f4/f336f483d30551426051ce690b8d2d68.gif\",\n        }}\n      />\n\n      <View style={styles.inputContainer}>\n        <TextInput\n          style={styles.inputs}\n          placeholder=\"Email\"\n          keyboardType=\"email-address\"\n          underlineColorAndroid=\"transparent\"\n          onChangeText={email => setEmail(email)}\n          defaultValue={email}\n        />\n        <Image\n          style={styles.inputIcon}\n          source={{ uri: \"https://img.icons8.com/nolan/40/000000/email.png\" }}\n        />\n      </View>\n\n      <View style={styles.inputContainer}>\n        <TextInput\n          style={styles.inputs}\n          placeholder=\"Password\"\n          secureTextEntry={true}\n          underlineColorAndroid=\"transparent\"\n          onChangeText={password => setPassword(password)}\n          defaultValue={password}\n        />\n        <Image\n          style={styles.inputIcon}\n          source={{ uri: \"https://img.icons8.com/nolan/40/000000/key.png\" }}\n        />\n      </View>\n\n      <TouchableOpacity\n        style={[styles.buttonContainer, styles.loginButton]}\n        onPress={handleClick}\n      >\n        <Text style={styles.loginText}>Login</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        style={[styles.buttonContainer, styles.loginButton]}\n        onPress={handleClickLoadSignUp}\n      >\n        <Text style={styles.loginText}>SignUp</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}