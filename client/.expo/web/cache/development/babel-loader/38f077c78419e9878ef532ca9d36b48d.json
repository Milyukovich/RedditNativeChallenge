{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/artur/elbrus/phase-3/\\u041F\\u0420\\u041E\\u0415\\u041A\\u0422\\u0412\\u0415\\u041A\\u0410/copy 2/RedditNativeChallenge/client/src/components/EditPostForm/EditPostForm.jsx\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { editPost } from \"../../redux/actions/content\";\nimport styles from \"./style\";\nexport default function EditPost(_ref) {\n  var route = _ref.route;\n  var data = route.params.data;\n  var dispatch = useDispatch();\n\n  var _useState = useState(data.title),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputTitle = _useState2[0],\n      setInputTitle = _useState2[1];\n\n  var _useState3 = useState(data.description),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inputDescription = _useState4[0],\n      setInputDescription = _useState4[1];\n\n  var navigation = useNavigation();\n\n  var editPostFunction = function editPostFunction() {\n    if (inputTitle.trim() && inputDescription.trim()) {\n      var post = {\n        _id: data._id,\n        title: inputTitle,\n        description: inputDescription\n      };\n      dispatch(editPost(post));\n      navigation.navigate(\"MainPage\");\n    }\n\n    navigation.navigate(\"MainPage\");\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setInputTitle(text);\n    },\n    style: styles.input,\n    value: inputTitle,\n    placeholder: data.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setInputDescription(text);\n    },\n    multiline: true,\n    style: styles.multilineInput,\n    value: inputDescription,\n    placeholder: data.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: [styles.buttonContainer, styles.updateButton],\n    onPress: function onPress() {\n      return editPostFunction(data._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.updateText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Update\")));\n}","map":{"version":3,"sources":["/home/artur/elbrus/phase-3/ПРОЕКТВЕКА/copy 2/RedditNativeChallenge/client/src/components/EditPostForm/EditPostForm.jsx"],"names":["React","useState","useDispatch","useNavigation","editPost","styles","EditPost","route","data","params","dispatch","title","inputTitle","setInputTitle","description","inputDescription","setInputDescription","navigation","editPostFunction","trim","post","_id","navigate","container","text","input","multilineInput","buttonContainer","updateButton","updateText"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,SAASC,QAAT;AACA,OAAOC,MAAP;AAEA,eAAe,SAASC,QAAT,OAA6B;AAAA,MAATC,KAAS,QAATA,KAAS;AAC1C,MAAQC,IAAR,GAAiBD,KAAK,CAACE,MAAvB,CAAQD,IAAR;AACA,MAAME,QAAQ,GAAGR,WAAW,EAA5B;;AACA,kBAAoCD,QAAQ,CAACO,IAAI,CAACG,KAAN,CAA5C;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAgDZ,QAAQ,CAACO,IAAI,CAACM,WAAN,CAAxD;AAAA;AAAA,MAAOC,gBAAP;AAAA,MAAyBC,mBAAzB;;AACA,MAAMC,UAAU,GAAGd,aAAa,EAAhC;;AAEA,MAAMe,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,QAAIN,UAAU,CAACO,IAAX,MAAqBJ,gBAAgB,CAACI,IAAjB,EAAzB,EAAkD;AAChD,UAAMC,IAAI,GAAG;AACXC,QAAAA,GAAG,EAAEb,IAAI,CAACa,GADC;AAEXV,QAAAA,KAAK,EAAEC,UAFI;AAGXE,QAAAA,WAAW,EAAEC;AAHF,OAAb;AAKAL,MAAAA,QAAQ,CAACN,QAAQ,CAACgB,IAAD,CAAT,CAAR;AACAH,MAAAA,UAAU,CAACK,QAAX,CAAoB,UAApB;AACD;;AACDL,IAAAA,UAAU,CAACK,QAAX,CAAoB,UAApB;AACD,GAXD;;AAaA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjB,MAAM,CAACkB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,aAAIX,aAAa,CAACW,IAAD,CAAjB;AAAA,KADpB;AAEE,IAAA,KAAK,EAAEnB,MAAM,CAACoB,KAFhB;AAGE,IAAA,KAAK,EAAEb,UAHT;AAIE,IAAA,WAAW,EAAEJ,IAAI,CAACG,KAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EASE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,YAAY,EAAE,sBAAAa,IAAI;AAAA,aAAIR,mBAAmB,CAACQ,IAAD,CAAvB;AAAA,KADpB;AAEE,IAAA,SAAS,EAAE,IAFb;AAGE,IAAA,KAAK,EAAEnB,MAAM,CAACqB,cAHhB;AAIE,IAAA,KAAK,EAAEX,gBAJT;AAKE,IAAA,WAAW,EAAEP,IAAI,CAACM,WALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,EAkBE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAE,CAACT,MAAM,CAACsB,eAAR,EAAyBtB,MAAM,CAACuB,YAAhC,CADT;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMV,gBAAgB,CAACV,IAAI,CAACa,GAAN,CAAtB;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,MAAM,CAACwB,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CAlBF,CADF;AA2BD","sourcesContent":["import React, { useState } from \"react\";\nimport { View, Text, TouchableOpacity, TextInput } from \"react-native\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nimport { editPost } from \"../../redux/actions/content\";\nimport styles from \"./style\";\n\nexport default function EditPost({ route }) {\n  const { data } = route.params;\n  const dispatch = useDispatch();\n  const [inputTitle, setInputTitle] = useState(data.title);\n  const [inputDescription, setInputDescription] = useState(data.description);\n  const navigation = useNavigation();\n\n  const editPostFunction = () => {\n    if (inputTitle.trim() && inputDescription.trim()) {\n      const post = {\n        _id: data._id,\n        title: inputTitle,\n        description: inputDescription,\n      };\n      dispatch(editPost(post));\n      navigation.navigate(\"MainPage\");\n    }\n    navigation.navigate(\"MainPage\");\n  };\n\n  return (\n    <View style={styles.container}>\n      <View>\n        <TextInput\n          onChangeText={text => setInputTitle(text)}\n          style={styles.input}\n          value={inputTitle}\n          placeholder={data.title}\n        />\n      </View>\n      <View>\n        <TextInput\n          onChangeText={text => setInputDescription(text)}\n          multiline={true}\n          style={styles.multilineInput}\n          value={inputDescription}\n          placeholder={data.description}\n        ></TextInput>\n      </View>\n      <TouchableOpacity\n        style={[styles.buttonContainer, styles.updateButton]}\n        onPress={() => editPostFunction(data._id)}\n      >\n        <Text style={styles.updateText}>Update</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}