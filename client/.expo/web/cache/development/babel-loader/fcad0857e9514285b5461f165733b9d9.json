{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/user/Documents/elbrus/phase 3/RedditNativeChallenge/client/src/components/Header/Header.jsx\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useNavigation } from \"@react-navigation/native\";\nexport default function Header() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      formValue = _useState2[0],\n      setFormValue = _useState2[1];\n\n  var navigation = useNavigation();\n\n  var loadScene = function loadScene() {\n    navigation.navigate(\"Profile\");\n  };\n\n  var loadSearcjScene = function loadSearcjScene() {\n    navigation.navigate(\"Search\", {\n      data: formValue\n    });\n  };\n\n  var submitForm = function submitForm() {\n    if (formValue.trim()) {\n      loadSearcjScene();\n      setFormValue(\"\");\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: loadScene,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: \"https://cdn.frankerfacez.com/avatar/twitch/80339713\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setFormValue(text);\n    },\n    value: formValue,\n    style: styles.input,\n    autoCorrect: false,\n    autoCapitalize: \"none\",\n    placeholder: \"Write here...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: submitForm,\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Search\"))));\n}\nvar styles = StyleSheet.create({\n  button: {\n    marginHorizontal: 4,\n    backgroundColor: \"#1e293b\",\n    borderWidth: 2,\n    borderRadius: 5,\n    borderStyle: \"solid\",\n    borderColor: \"#e2e8f0\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  text: {\n    color: \"#e2e8f0\",\n    margin: 3,\n    fontSize: 15\n  },\n  container: {\n    height: \"10%\",\n    padding: 5,\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    borderWidth: 2,\n    borderRadius: 3,\n    borderStyle: \"solid\",\n    borderColor: \"#e2e8f0\"\n  },\n  form: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  input: {\n    padding: 7,\n    width: 200,\n    height: 40,\n    borderStyle: \"solid\",\n    borderRadius: 7,\n    borderWidth: 2,\n    borderColor: \"#e2e8f0\",\n    color: \"#e2e8f0\",\n    backgroundColor: \"#1e293b\"\n  },\n  image: {\n    width: 70,\n    height: 70,\n    borderRadius: 45,\n    borderStyle: \"solid\",\n    borderWidth: 2,\n    borderColor: \"#e2e8f0\"\n  },\n  hr: {\n    backgroundColor: \"#e2e8f0\",\n    height: 1.3\n  }\n});","map":{"version":3,"sources":["/Users/user/Documents/elbrus/phase 3/RedditNativeChallenge/client/src/components/Header/Header.jsx"],"names":["React","useState","useNavigation","Header","formValue","setFormValue","navigation","loadScene","navigate","loadSearcjScene","data","submitForm","trim","styles","container","image","uri","form","text","input","button","StyleSheet","create","marginHorizontal","backgroundColor","borderWidth","borderRadius","borderStyle","borderColor","alignItems","justifyContent","color","margin","fontSize","height","padding","flex","flexDirection","width","hr"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  TextInput,\n  Image,\n  TouchableOpacity,\n  Text,\n} from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nexport default function Header() {\n  const [formValue, setFormValue] = useState(\"\");\n\n  const navigation = useNavigation();\n\n  const loadScene = () => {\n    navigation.navigate(\"Profile\");\n  };\n\n  const loadSearcjScene = () => {\n    navigation.navigate(\"Search\", { data: formValue });\n  };\n\n  const submitForm = () => {\n    if (formValue.trim()) {\n      loadSearcjScene();\n      setFormValue(\"\");\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity onPress={loadScene}>\n        <Image\n          style={styles.image}\n          source={{\n            uri: \"https://cdn.frankerfacez.com/avatar/twitch/80339713\",\n          }}\n        />\n      </TouchableOpacity>\n\n      <View style={styles.form}>\n        <TextInput\n          onChangeText={text => setFormValue(text)}\n          value={formValue}\n          style={styles.input}\n          autoCorrect={false}\n          autoCapitalize=\"none\"\n          placeholder=\"Write here...\"\n        ></TextInput>\n\n        <TouchableOpacity onPress={submitForm} style={styles.button}>\n          <Text style={styles.text}>Search</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    marginHorizontal: 4,\n    backgroundColor: \"#1e293b\",\n    borderWidth: 2,\n    borderRadius: 5,\n    borderStyle: \"solid\",\n    borderColor: \"#e2e8f0\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  text: {\n    color: \"#e2e8f0\",\n    margin: 3,\n    fontSize: 15,\n  },\n\n  container: {\n    height: \"10%\",\n    padding: 5,\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    borderWidth: 2,\n    borderRadius: 3,\n    borderStyle: \"solid\",\n    borderColor: \"#e2e8f0\",\n  },\n\n  form: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n\n  input: {\n    padding: 7,\n    width: 200,\n    height: 40,\n    borderStyle: \"solid\",\n    borderRadius: 7,\n    borderWidth: 2,\n    borderColor: \"#e2e8f0\",\n    color: \"#e2e8f0\",\n    backgroundColor: \"#1e293b\",\n  },\n\n  image: {\n    width: 70,\n    height: 70,\n    borderRadius: 45,\n    borderStyle: \"solid\",\n    borderWidth: 2,\n    borderColor: \"#e2e8f0\",\n  },\n  hr: {\n    backgroundColor: \"#e2e8f0\",\n    height: 1.3,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}