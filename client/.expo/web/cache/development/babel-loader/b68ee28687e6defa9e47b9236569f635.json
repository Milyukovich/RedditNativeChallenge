{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/user/Documents/elbrus/phase 3/RedditNativeChallenge/client/src/components/EditPostForm/EditPostForm.jsx\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useDispatch } from \"react-redux\";\nimport { editPost } from \"../../redux/actions/content\";\nimport { useNavigation } from \"@react-navigation/native\";\nexport default function EditPost(_ref) {\n  var route = _ref.route;\n  var data = route.params.data;\n  var dispatch = useDispatch();\n\n  var _useState = useState(data.title),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputTitle = _useState2[0],\n      setInputTitle = _useState2[1];\n\n  var _useState3 = useState(data.description),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inputDescription = _useState4[0],\n      setInputDescription = _useState4[1];\n\n  var navigation = useNavigation();\n\n  var editPostFunction = function editPostFunction(id) {\n    if (inputTitle.trim() && inputDescription.trim()) {\n      var post = {\n        _id: data._id,\n        title: inputTitle,\n        description: inputDescription\n      };\n      dispatch(editPost(post));\n      navigation.navigate(\"MainPage\");\n    }\n\n    navigation.navigate(\"MainPage\");\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setInputTitle(text);\n    },\n    style: styles.input,\n    value: inputTitle,\n    placeholder: data.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setInputDescription(text);\n    },\n    style: styles.multilineInput,\n    value: inputDescription,\n    placeholder: data.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: [styles.buttonContainer, styles.updateButton],\n    onPress: function onPress() {\n      return editPostFunction(data._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.updateText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Update\")));\n}\nvar styles = StyleSheet.create({\n  input: {\n    fontSize: 15,\n    paddingBottom: 7,\n    width: 240,\n    height: 50,\n    borderStyle: \"solid\",\n    borderRadius: 7,\n    borderWidth: 2,\n    borderColor: \"#f9fafb\",\n    color: \"#f9fafb\",\n    backgroundColor: \"#1f2937\"\n  },\n  multilineInput: {\n    fontSize: 15,\n    height: 100,\n    width: 240,\n    margin: 15,\n    color: \"#f9fafb\",\n    borderStyle: \"solid\",\n    borderColor: \"#f9fafb\",\n    borderWidth: 2,\n    borderRadius: 5,\n    backgroundColor: \"#1f2937\"\n  },\n  icons: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  buttonContainer: {\n    height: 45,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 20,\n    width: 300,\n    borderRadius: 30,\n    backgroundColor: \"transparent\"\n  },\n  updateButton: {\n    backgroundColor: \"#00b5ec\",\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 9\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 12.35,\n    elevation: 19\n  },\n  updateText: {\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["/Users/user/Documents/elbrus/phase 3/RedditNativeChallenge/client/src/components/EditPostForm/EditPostForm.jsx"],"names":["React","useState","useDispatch","editPost","useNavigation","EditPost","route","data","params","dispatch","title","inputTitle","setInputTitle","description","inputDescription","setInputDescription","navigation","editPostFunction","id","trim","post","_id","navigate","text","styles","input","multilineInput","buttonContainer","updateButton","updateText","StyleSheet","create","fontSize","paddingBottom","width","height","borderStyle","borderRadius","borderWidth","borderColor","color","backgroundColor","margin","icons","flex","flexDirection","justifyContent","alignItems","marginBottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TouchableOpacity,\n  TextInput,\n} from \"react-native\";\nimport { useDispatch } from \"react-redux\";\nimport { editPost } from \"../../redux/actions/content\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nexport default function EditPost({ route }) {\n  const { data } = route.params;\n  const dispatch = useDispatch();\n  const [inputTitle, setInputTitle] = useState(data.title);\n  const [inputDescription, setInputDescription] = useState(data.description);\n  const navigation = useNavigation();\n\n  const editPostFunction = id => {\n    if (inputTitle.trim() && inputDescription.trim()) {\n      const post = {\n        _id: data._id,\n        title: inputTitle,\n        description: inputDescription,\n      };\n      dispatch(editPost(post));\n      navigation.navigate(\"MainPage\");\n    }\n    navigation.navigate(\"MainPage\");\n  };\n\n  return (\n    <View>\n      <View>\n        <TextInput\n          onChangeText={text => setInputTitle(text)}\n          style={styles.input}\n          value={inputTitle}\n          placeholder={data.title}\n        />\n      </View>\n      <View>\n        <TextInput\n          onChangeText={text => setInputDescription(text)}\n          style={styles.multilineInput}\n          value={inputDescription}\n          placeholder={data.description}\n        ></TextInput>\n      </View>\n      <TouchableOpacity\n        style={[styles.buttonContainer, styles.updateButton]}\n        onPress={() => editPostFunction(data._id)}\n      >\n        <Text style={styles.updateText}>Update</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  input: {\n    fontSize: 15,\n    paddingBottom: 7,\n    width: 240,\n    height: 50,\n    borderStyle: \"solid\",\n    borderRadius: 7,\n    borderWidth: 2,\n    borderColor: \"#f9fafb\",\n    color: \"#f9fafb\",\n    backgroundColor: \"#1f2937\",\n  },\n\n  multilineInput: {\n    fontSize: 15,\n    height: 100,\n    width: 240,\n    margin: 15,\n    color: \"#f9fafb\",\n    borderStyle: \"solid\",\n    borderColor: \"#f9fafb\",\n    borderWidth: 2,\n    borderRadius: 5,\n    backgroundColor: \"#1f2937\",\n  },\n\n  icons: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n  buttonContainer: {\n    height: 45,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 20,\n    width: 300,\n    borderRadius: 30,\n    backgroundColor: \"transparent\",\n  },\n  updateButton: {\n    backgroundColor: \"#00b5ec\",\n\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 9,\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 12.35,\n\n    elevation: 19,\n  },\n  updateText: {\n    color: \"white\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}