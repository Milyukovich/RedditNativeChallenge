{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/user/Documents/elbrus/phase 3/RedditNativeChallenge/client/src/components/OnePostPage/OnePostPage.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Card, Button, Input } from \"react-native-elements\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addLike, addDislike, addLikeComment, addDislikeComment } from \"../../redux/actions/content\";\nimport { createComMain, createComToCom } from \"../../redux/actions/comments\";\nimport AddCommentMenu from \"../AddCommentMenu/AddCommentMenu.jsx\";\nimport AddReplyMenu from \"../AddReplyMenu/AddReplyMenu\";\nexport default function Post(_ref) {\n  var _this = this;\n\n  var route = _ref.route;\n  var dispatch = useDispatch();\n  var navigation = useNavigation();\n\n  var _useState = useState({\n    status: true,\n    commentId: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputState = _useState2[0],\n      SetInputState = _useState2[1];\n\n  var mainId = route.params.el._id;\n  var posts = useSelector(function (state) {\n    return state.content.content;\n  });\n  var mainPost = posts.filter(function (post) {\n    return post._id == mainId;\n  })[0];\n  var comments = mainPost.comments;\n  var likes = mainPost.likes;\n  var userId = useSelector(function (state) {\n    return state.user.userInfo.id;\n  });\n\n  var _useState3 = useState(route.params.el.likes.includes(userId)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      likeColor = _useState4[0],\n      setLikeColor = _useState4[1];\n\n  var _useState5 = useState(route.params.el.dislikes.includes(userId)),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dislikeColor = _useState6[0],\n      setDislikeColor = _useState6[1];\n\n  var likeComment = function likeComment(userId, commentId) {\n    dispatch(addLikeComment(userId, commentId));\n  };\n\n  var dislikeComment = function dislikeComment(userId, commentId) {\n    dispatch(addDislikeComment(userId, commentId));\n  };\n\n  var like = function like(userId, postId) {\n    dispatch(addLike(userId, postId));\n  };\n\n  var dislike = function dislike(userId, postId) {\n    dispatch(addDislike(userId, postId));\n  };\n\n  useEffect(function () {\n    setDislikeColor(mainPost.dislikes.includes(userId));\n    setLikeColor(mainPost.likes.includes(userId));\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, React.createElement(Card, {\n    containerStyle: styles.div,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: justifyContent\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, React.createElement(Card.Title, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, mainPost.title), React.createElement(Image, {\n    source: {\n      uri: mainPost.uri\n    },\n    style: {\n      width: 200,\n      height: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  })), React.createElement(Card.Divider, {\n    style: styles.hr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), React.createElement(Card.Title, {\n    style: styles.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, mainPost.description), mainPost.content ? React.createElement(Card.Image, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, mainPost.content)) : React.createElement(React.Fragment, null), React.createElement(View, {\n    style: styles.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon.Button, {\n    color: likeColor ? \"#61dafb\" : \"#f9fafb\",\n    name: \"thumbs-up\",\n    backgroundColor: \"#1f2937\",\n    onPress: function onPress() {\n      like(userId, mainPost._id);\n      setLikeColor(function (prev) {\n        if (dislikeColor) setDislikeColor(function (prevD) {\n          return !prevD;\n        });\n        return !prev;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, mainPost.likes.length)), React.createElement(Icon.Button, {\n    color: dislikeColor ? \"#61dafb\" : \"#f9fafb\",\n    name: \"thumbs-down\",\n    backgroundColor: \"#1f2937\",\n    onPress: function onPress() {\n      dislike(userId, mainPost._id);\n      setDislikeColor(function (prev) {\n        if (likeColor) setLikeColor(function (prevL) {\n          return !prevL;\n        });\n        return !prev;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, mainPost.dislikes.length))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.navigate(\"DetailPage\", {\n        el: mainPost.author\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, \"Created by: \", mainPost.author.userName)), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, mainPost.date)), comments.length ? React.createElement(React.Fragment, null, React.createElement(FlatList, {\n    data: comments,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, {\n        style: styles.mainDiv,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.mainComment,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.titleComm,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }\n      }, item.text), React.createElement(Card.Divider, {\n        style: styles.hrCom,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: styles.icons,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }\n      }, React.createElement(Icon.Button, {\n        size: 15,\n        name: \"thumbs-up\",\n        color: \"#f9fafb\",\n        backgroundColor: \"#1f2937\",\n        onPress: function onPress() {\n          return likeComment(userId, item._id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }\n      }, item.likes.length)), React.createElement(Icon.Button, {\n        size: 15,\n        name: \"thumbs-down\",\n        color: \"#f9fafb\",\n        backgroundColor: \"#1f2937\",\n        onPress: function onPress() {\n          return dislikeComment(userId, item._id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }\n      }, item.dislikes.length)), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return SetInputState({\n            status: !inputState,\n            commentId: item._id\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: styles.textAnswer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }\n      }, \"Answer\"))), React.createElement(Text, {\n        style: styles.text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }\n      }, \"Created by: \", item.creator.userName), React.createElement(Text, {\n        style: styles.text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }\n      }, \"Created at: \", item.date)), React.createElement(FlatList, {\n        data: item.comments,\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item;\n          return React.createElement(View, {\n            style: styles.comOnComContainer,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 23\n            }\n          }, React.createElement(Text, {\n            style: styles.titleComm,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 25\n            }\n          }, item.text), React.createElement(Card.Divider, {\n            style: styles.hrCom,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 25\n            }\n          }), React.createElement(View, {\n            style: styles.icons,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 25\n            }\n          }, React.createElement(Icon.Button, {\n            size: 15,\n            name: \"thumbs-up\",\n            color: \"#f9fafb\",\n            backgroundColor: \"#1f2937\",\n            onPress: function onPress() {\n              return likeComment(userId, item._id);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 27\n            }\n          }, React.createElement(Text, {\n            style: styles.text,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }\n          }, item.likes.length)), React.createElement(Icon.Button, {\n            size: 15,\n            name: \"thumbs-down\",\n            color: \"#f9fafb\",\n            backgroundColor: \"#1f2937\",\n            onPress: function onPress() {\n              return dislikeComment(userId, item._id);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 27\n            }\n          }, React.createElement(Text, {\n            style: styles.text,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }\n          }, item.dislikes.length)), React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              return SetInputState({\n                status: !inputState,\n                commentId: item._id\n              });\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 27\n            }\n          }, React.createElement(Text, {\n            style: styles.textAnswer,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }\n          }, \"Answer\"))), React.createElement(View, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: styles.text,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 27\n            }\n          }, \"Created by: \", item.creatorLogin), React.createElement(Text, {\n            style: styles.text,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 27\n            }\n          }, \"Created at: \", item.date)));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 19\n        }\n      }));\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  })) : React.createElement(React.Fragment, null), console.log(767676, inputState), inputState.status ? React.createElement(AddCommentMenu, {\n    userId: userId,\n    postId: mainPost._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  }) : React.createElement(AddReplyMenu, {\n    userId: userId,\n    postId: mainPost._id,\n    fathercomment: inputState.commentId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 11\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  mainComment: {\n    width: 300,\n    flexDirection: \"column\",\n    borderTopWidth: 2,\n    borderBottomWidth: 2,\n    borderRadius: 5,\n    borderStyle: \"solid\",\n    borderColor: \"#f9fafb\",\n    backgroundColor: \"#1f2937\"\n  },\n  comOnComContainer: {\n    width: 250,\n    flexDirection: \"column\",\n    borderTopWidth: 2,\n    borderBottomWidth: 2,\n    borderRadius: 5,\n    borderStyle: \"solid\",\n    borderColor: \"#f9fafb\",\n    backgroundColor: \"#1f2937\"\n  },\n  mainDiv: {\n    margin: 10,\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  div: {\n    width: 400,\n    flexDirection: \"column\",\n    borderWidth: 2,\n    borderRadius: 5,\n    borderStyle: \"solid\",\n    borderColor: \"#f9fafb\",\n    backgroundColor: \"#1f2937\",\n    justifyContent: \"center\",\n    alignContent: \"center\"\n  },\n  container: {\n    flex: 1,\n    paddingTop: 20,\n    alignItems: \"center\",\n    fontSize: 13,\n    backgroundColor: \"#111827\",\n    height: 200\n  },\n  hr: {\n    backgroundColor: \"#61dafb\",\n    height: 1.3\n  },\n  hrCom: {\n    backgroundColor: \"#61dafb\",\n    height: 0.5\n  },\n  title: {\n    fontSize: 25,\n    color: \"#f9fafb\"\n  },\n  description: {\n    color: \"#f9fafb\",\n    fontSize: 20\n  },\n  text: {\n    color: \"#f9fafb\"\n  },\n  textAnswer: {\n    marginTop: 8,\n    color: \"#f9fafb\"\n  },\n  titleComm: {\n    marginBottom: 5,\n    fontSize: 20,\n    color: \"#f9fafb\"\n  },\n  icons: {\n    marginBottom: 5,\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    backgroundColor: \"f9fafb\"\n  },\n  content: {\n    height: 200,\n    borderWidth: 4,\n    borderColor: \"white\",\n    marginBottom: 10\n  }\n});","map":{"version":3,"sources":["/Users/user/Documents/elbrus/phase 3/RedditNativeChallenge/client/src/components/OnePostPage/OnePostPage.js"],"names":["React","useContext","useEffect","useState","useNavigation","Card","Button","Input","Icon","useDispatch","useSelector","addLike","addDislike","addLikeComment","addDislikeComment","createComMain","createComToCom","AddCommentMenu","AddReplyMenu","Post","route","dispatch","navigation","status","commentId","inputState","SetInputState","mainId","params","el","_id","posts","state","content","mainPost","filter","post","comments","likes","userId","user","userInfo","id","includes","likeColor","setLikeColor","dislikes","dislikeColor","setDislikeColor","likeComment","dislikeComment","like","postId","dislike","styles","container","div","flex","justifyContent","title","uri","width","height","hr","description","icons","prev","prevD","text","length","prevL","navigate","author","userName","date","item","mainDiv","mainComment","titleComm","hrCom","textAnswer","creator","comOnComContainer","creatorLogin","console","log","StyleSheet","create","flexDirection","borderTopWidth","borderBottomWidth","borderRadius","borderStyle","borderColor","backgroundColor","margin","alignItems","borderWidth","alignContent","paddingTop","fontSize","color","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Card, Button, Input } from \"react-native-elements\";\n\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  FlatList,\n  TouchableOpacity,\n  Image,\n} from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  addLike,\n  addDislike,\n  addLikeComment,\n  addDislikeComment,\n} from \"../../redux/actions/content\";\n\nimport { createComMain, createComToCom } from \"../../redux/actions/comments\";\nimport AddCommentMenu from \"../AddCommentMenu/AddCommentMenu.jsx\";\nimport AddReplyMenu from \"../AddReplyMenu/AddReplyMenu\";\n\nexport default function Post({ route }) {\n  const dispatch = useDispatch();\n  const navigation = useNavigation();\n\n  const [inputState, SetInputState] = useState({\n    status: true,\n    commentId: null,\n  });\n\n  const mainId = route.params.el._id;\n\n  const posts = useSelector(state => state.content.content);\n  const mainPost = posts.filter(post => post._id == mainId)[0];\n  const comments = mainPost.comments;\n\n  const likes = mainPost.likes;\n  const userId = useSelector(state => state.user.userInfo.id);\n\n  const [likeColor, setLikeColor] = useState(\n    route.params.el.likes.includes(userId)\n  );\n  const [dislikeColor, setDislikeColor] = useState(\n    route.params.el.dislikes.includes(userId)\n  );\n\n  const likeComment = (userId, commentId) => {\n    dispatch(addLikeComment(userId, commentId));\n  };\n  const dislikeComment = (userId, commentId) => {\n    dispatch(addDislikeComment(userId, commentId));\n  };\n\n  const like = (userId, postId) => {\n    dispatch(addLike(userId, postId));\n  };\n  const dislike = (userId, postId) => {\n    dispatch(addDislike(userId, postId));\n  };\n\n  useEffect(() => {\n    setDislikeColor(mainPost.dislikes.includes(userId));\n    setLikeColor(mainPost.likes.includes(userId));\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <Card containerStyle={styles.div}>\n        <View style={{ flex: 1, justifyContent }}>\n          <Card.Title style={styles.title}>{mainPost.title}</Card.Title>\n          <Image\n            source={{ uri: mainPost.uri }}\n            style={{ width: 200, height: 200 }}\n          />\n        </View>\n        <Card.Divider style={styles.hr} />\n        <Card.Title style={styles.description}>\n          {mainPost.description}\n        </Card.Title>\n\n        {mainPost.content ? (\n          <Card.Image>\n            <Text>{mainPost.content}</Text>\n          </Card.Image>\n        ) : (\n          <></>\n        )}\n\n        {/* //   {mainPost.content ? (\n      //   <Image source={{ uri: mainPost.content }} style={{ height: 200 }} />\n      // ) : (\n      //   <></>\n      // )} */}\n\n        <View style={styles.icons}>\n          <Icon.Button\n            color={likeColor ? \"#61dafb\" : \"#f9fafb\"}\n            name=\"thumbs-up\"\n            backgroundColor=\"#1f2937\"\n            onPress={() => {\n              like(userId, mainPost._id);\n              setLikeColor(prev => {\n                if (dislikeColor) setDislikeColor(prevD => !prevD);\n                return !prev;\n              });\n            }}\n          >\n            <Text style={styles.text}>{mainPost.likes.length}</Text>\n          </Icon.Button>\n          <Icon.Button\n            color={dislikeColor ? \"#61dafb\" : \"#f9fafb\"}\n            name=\"thumbs-down\"\n            backgroundColor=\"#1f2937\"\n            onPress={() => {\n              dislike(userId, mainPost._id);\n              setDislikeColor(prev => {\n                if (likeColor) setLikeColor(prevL => !prevL);\n                return !prev;\n              });\n            }}\n          >\n            <Text style={styles.text}>{mainPost.dislikes.length}</Text>\n          </Icon.Button>\n        </View>\n        <TouchableOpacity\n          onPress={() => {\n            navigation.navigate(\"DetailPage\", {\n              el: mainPost.author,\n            });\n          }}\n        >\n          <Text style={styles.text}>\n            Created by: {mainPost.author.userName}\n          </Text>\n        </TouchableOpacity>\n        <Text style={styles.text}>{mainPost.date}</Text>\n      </Card>\n\n      {/* <Text style={{ alignItems: \"center\", justifyContent: \"center\" }}>\n        tuta\n      </Text> */}\n      {\n        comments.length ? (\n          <>\n            <FlatList\n              data={comments}\n              renderItem={({ item }) => (\n                <View style={styles.mainDiv}>\n                  <View style={styles.mainComment}>\n                    <Text style={styles.titleComm}>{item.text}</Text>\n                    <Card.Divider style={styles.hrCom} />\n                    <View style={styles.icons}>\n                      <Icon.Button\n                        size={15}\n                        name=\"thumbs-up\"\n                        color={\"#f9fafb\"}\n                        backgroundColor=\"#1f2937\"\n                        onPress={() => likeComment(userId, item._id)}\n                      >\n                        <Text style={styles.text}>{item.likes.length}</Text>\n                      </Icon.Button>\n\n                      <Icon.Button\n                        size={15}\n                        name=\"thumbs-down\"\n                        color={\"#f9fafb\"}\n                        backgroundColor=\"#1f2937\"\n                        onPress={() => dislikeComment(userId, item._id)}\n                      >\n                        <Text style={styles.text}>{item.dislikes.length}</Text>\n                      </Icon.Button>\n\n                      <TouchableOpacity\n                        onPress={() =>\n                          SetInputState({\n                            status: !inputState,\n                            commentId: item._id,\n                          })\n                        }\n                      >\n                        <Text style={styles.textAnswer}>Answer</Text>\n                      </TouchableOpacity>\n                    </View>\n\n                    <Text style={styles.text}>\n                      Created by: {item.creator.userName}\n                    </Text>\n                    <Text style={styles.text}>Created at: {item.date}</Text>\n                  </View>\n\n                  <FlatList\n                    data={item.comments}\n                    renderItem={({ item }) => (\n                      <View style={styles.comOnComContainer}>\n                        <Text style={styles.titleComm}>{item.text}</Text>\n                        <Card.Divider style={styles.hrCom} />\n\n                        <View style={styles.icons}>\n                          <Icon.Button\n                            size={15}\n                            name=\"thumbs-up\"\n                            color={\"#f9fafb\"}\n                            backgroundColor=\"#1f2937\"\n                            onPress={() => likeComment(userId, item._id)}\n                          >\n                            <Text style={styles.text}>{item.likes.length}</Text>\n                          </Icon.Button>\n                          <Icon.Button\n                            size={15}\n                            name=\"thumbs-down\"\n                            color={\"#f9fafb\"}\n                            backgroundColor=\"#1f2937\"\n                            onPress={() => dislikeComment(userId, item._id)}\n                          >\n                            <Text style={styles.text}>\n                              {item.dislikes.length}\n                            </Text>\n                          </Icon.Button>\n                          <TouchableOpacity\n                            onPress={() =>\n                              SetInputState({\n                                status: !inputState,\n                                commentId: item._id,\n                              })\n                            }\n                          >\n                            <Text style={styles.textAnswer}>\n                              Answer\n                            </Text>\n                          </TouchableOpacity>\n                        </View>\n\n                        <View>\n                          <Text style={styles.text}>\n                            Created by: {item.creatorLogin}\n                          </Text>\n\n                          <Text style={styles.text}>Created at: {item.date}</Text>\n                        </View>\n\n                      </View>\n                    )}\n                  />\n                </View>\n              )}\n              keyExtractor={item => item.id}\n            />\n\n            {/* <Input\n            value={comment}\n            onChangeText={text => setComment(text)}\n            placeholder=\"Текст комментария\"\n            />\n            <Button\n            onPress={() => {\n              createComment();\n            }}\n            title=\"Отправить комментарий\"\n          /> */}\n          </>\n        ) : (\n          <></>\n        )\n      }\n      {console.log(767676, inputState)}\n      {\n        inputState.status ? (\n          <AddCommentMenu userId={userId} postId={mainPost._id} />\n        ) : (\n          <AddReplyMenu\n            userId={userId}\n            postId={mainPost._id}\n            fathercomment={inputState.commentId}\n          />\n        )\n      }\n    </View >\n  );\n}\n\nconst styles = StyleSheet.create({\n  mainComment: {\n    width: 300,\n    flexDirection: \"column\",\n    borderTopWidth: 2,\n    borderBottomWidth: 2,\n    borderRadius: 5,\n    borderStyle: \"solid\",\n    borderColor: \"#f9fafb\",\n    backgroundColor: \"#1f2937\",\n  },\n\n  comOnComContainer: {\n    width: 250,\n    flexDirection: \"column\",\n    borderTopWidth: 2,\n    borderBottomWidth: 2,\n    borderRadius: 5,\n    borderStyle: \"solid\",\n    borderColor: \"#f9fafb\",\n    backgroundColor: \"#1f2937\",\n  },\n\n  mainDiv: {\n    margin: 10,\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  //post container\n  div: {\n    width: 400,\n    flexDirection: \"column\",\n    borderWidth: 2,\n    borderRadius: 5,\n    borderStyle: \"solid\",\n    borderColor: \"#f9fafb\",\n    backgroundColor: \"#1f2937\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n  },\n  // all data\n  container: {\n    flex: 1,\n    paddingTop: 20,\n    alignItems: \"center\",\n    fontSize: 13,\n    backgroundColor: \"#111827\",\n    height: 200,\n  },\n\n  hr: {\n    backgroundColor: \"#61dafb\",\n    height: 1.3,\n  },\n\n  hrCom: {\n    backgroundColor: \"#61dafb\",\n    height: 0.5,\n  },\n\n  title: {\n    fontSize: 25,\n    color: \"#f9fafb\",\n  },\n\n  description: {\n    color: \"#f9fafb\",\n    fontSize: 20,\n  },\n\n  text: {\n    color: \"#f9fafb\",\n  },\n\n  textAnswer: {\n    marginTop: 8,\n    color: \"#f9fafb\",\n  },\n\n  titleComm: {\n    marginBottom: 5,\n    fontSize: 20,\n    color: \"#f9fafb\",\n  },\n\n  icons: {\n    marginBottom: 5,\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    backgroundColor: \"f9fafb\",\n  },\n  content: {\n    // width: 270,\n    height: 200,\n    // borderRadius: 63,\n    borderWidth: 4,\n    borderColor: \"white\",\n    marginBottom: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}