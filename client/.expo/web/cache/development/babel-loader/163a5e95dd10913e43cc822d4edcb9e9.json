{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/user/Documents/elbrus/phase 3/RedditNativeChallenge/client/src/components/AddReplyMenu/AddReplyMenu.jsx\";\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Card, Button, Text } from \"react-native-elements\";\nimport Header from \"../Header/Header\";\nimport LowerMenu from \"../LowerMenu/LowerMenu\";\nimport PostList from \"../PostList/PostList\";\nimport { addLike, addDislike, getContent, createComMain, createComToCom } from \"../../redux/actions/content\";\nimport styles from \"./style\";\n\nvar AddReplyMenu = function AddReplyMenu(_ref) {\n  var userId = _ref.userId,\n      postId = _ref.postId,\n      fathercomment = _ref.fathercomment;\n  var dispatch = useDispatch();\n  console.log(\"BATYANAFRoNTE\", fathercomment);\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      commentToComment = _useState2[0],\n      setCommentToComment = _useState2[1];\n\n  var createCommentToComment = function createCommentToComment() {\n    if (commentToComment.trim().length > 5) {\n      var comment = {\n        text: commentToComment,\n        autorId: userId,\n        postId: postId,\n        fathercomment: fathercomment\n      };\n      console.log(\"COMMENT FRONT\", commentToComment);\n      dispatch(createComToCom(comment));\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.footer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      color: \"#f9fafb\",\n      width: 300,\n      height: 50,\n      marginTop: 8\n    },\n    value: commentToComment,\n    onChangeText: function onChangeText(text) {\n      return setCommentToComment(text);\n    },\n    placeholder: \"Answer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      createCommentToComment();\n    },\n    title: \"Sub\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Add\"))));\n};\n\nexport default AddReplyMenu;","map":{"version":3,"sources":["/Users/user/Documents/elbrus/phase 3/RedditNativeChallenge/client/src/components/AddReplyMenu/AddReplyMenu.jsx"],"names":["React","useState","useDispatch","useSelector","Card","Button","Text","Header","LowerMenu","PostList","addLike","addDislike","getContent","createComMain","createComToCom","styles","AddReplyMenu","userId","postId","fathercomment","dispatch","console","log","commentToComment","setCommentToComment","createCommentToComment","trim","length","comment","text","autorId","footer","centeredView","color","width","height","marginTop"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,QAAmC,uBAAnC;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,OAAOC,QAAP;AACA,SACEC,OADF,EAEEC,UAFF,EAGEC,UAHF,EAIEC,aAJF,EAKEC,cALF;AAQA,OAAOC,MAAP;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAuC;AAAA,MAApCC,MAAoC,QAApCA,MAAoC;AAAA,MAA5BC,MAA4B,QAA5BA,MAA4B;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;AAC1D,MAAMC,QAAQ,GAAGlB,WAAW,EAA5B;AACAmB,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,aAA7B;;AACA,kBAAgDlB,QAAQ,EAAxD;AAAA;AAAA,MAAOsB,gBAAP;AAAA,MAAyBC,mBAAzB;;AAEA,MAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACnC,QAAIF,gBAAgB,CAACG,IAAjB,GAAwBC,MAAxB,GAAiC,CAArC,EAAwC;AACtC,UAAMC,OAAO,GAAG;AACdC,QAAAA,IAAI,EAAEN,gBADQ;AAEdO,QAAAA,OAAO,EAAEb,MAFK;AAGdC,QAAAA,MAAM,EAANA,MAHc;AAIdC,QAAAA,aAAa,EAAbA;AAJc,OAAhB;AAMAE,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BC,gBAA7B;AACAH,MAAAA,QAAQ,CAACN,cAAc,CAACc,OAAD,CAAf,CAAR;AACD;AACF,GAXD;;AAaA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAACgB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,MAAM,CAACiB,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,KAAK,EAAE,GAA3B;AAAgCC,MAAAA,MAAM,EAAE,EAAxC;AAA4CC,MAAAA,SAAS,EAAE;AAAvD,KADT;AAEE,IAAA,KAAK,EAAEb,gBAFT;AAGE,IAAA,YAAY,EAAE,sBAAAM,IAAI;AAAA,aAAIL,mBAAmB,CAACK,IAAD,CAAvB;AAAA,KAHpB;AAIE,IAAA,WAAW,EAAC,QAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACbJ,MAAAA,sBAAsB;AACvB,KAHH;AAIE,IAAA,KAAK,EAAC,KAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACc,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANF,CAPF,CADF,CADF;AAoBD,CAtCD;;AAwCA,eAAeb,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { View, TextInput, TouchableOpacity } from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Card, Button, Text } from \"react-native-elements\";\nimport Header from \"../Header/Header\";\nimport LowerMenu from \"../LowerMenu/LowerMenu\";\nimport PostList from \"../PostList/PostList\";\nimport {\n  addLike,\n  addDislike,\n  getContent,\n  createComMain,\n  createComToCom,\n} from \"../../redux/actions/content\";\n\nimport styles from \"./style\";\n\nconst AddReplyMenu = ({ userId, postId, fathercomment }) => {\n  const dispatch = useDispatch();\n  console.log(\"BATYANAFRoNTE\", fathercomment);\n  const [commentToComment, setCommentToComment] = useState();\n\n  const createCommentToComment = () => {\n    if (commentToComment.trim().length > 5) {\n      const comment = {\n        text: commentToComment,\n        autorId: userId,\n        postId,\n        fathercomment,\n      };\n      console.log(\"COMMENT FRONT\", commentToComment);\n      dispatch(createComToCom(comment));\n    }\n  };\n\n  return (\n    <View style={styles.footer}>\n      <View style={styles.centeredView}>\n        <TextInput\n          style={{ color: \"#f9fafb\", width: 300, height: 50, marginTop: 8,  }}\n          value={commentToComment}\n          onChangeText={text => setCommentToComment(text)}\n          placeholder=\"Answer\"\n        ></TextInput>\n        <TouchableOpacity\n          onPress={() => {\n            createCommentToComment();\n          }}\n          title=\"Sub\"\n        >\n          <Text style={styles.text}>Add</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nexport default AddReplyMenu;\n"]},"metadata":{},"sourceType":"module"}