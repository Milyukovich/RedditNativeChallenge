{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport apiService from \"../../api/apiService\";\nimport { PROFILE_EDIT } from \"../types/userTypes\";\n\nvar editUserProfile = function editUserProfile(payload) {\n  return {\n    type: PROFILE_EDIT,\n    payload: payload\n  };\n};\n\nexport var editProfile = function editProfile(user) {\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            apiService.patch(\"profile/edit\", {\n              user: user\n            }).then(function (_ref) {\n              var data = _ref.data;\n              return dispatch(editUserProfile(da));\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["/Users/user/elbrus/PHASE 3/RedditNativeChallenge/client/src/redux/actions/editProfile.js"],"names":["apiService","PROFILE_EDIT","editUserProfile","payload","type","editProfile","user","dispatch","patch","then","data","da"],"mappings":";AAAA,OAAOA,UAAP;AACA,SAASC,YAAT;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,OAAO;AAAA,SAAK;AAACC,IAAAA,IAAI,EAAEH,YAAP;AAAqBE,IAAAA,OAAO,EAAPA;AAArB,GAAL;AAAA,CAA/B;;AAEA,OAAO,IAAME,WAAW,GAAG,SAAdA,WAAc,CAAAC,IAAI;AAAA,SAAI,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAC/BP,YAAAA,UAAU,CACTQ,KADD,CACO,cADP,EACuB;AAACF,cAAAA,IAAI,EAAJA;AAAD,aADvB,EAECG,IAFD,CAEM;AAAA,kBAAEC,IAAF,QAAEA,IAAF;AAAA,qBAAYH,QAAQ,CAACL,eAAe,CAACS,EAAD,CAAhB,CAApB;AAAA,aAFN;;AAD+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAJ;AAAA,CAAxB","sourcesContent":["import apiService from \"../../api/apiService\";\nimport { PROFILE_EDIT } from \"../types/userTypes\";\n\nconst editUserProfile = payload => ({type: PROFILE_EDIT, payload})\n\nexport const editProfile = user => async dispatch => {\n    apiService\n    .patch(\"profile/edit\", {user})\n    .then(({data}) => dispatch(editUserProfile(da)))\n    // method: \"PATCH\",\n    // headers: {\n    //   \"Content-Type\": \"application/json\",\n    // },\n    // body: JSON.stringify({ user }),\n\n  // const res = await response.json();\n  // return dispatch({\n  //   type: PROFILE_EDIT,\n  //   payload: res,\n  // });\n};\n"]},"metadata":{},"sourceType":"module"}