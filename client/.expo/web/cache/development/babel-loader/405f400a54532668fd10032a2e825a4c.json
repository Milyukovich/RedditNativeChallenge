{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/user/elbrus/PHASE 3/RedditNativeChallenge/client/src/components/Header/Header.jsx\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useNavigation } from \"@react-navigation/native\";\nexport default function Header() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      formValue = _useState2[0],\n      setFormValue = _useState2[1];\n\n  var navigation = useNavigation();\n\n  var loadScene = function loadScene() {\n    navigation.navigate(\"Profile\");\n  };\n\n  var submitForm = function submitForm() {\n    if (formValue.trim()) {\n      setFormValue(\"\");\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: item.image\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setFormValue(text);\n    },\n    value: formValue,\n    style: styles.input,\n    autoCorrect: false,\n    autoCapitalize: \"none\",\n    placeholder: \"Write here...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: submitForm,\n    title: \"Search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  form: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginBottom: 30\n  },\n  input: {\n    padding: 7,\n    width: 200,\n    borderStyle: \"solid\",\n    borderRadius: 7,\n    borderWidth: 2,\n    borderColor: \"#3949ab\"\n  }\n});","map":{"version":3,"sources":["/Users/user/elbrus/PHASE 3/RedditNativeChallenge/client/src/components/Header/Header.jsx"],"names":["React","useState","useNavigation","Header","formValue","setFormValue","navigation","loadScene","navigate","submitForm","trim","styles","form","image","uri","item","text","input","StyleSheet","create","flexDirection","justifyContent","marginBottom","padding","width","borderStyle","borderRadius","borderWidth","borderColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC/B,kBAAkCF,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOG,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,MAAMC,UAAU,GAAGJ,aAAa,EAAhC;;AAEA,MAAMK,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBD,IAAAA,UAAU,CAACE,QAAX,CAAoB,SAApB;AACD,GAFD;;AAIA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAEvB,QAAIL,SAAS,CAACM,IAAV,EAAJ,EAAsB;AACpBL,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;AACF,GALD;;AAOA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEM,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAED,MAAM,CAACE,KAArB;AAA4B,IAAA,MAAM,EAAE;AAACC,MAAAA,GAAG,EAAEC,IAAI,CAACF;AAAX,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAIE,oBAAC,SAAD;AACE,IAAA,YAAY,EAAE,sBAAAG,IAAI;AAAA,aAAIX,YAAY,CAACW,IAAD,CAAhB;AAAA,KADpB;AAEE,IAAA,KAAK,EAAEZ,SAFT;AAGE,IAAA,KAAK,EAAEO,MAAM,CAACM,KAHhB;AAIE,IAAA,WAAW,EAAE,KAJf;AAKE,IAAA,cAAc,EAAC,MALjB;AAME,IAAA,WAAW,EAAC,eANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAaE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAER,UAAjB;AAA6B,IAAA,KAAK,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF;AAiBD;AAED,IAAME,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,IAAI,EAAE;AACJQ,IAAAA,aAAa,EAAE,KADX;AAEJC,IAAAA,cAAc,EAAE,cAFZ;AAGJC,IAAAA,YAAY,EAAE;AAHV,GADyB;AAO/BL,EAAAA,KAAK,EAAE;AACLM,IAAAA,OAAO,EAAE,CADJ;AAELC,IAAAA,KAAK,EAAE,GAFF;AAGLC,IAAAA,WAAW,EAAE,OAHR;AAILC,IAAAA,YAAY,EAAE,CAJT;AAKLC,IAAAA,WAAW,EAAE,CALR;AAMLC,IAAAA,WAAW,EAAE;AANR;AAPwB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, View, TextInput, Button } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nexport default function Header() {\n  const [formValue, setFormValue] = useState(\"\");\n\n  const navigation = useNavigation();\n\n  const loadScene = () => {\n    navigation.navigate(\"Profile\");\n  };\n\n  const submitForm = () => {\n    // formValue - это то шо нужно отправлять на поиск\n    if (formValue.trim()) {\n      setFormValue(\"\");\n    }\n  };\n\n  return (\n    <View style={styles.form}>\n      {/* <Button title=\"Profile\" onPress={loadScene} /> */}\n      <Image style={styles.image} source={{uri: item.image}}/>\n\n      <TextInput\n        onChangeText={text => setFormValue(text)}\n        value={formValue}\n        style={styles.input}\n        autoCorrect={false}\n        autoCapitalize=\"none\"\n        placeholder=\"Write here...\"\n      ></TextInput>\n\n      <Button onPress={submitForm} title=\"Search\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  form: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginBottom: 30,\n  },\n\n  input: {\n    padding: 7,\n    width: 200,\n    borderStyle: \"solid\",\n    borderRadius: 7,\n    borderWidth: 2,\n    borderColor: \"#3949ab\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}