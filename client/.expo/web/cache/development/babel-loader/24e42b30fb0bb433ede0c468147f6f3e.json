{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/roman/elbruss/phase 3/finalproject/RedditNativeChallenge/client/src/components/Multer/Multer.js\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ImagePicker from \"react-native-image-picker\";\nimport { launchImageLibrary } from \"react-native-image-picker\";\nvar SERVER_URL = \"http://localhost:3000\";\n\nvar createFormData = function createFormData(photo) {\n  var body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var data = new FormData();\n  data.append(\"photo\", {\n    name: photo.fileName,\n    type: photo.type,\n    uri: Platform.OS === \"ios\" ? photo.uri.replace(\"file://\", \"\") : photo.uri\n  });\n  Object.keys(body).forEach(function (key) {\n    data.append(key, body[key]);\n  });\n  return data;\n};\n\nvar Multer = function Multer() {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      photo = _React$useState2[0],\n      setPhoto = _React$useState2[1];\n\n  var handleChoosePhoto = function handleChoosePhoto() {\n    ImagePicker.launchImageLibrary({\n      noData: true\n    }, function (response) {\n      if (response) {\n        setPhoto(response);\n      }\n    });\n  };\n\n  var handleUploadPhoto = function handleUploadPhoto() {\n    fetch(SERVER_URL + \"/api/upload\", {\n      method: \"POST\",\n      body: createFormData(photo, {\n        userId: \"123\"\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      console.log(\"response\", response);\n    }).catch(function (error) {\n      console.log(\"error\", error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, photo && React.createElement(React.Fragment, null, React.createElement(Image, {\n    source: {\n      uri: photo.uri\n    },\n    style: {\n      width: 300,\n      height: 300\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    title: \"Upload Photo\",\n    onPress: handleUploadPhoto,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), React.createElement(Button, {\n    title: \"Choose Photo\",\n    onPress: handleChoosePhoto,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Multer;","map":{"version":3,"sources":["/home/roman/elbruss/phase 3/finalproject/RedditNativeChallenge/client/src/components/Multer/Multer.js"],"names":["React","ImagePicker","launchImageLibrary","SERVER_URL","createFormData","photo","body","data","FormData","append","name","fileName","type","uri","Platform","OS","replace","Object","keys","forEach","key","Multer","useState","setPhoto","handleChoosePhoto","noData","response","handleUploadPhoto","fetch","method","userId","then","json","console","log","catch","error","flex","alignItems","justifyContent","width","height"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View, Image, Button, Platform } from \"react-native\";\nimport ImagePicker from \"react-native-image-picker\";\n\nimport { launchImageLibrary } from \"react-native-image-picker\";\n\nconst SERVER_URL = \"http://localhost:3000\";\n\nconst createFormData = (photo, body = {}) => {\n  const data = new FormData();\n\n  data.append(\"photo\", {\n    name: photo.fileName,\n    type: photo.type,\n    uri: Platform.OS === \"ios\" ? photo.uri.replace(\"file://\", \"\") : photo.uri,\n  });\n\n  Object.keys(body).forEach(key => {\n    data.append(key, body[key]);\n  });\n\n  return data;\n};\n\nconst Multer = () => {\n  const [photo, setPhoto] = React.useState(null);\n\n  const handleChoosePhoto = () => {\n    ImagePicker.launchImageLibrary({ noData: true }, response => {\n      // console.log(response);\n      if (response) {\n        setPhoto(response);\n      }\n    });\n  };\n\n  const handleUploadPhoto = () => {\n    fetch(`${SERVER_URL}/api/upload`, {\n      method: \"POST\",\n      body: createFormData(photo, { userId: \"123\" }),\n    })\n      .then(response => response.json())\n      .then(response => {\n        console.log(\"response\", response);\n      })\n      .catch(error => {\n        console.log(\"error\", error);\n      });\n  };\n\n  return (\n    <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n      {photo && (\n        <>\n          <Image\n            source={{ uri: photo.uri }}\n            style={{ width: 300, height: 300 }}\n          />\n          <Button title=\"Upload Photo\" onPress={handleUploadPhoto} />\n        </>\n      )}\n      <Button title=\"Choose Photo\" onPress={handleChoosePhoto} />\n    </View>\n  );\n};\n\nexport default Multer;\n"]},"metadata":{},"sourceType":"module"}