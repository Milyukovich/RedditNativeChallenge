{"ast":null,"code":"var _jsxFileName = \"/home/artur/elbrus/phase-3/\\u041F\\u0420\\u041E\\u0415\\u041A\\u0422\\u0412\\u0415\\u041A\\u0410/copy 2/RedditNativeChallenge/client/src/components/PostList/PostList.js\";\nimport React, { useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Item from \"../Item/Item\";\nimport { getContent } from \"../../redux/actions/content\";\nimport styles from \"./style\";\nexport default function PostList() {\n  var _this = this;\n\n  var navigation = useNavigation();\n  var posts = useSelector(function (state) {\n    return state.content.content;\n  });\n  var loader = useSelector(function (state) {\n    return state.content.loader;\n  });\n  var dispatch = useDispatch();\n  var status = useSelector(function (state) {\n    return state.user.statusSearch;\n  });\n\n  if (status.likes) {\n    posts.sort(function (a, b) {\n      return b.likes.length - a.likes.length;\n    });\n  }\n\n  if (status.comments) {\n    posts.sort(function (a, b) {\n      return b.comments.length - a.comments.length;\n    });\n  }\n\n  if (status.old) {\n    posts.sort(function (a, b) {\n      return a.dateNumber - b.dateNumber;\n    });\n  }\n\n  useEffect(function () {\n    dispatch(getContent());\n  }, []);\n  return React.createElement(React.Fragment, null, loader ? React.createElement(Text, {\n    style: {\n      color: \"#f9fafb\",\n      fontSize: 17\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"LOADING ...\") : posts.length ? React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#f9fafb\",\n      fontSize: 17\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"Last posts:\"), React.createElement(FlatList, {\n    style: {\n      height: \"80ex\"\n    },\n    data: posts,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate(\"OnePostPage\", {\n            el: item\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      }, React.createElement(Item, {\n        el: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }));\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  })) : React.createElement(React.Fragment, null));\n}","map":{"version":3,"sources":["/home/artur/elbrus/phase-3/ПРОЕКТВЕКА/copy 2/RedditNativeChallenge/client/src/components/PostList/PostList.js"],"names":["React","useEffect","useSelector","useDispatch","useNavigation","Item","getContent","styles","PostList","navigation","posts","state","content","loader","dispatch","status","user","statusSearch","likes","sort","a","b","length","comments","old","dateNumber","color","fontSize","container","height","item","navigate","el","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,OAAOC,IAAP;AACA,SAASC,UAAT;AACA,OAAOC,MAAP;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,MAAMC,UAAU,GAAGL,aAAa,EAAhC;AAEA,MAAMM,KAAK,GAAGR,WAAW,CAAC,UAAAS,KAAK;AAAA,WAAIA,KAAK,CAACC,OAAN,CAAcA,OAAlB;AAAA,GAAN,CAAzB;AACA,MAAMC,MAAM,GAAGX,WAAW,CAAC,UAAAS,KAAK;AAAA,WAAIA,KAAK,CAACC,OAAN,CAAcC,MAAlB;AAAA,GAAN,CAA1B;AACA,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEA,MAAMY,MAAM,GAAGb,WAAW,CAAC,UAAAS,KAAK;AAAA,WAAIA,KAAK,CAACK,IAAN,CAAWC,YAAf;AAAA,GAAN,CAA1B;;AAEA,MAAIF,MAAM,CAACG,KAAX,EAAkB;AAChBR,IAAAA,KAAK,CAACS,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAAUA,CAAC,CAACH,KAAF,CAAQI,MAAR,GAAiBF,CAAC,CAACF,KAAF,CAAQI,MAAnC;AAAA,KAAX;AACD;;AACD,MAAIP,MAAM,CAACQ,QAAX,EAAqB;AACnBb,IAAAA,KAAK,CAACS,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAAUA,CAAC,CAACE,QAAF,CAAWD,MAAX,GAAoBF,CAAC,CAACG,QAAF,CAAWD,MAAzC;AAAA,KAAX;AACD;;AACD,MAAIP,MAAM,CAACS,GAAX,EAAgB;AACdd,IAAAA,KAAK,CAACS,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAAUD,CAAC,CAACK,UAAF,GAAeJ,CAAC,CAACI,UAA3B;AAAA,KAAX;AACD;;AAEDxB,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,QAAQ,CAACR,UAAU,EAAX,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,0CACGO,MAAM,GACL,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEa,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,QAAQ,EAAE;AAA9B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADK,GAEHjB,KAAK,CAACY,MAAN,GACF,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEf,MAAM,CAACqB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEF,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,QAAQ,EAAE;AAA9B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAGE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAE;AAAV,KADT;AAEE,IAAA,IAAI,EAAEnB,KAFR;AAGE,IAAA,UAAU,EAAE;AAAA,UAAGoB,IAAH,QAAGA,IAAH;AAAA,aACV,oBAAC,gBAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACbrB,UAAAA,UAAU,CAACsB,QAAX,CAAoB,aAApB,EAAmC;AACjCC,YAAAA,EAAE,EAAEF;AAD6B,WAAnC;AAGD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAEA,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADU;AAAA,KAHd;AAcE,IAAA,YAAY,EAAE,sBAAAA,IAAI;AAAA,aAAIA,IAAI,CAACG,EAAT;AAAA,KAdpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADE,GAsBF,yCAzBJ,CADF;AA8BD","sourcesContent":["import React, { useEffect } from \"react\";\nimport { View, Text, TouchableOpacity, FlatList } from \"react-native\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nimport Item from \"../Item/Item\";\nimport { getContent } from \"../../redux/actions/content\";\nimport styles from \"./style\";\n\nexport default function PostList() {\n  const navigation = useNavigation();\n\n  const posts = useSelector(state => state.content.content);\n  const loader = useSelector(state => state.content.loader);\n  const dispatch = useDispatch();\n\n  const status = useSelector(state => state.user.statusSearch);\n\n  if (status.likes) {\n    posts.sort((a, b) => b.likes.length - a.likes.length);\n  }\n  if (status.comments) {\n    posts.sort((a, b) => b.comments.length - a.comments.length);\n  }\n  if (status.old) {\n    posts.sort((a, b) => a.dateNumber - b.dateNumber);\n  }\n\n  useEffect(() => {\n    dispatch(getContent());\n  }, []);\n\n  return (\n    <>\n      {loader ? (\n        <Text style={{ color: \"#f9fafb\", fontSize: 17 }}>LOADING ...</Text>\n      ) : posts.length ? (\n        <View style={styles.container}>\n          <Text style={{ color: \"#f9fafb\", fontSize: 17 }}>Last posts:</Text>\n\n          <FlatList\n            style={{ height: \"80ex\" }}\n            data={posts}\n            renderItem={({ item }) => (\n              <TouchableOpacity\n                onPress={() => {\n                  navigation.navigate(\"OnePostPage\", {\n                    el: item,\n                  });\n                }}\n              >\n                <Item el={item} />\n              </TouchableOpacity>\n            )}\n            keyExtractor={item => item.id}\n          />\n        </View>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}