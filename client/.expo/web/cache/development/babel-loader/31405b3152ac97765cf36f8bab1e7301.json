{"ast":null,"code":"var _jsxFileName = \"/home/artur/elbrus/phase-3/RedditNativeChallenge/client/src/components/Item.js\";\nimport React, { useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Card, ListItem, Button, Image } from \"react-native-elements\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { addLike, addDislike, getContent } from \"../redux/actions/content\";\nexport default function Item(_ref) {\n  var el = _ref.el;\n  var dispatch = useDispatch();\n  var userId = useSelector(function (state) {\n    return state.user.id;\n  });\n  var navigation = useNavigation();\n\n  var like = function like(userId, postId) {\n    dispatch(addLike(userId, postId));\n  };\n\n  var dislike = function dislike(userId, postId) {\n    dispatch(addDislike(userId, postId));\n  };\n\n  useEffect(function () {\n    dispatch(getContent());\n  }, [dispatch]);\n  return React.createElement(View, {\n    style: styles.div,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.header_post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.avatar,\n    source: {\n      uri: \"https://cdn.frankerfacez.com/avatar/twitch/80339713\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.header_title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.userInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"Big Floppa\")), React.createElement(Icon.TabBarItem, {\n    name: \"ellipsis-v\",\n    style: styles.edit_button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, React.createElement(Card.Title, {\n    style: styles.title1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, el.title), React.createElement(Card.Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), el.content ? React.createElement(Card.Image, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, el.content)) : React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon.Button, {\n    name: \"thumbs-up\",\n    backgroundColor: \"gray\",\n    onPress: function onPress() {\n      return like(userId, el._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, el.likes.length), React.createElement(Icon.Button, {\n    name: \"thumbs-down\",\n    backgroundColor: \"gray\",\n    onPress: function onPress() {\n      return dislike(userId, el._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, el.dislikes.length), React.createElement(Icon.Button, {\n    name: \"comments\",\n    backgroundColor: \"gray\",\n    onPress: function onPress() {\n      return navigation.navigate(\"OnePostPage\", {\n        el: el\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, el.comments.length))));\n}\nvar styles = StyleSheet.create({\n  edit_button: {\n    width: 40,\n    height: 40\n  },\n  div: {\n    width: 400,\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    borderStyle: \"solid\",\n    borderColor: \"black\",\n    borderWidth: 1\n  },\n  header_post: {\n    height: 10,\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  header_title: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  icons: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  title1: {\n    fontSize: 20\n  },\n  avatar: {\n    width: 60,\n    height: 60,\n    borderRadius: 63,\n    borderWidth: 4,\n    borderColor: \"white\",\n    marginBottom: 10\n  }\n});","map":{"version":3,"sources":["/home/artur/elbrus/phase-3/RedditNativeChallenge/client/src/components/Item.js"],"names":["React","useEffect","Card","ListItem","Button","Image","Icon","useDispatch","useSelector","useNavigation","addLike","addDislike","getContent","Item","el","dispatch","userId","state","user","id","navigation","like","postId","dislike","styles","div","header_post","avatar","uri","header_title","userInfo","edit_button","title1","title","content","marginBottom","icons","_id","likes","length","dislikes","navigate","comments","StyleSheet","create","width","height","flexDirection","justifyContent","borderStyle","borderColor","borderWidth","flex","fontSize","borderRadius"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,KAAjC,QAA8C,uBAA9C;AACA,OAAOC,IAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,UAA9B;AAEA,eAAe,SAASC,IAAT,OAAsB;AAAA,MAANC,EAAM,QAANA,EAAM;AACnC,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,MAAMS,MAAM,GAAGR,WAAW,CAAC,UAAAS,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWC,EAAf;AAAA,GAAN,CAA1B;AACA,MAAMC,UAAU,GAAGX,aAAa,EAAhC;;AAEA,MAAMY,IAAI,GAAG,SAAPA,IAAO,CAACL,MAAD,EAASM,MAAT,EAAoB;AAC/BP,IAAAA,QAAQ,CAACL,OAAO,CAACM,MAAD,EAASM,MAAT,CAAR,CAAR;AACD,GAFD;;AAGA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACP,MAAD,EAASM,MAAT,EAAoB;AAClCP,IAAAA,QAAQ,CAACJ,UAAU,CAACK,MAAD,EAASM,MAAT,CAAX,CAAR;AACD,GAFD;;AAMArB,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,QAAQ,CAACH,UAAU,EAAX,CAAR;AACD,GAFQ,EAEN,CAACG,QAAD,CAFM,CAAT;AAIA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAES,MAAM,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEF,MAAM,CAACG,MADhB;AAEE,IAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,EAAE;AADC,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAPF,EAUE,oBAAC,IAAD,CAAM,UAAN;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,KAAK,EAAEN,MAAM,CAACO,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,EAgBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,KAAK,EAAEP,MAAM,CAACQ,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmClB,EAAE,CAACmB,KAAtC,CADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAIGnB,EAAE,CAACoB,OAAH,GACC,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCrB,EAAE,CAACoB,OAAvC,CADF,CADD,GAKC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAYE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACY,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,eAAe,EAAC,MAFlB;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMf,IAAI,CAACL,MAAD,EAASF,EAAE,CAACuB,GAAZ,CAAV;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGvB,EAAE,CAACwB,KAAH,CAASC,MALZ,CADF,EAQE,oBAAC,IAAD,CAAM,MAAN;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,eAAe,EAAC,MAFlB;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMhB,OAAO,CAACP,MAAD,EAASF,EAAE,CAACuB,GAAZ,CAAb;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGvB,EAAE,CAAC0B,QAAH,CAAYD,MALf,CARF,EAeE,oBAAC,IAAD,CAAM,MAAN;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,eAAe,EAAC,MAFlB;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMnB,UAAU,CAACqB,QAAX,CAAoB,aAApB,EAAmC;AAAE3B,QAAAA,EAAE,EAAFA;AAAF,OAAnC,CAAN;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGA,EAAE,CAAC4B,QAAH,CAAYH,MALf,CAfF,CAZF,CAhBF,CADF;AAuDD;AAED,IAAMf,MAAM,GAAGmB,UAAU,CAACC,MAAX,CAAkB;AAC/Bb,EAAAA,WAAW,EAAE;AACXc,IAAAA,KAAK,EAAE,EADI;AAEXC,IAAAA,MAAM,EAAE;AAFG,GADkB;AAK/BrB,EAAAA,GAAG,EAAE;AACHoB,IAAAA,KAAK,EAAE,GADJ;AAEHE,IAAAA,aAAa,EAAE,QAFZ;AAGHC,IAAAA,cAAc,EAAE,cAHb;AAIHC,IAAAA,WAAW,EAAE,OAJV;AAKHC,IAAAA,WAAW,EAAE,OALV;AAMHC,IAAAA,WAAW,EAAE;AANV,GAL0B;AAa/BzB,EAAAA,WAAW,EAAE;AACXoB,IAAAA,MAAM,EAAE,EADG;AAEXM,IAAAA,IAAI,EAAE,CAFK;AAGXL,IAAAA,aAAa,EAAE,KAHJ;AAIXC,IAAAA,cAAc,EAAE;AAJL,GAbkB;AAmB/BnB,EAAAA,YAAY,EAAE;AACZuB,IAAAA,IAAI,EAAE,CADM;AAEZJ,IAAAA,cAAc,EAAE;AAFJ,GAnBiB;AAuB/BZ,EAAAA,KAAK,EAAE;AACLgB,IAAAA,IAAI,EAAE,CADD;AAELL,IAAAA,aAAa,EAAE,KAFV;AAGLC,IAAAA,cAAc,EAAE;AAHX,GAvBwB;AA4B/BhB,EAAAA,MAAM,EAAE;AACNqB,IAAAA,QAAQ,EAAE;AADJ,GA5BuB;AA+B/B1B,EAAAA,MAAM,EAAE;AACNkB,IAAAA,KAAK,EAAE,EADD;AAENC,IAAAA,MAAM,EAAE,EAFF;AAGNQ,IAAAA,YAAY,EAAE,EAHR;AAINH,IAAAA,WAAW,EAAE,CAJP;AAKND,IAAAA,WAAW,EAAE,OALP;AAMNf,IAAAA,YAAY,EAAE;AANR;AA/BuB,CAAlB,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { StyleSheet, View, TextInput, Text } from \"react-native\";\nimport { Card, ListItem, Button, Image } from \"react-native-elements\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nimport { addLike, addDislike, getContent } from \"../redux/actions/content\";\n\nexport default function Item({ el }) {\n  const dispatch = useDispatch();\n  const userId = useSelector(state => state.user.id);\n  const navigation = useNavigation();\n\n  const like = (userId, postId) => {\n    dispatch(addLike(userId, postId));\n  };\n  const dislike = (userId, postId) => {\n    dispatch(addDislike(userId, postId));\n  };\n\n  // const posts = useSelector(state => state.content);\n\n  useEffect(() => {\n    dispatch(getContent());\n  }, [dispatch]);\n\n  return (\n    <View style={styles.div}>\n      <View style={styles.header_post}>\n        <Image\n          style={styles.avatar}\n          source={{\n            uri: \"https://cdn.frankerfacez.com/avatar/twitch/80339713\",\n          }}\n        />\n        <View style={styles.header_title}>\n          <Text style={styles.userInfo}>Big Floppa</Text>\n        </View>\n        <Icon.TabBarItem\n          name=\"ellipsis-v\"\n          style={styles.edit_button}\n        ></Icon.TabBarItem>\n      </View>\n      <Card>\n        <Card.Title style={styles.title1}>{el.title}</Card.Title>\n        <Card.Divider />\n\n        {el.content ? (\n          <Card.Image>\n            <Text style={{ marginBottom: 10 }}>{el.content}</Text>\n          </Card.Image>\n        ) : (\n          <View></View>\n        )}\n\n        <View style={styles.icons}>\n          <Icon.Button\n            name=\"thumbs-up\"\n            backgroundColor=\"gray\"\n            onPress={() => like(userId, el._id)}\n          >\n            {el.likes.length}\n          </Icon.Button>\n          <Icon.Button\n            name=\"thumbs-down\"\n            backgroundColor=\"gray\"\n            onPress={() => dislike(userId, el._id)}\n          >\n            {el.dislikes.length}\n          </Icon.Button>\n          <Icon.Button\n            name=\"comments\"\n            backgroundColor=\"gray\"\n            onPress={() => navigation.navigate(\"OnePostPage\", { el })}\n          >\n            {el.comments.length}\n          </Icon.Button>\n        </View>\n      </Card>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  edit_button: {\n    width: 40,\n    height: 40,\n  },\n  div: {\n    width: 400,\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    borderStyle: \"solid\",\n    borderColor: \"black\",\n    borderWidth: 1,\n  },\n  header_post: {\n    height: 10,\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  header_title: {\n    flex: 1,\n    justifyContent: \"center\",\n  },\n  icons: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n  title1: {\n    fontSize: 20,\n  },\n  avatar: {\n    width: 60,\n    height: 60,\n    borderRadius: 63,\n    borderWidth: 4,\n    borderColor: \"white\",\n    marginBottom: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}