{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_CONTENT_START, POST_CREATE, SET_LIKE_ADD, SET_DISLIKE_ADD, CREATE_COMMENT, CREATE_COMMENT_TO_COMMENT } from \"../types/content\";\nvar initialState = [];\n\nvar contentReducer = function contentReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n  console.log(\"REDUCER PAYLOAD\", payload);\n\n  switch (type) {\n    case GET_CONTENT_START:\n      {\n        console.log(payload);\n        return payload;\n      }\n\n    case POST_CREATE:\n      {\n        return [].concat(_toConsumableArray(state), [payload]);\n      }\n\n    case SET_LIKE_ADD:\n      {\n        return state.map(function (el) {\n          return el._id === payload._id ? payload : el;\n        });\n      }\n\n    case SET_DISLIKE_ADD:\n      {\n        return state.map(function (el) {\n          return el._id === payload._id ? payload : el;\n        });\n      }\n\n    case CREATE_COMMENT:\n      {\n        console.log(\"PAYLOAD\", payload);\n        var postId = payload.description.postId;\n        console.log(state);\n        console.log(postId);\n        return state.map(function (el) {\n          return el._id === postId ? _objectSpread(_objectSpread({}, el), {}, {\n            comments: [].concat(_toConsumableArray(el.comments), [_objectSpread({}, payload.data)])\n          }) : el;\n        });\n      }\n\n    case CREATE_COMMENT_TO_COMMENT:\n      {\n        var comment = payload.data;\n        console.log(1, comment);\n        var mainId = payload.description.mainId;\n        console.log(2, mainId);\n        return state.map(function (el) {\n          return el._id == mainId ? _objectSpread(_objectSpread({}, el), {}, {\n            comments: _toConsumableArray(el.comments.map(function (el) {\n              return el._id == payload.description.commentId ? _objectSpread(_objectSpread({}, el), {}, {\n                comments: [].concat(_toConsumableArray(el.comments), [comment])\n              }) : el;\n            }))\n          }) : el;\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default contentReducer;","map":{"version":3,"sources":["/Users/user/Documents/elbrus/phase 3/RedditNativeChallenge/client/src/redux/reduce/contentReducer.js"],"names":["GET_CONTENT_START","POST_CREATE","SET_LIKE_ADD","SET_DISLIKE_ADD","CREATE_COMMENT","CREATE_COMMENT_TO_COMMENT","initialState","contentReducer","state","action","type","payload","console","log","map","el","_id","postId","description","comments","data","comment","mainId","commentId"],"mappings":";;;;;;;AAAA,SACEA,iBADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,eAJF,EAKEC,cALF,EAMEC,yBANF;AASA,IAAMC,YAAY,GAAG,EAArB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;AACvD,MAAQC,IAAR,GAA0BD,MAA1B,CAAQC,IAAR;AAAA,MAAcC,OAAd,GAA0BF,MAA1B,CAAcE,OAAd;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,OAA/B;;AACA,UAAQD,IAAR;AACE,SAAKV,iBAAL;AAAwB;AACtBY,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,eAAOA,OAAP;AACD;;AACD,SAAKV,WAAL;AAAkB;AAChB,4CAAWO,KAAX,IAAkBG,OAAlB;AACD;;AACD,SAAKT,YAAL;AAAmB;AACjB,eAAOM,KAAK,CAACM,GAAN,CAAU,UAAAC,EAAE;AAAA,iBAAKA,EAAE,CAACC,GAAH,KAAWL,OAAO,CAACK,GAAnB,GAAyBL,OAAzB,GAAmCI,EAAxC;AAAA,SAAZ,CAAP;AACD;;AAED,SAAKZ,eAAL;AAAsB;AACpB,eAAOK,KAAK,CAACM,GAAN,CAAU,UAAAC,EAAE;AAAA,iBAAKA,EAAE,CAACC,GAAH,KAAWL,OAAO,CAACK,GAAnB,GAAyBL,OAAzB,GAAmCI,EAAxC;AAAA,SAAZ,CAAP;AACD;;AAED,SAAKX,cAAL;AAAqB;AACnBQ,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,OAAvB;AACA,YAAQM,MAAR,GAAmBN,OAAO,CAACO,WAA3B,CAAQD,MAAR;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;AACA,eAAOT,KAAK,CAACM,GAAN,CAAU,UAAAC,EAAE;AAAA,iBACjBA,EAAE,CAACC,GAAH,KAAWC,MAAX,mCACSF,EADT;AACaI,YAAAA,QAAQ,+BAAMJ,EAAE,CAACI,QAAT,sBAAwBR,OAAO,CAACS,IAAhC;AADrB,eAEIL,EAHa;AAAA,SAAZ,CAAP;AAKD;;AACD,SAAKV,yBAAL;AAAgC;AAC9B,YAAMgB,OAAO,GAAGV,OAAO,CAACS,IAAxB;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ,EAAeQ,OAAf;AACA,YAAMC,MAAM,GAAGX,OAAO,CAACO,WAAR,CAAoBI,MAAnC;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ,EAAeS,MAAf;AACA,eAAOd,KAAK,CAACM,GAAN,CAAU,UAAAC,EAAE;AAAA,iBACjBA,EAAE,CAACC,GAAH,IAAUM,MAAV,mCAEOP,EAFP;AAGII,YAAAA,QAAQ,qBACHJ,EAAE,CAACI,QAAH,CAAYL,GAAZ,CAAgB,UAAAC,EAAE;AAAA,qBACnBA,EAAE,CAACC,GAAH,IAAUL,OAAO,CAACO,WAAR,CAAoBK,SAA9B,mCAEOR,EAFP;AAGII,gBAAAA,QAAQ,+BAAMJ,EAAE,CAACI,QAAT,IAAmBE,OAAnB;AAHZ,mBAKIN,EANe;AAAA,aAAlB,CADG;AAHZ,eAcIA,EAfa;AAAA,SAAZ,CAAP;AAiBD;;AACD;AACE,aAAOP,KAAP;AAnDJ;AAqDD,CAxDD;;AAyDA,eAAeD,cAAf","sourcesContent":["import {\n  GET_CONTENT_START,\n  POST_CREATE,\n  SET_LIKE_ADD,\n  SET_DISLIKE_ADD,\n  CREATE_COMMENT,\n  CREATE_COMMENT_TO_COMMENT,\n} from \"../types/content\";\n\nconst initialState = [];\n\nconst contentReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  console.log(\"REDUCER PAYLOAD\", payload);\n  switch (type) {\n    case GET_CONTENT_START: {\n      console.log(payload);\n      return payload;\n    }\n    case POST_CREATE: {\n      return [...state, payload];\n    }\n    case SET_LIKE_ADD: {\n      return state.map(el => (el._id === payload._id ? payload : el));\n    }\n\n    case SET_DISLIKE_ADD: {\n      return state.map(el => (el._id === payload._id ? payload : el));\n    }\n\n    case CREATE_COMMENT: {\n      console.log(\"PAYLOAD\", payload);\n      const { postId } = payload.description;\n      console.log(state);\n      console.log(postId);\n      return state.map(el =>\n        el._id === postId\n          ? { ...el, comments: [...el.comments, { ...payload.data }] }\n          : el\n      );\n    }\n    case CREATE_COMMENT_TO_COMMENT: {\n      const comment = payload.data;\n      console.log(1, comment);\n      const mainId = payload.description.mainId;\n      console.log(2, mainId);\n      return state.map(el =>\n        el._id == mainId\n          ? {\n            ...el,\n            comments: [\n              ...el.comments.map(el =>\n                el._id == payload.description.commentId\n                  ? {\n                    ...el,\n                    comments: [...el.comments, comment],\n                  }\n                  : el\n              ),\n            ],\n          }\n          : el\n      );\n    }\n    default:\n      return state;\n  }\n};\nexport default contentReducer;\n"]},"metadata":{},"sourceType":"module"}