{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_CONTENT_START, POST_CREATE, SET_LIKE_ADD, SET_DISLIKE_ADD, EDIT_POST, DELETE_POST } from \"../types/content\";\nvar initialState = [];\n\nvar contentReducer = function contentReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case GET_CONTENT_START:\n      {\n        return payload;\n      }\n\n    case POST_CREATE:\n      {\n        return [].concat(_toConsumableArray(state), [payload]);\n      }\n\n    case SET_LIKE_ADD:\n      {\n        return state.map(function (el) {\n          return el._id === payload._id ? payload : el;\n        });\n      }\n\n    case SET_DISLIKE_ADD:\n      {\n        return state.map(function (el) {\n          return el._id === payload._id ? payload : el;\n        });\n      }\n\n    case EDIT_POST:\n      {\n        var newState = state.map(function (el) {\n          return el._id === payload._id ? payload : el;\n        });\n        return newState;\n      }\n\n    case DELETE_POST:\n      {\n        var id = payload.id;\n        var newPostState = state.filter(function (el) {\n          return el._id !== id;\n        });\n        return newPostState;\n      }\n\n    case CREATE_COMMENT:\n      {\n        console.log(9999, payload.description);\n        var postId = payload.description.postId;\n        console.log(1212, state.map(function (el) {\n          return el._id === postId ? _objectSpread(_objectSpread({}, el), {}, {\n            comments: [].concat(_toConsumableArray(el.comments), [_objectSpread({}, payload.data)])\n          }) : el;\n        }));\n        return state.map(function (el) {\n          return el._id === postId ? _objectSpread(_objectSpread({}, el), {}, {\n            comments: [].concat(_toConsumableArray(el.comments), [_objectSpread({}, payload.data)])\n          }) : el;\n        });\n      }\n\n    case CREATE_COMMENT_TO_COMMENT:\n      {\n        console.log(1, payload);\n        console.log(2, state);\n        return state.push(payload.data);\n      }\n\n    case SET_LIKE_TO_COMMENT:\n      {\n        console.log(\"payID\", payload);\n        return state.map(function (el) {\n          return el._id === payload._id ? payload : el;\n        });\n      }\n\n    case SET_DISLIKE_TO_COMMENT:\n      {\n        return state.map(function (el) {\n          return el._id === payload._id ? payload : el;\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default contentReducer;","map":{"version":3,"sources":["/home/artur/elbrus/phase-3/ПРОЕКТВЕКА/copy/RedditNativeChallenge/client/src/redux/reduce/contentReducer.js"],"names":["GET_CONTENT_START","POST_CREATE","SET_LIKE_ADD","SET_DISLIKE_ADD","EDIT_POST","DELETE_POST","initialState","contentReducer","state","action","type","payload","map","el","_id","newState","id","newPostState","filter","CREATE_COMMENT","console","log","description","postId","comments","data","CREATE_COMMENT_TO_COMMENT","push","SET_LIKE_TO_COMMENT","SET_DISLIKE_TO_COMMENT"],"mappings":"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","sourcesContent":["import {\n  GET_CONTENT_START,\n  POST_CREATE,\n  SET_LIKE_ADD,\n  SET_DISLIKE_ADD,\n  EDIT_POST,\n  DELETE_POST,\n} from \"../types/content\";\n\nconst initialState = [];\n\nconst contentReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  // console.log(\"REDUCER PAYLOAD\", payload);\n  switch (type) {\n    case GET_CONTENT_START: {\n      return payload;\n    }\n    case POST_CREATE: {\n      return [...state, payload];\n    }\n    case SET_LIKE_ADD: {\n      return state.map(el => (el._id === payload._id ? payload : el));\n    }\n\n    case SET_DISLIKE_ADD: {\n      return state.map(el => (el._id === payload._id ? payload : el));\n    }\n\n    case EDIT_POST: {\n      const newState = state.map(el => (el._id === payload._id ? payload : el));\n      return newState;\n    }\n\n    case DELETE_POST: {\n      const { id } = payload;\n      const newPostState = state.filter(el => el._id !== id);\n      return newPostState;\n    }\n\n    case CREATE_COMMENT: {\n      console.log(9999, payload.description);\n      const { postId } = payload.description;\n      console.log(\n        1212,\n        state.map(el =>\n          el._id === postId\n            ? { ...el, comments: [...el.comments, { ...payload.data }] }\n            : el\n        )\n      );\n      return state.map(el =>\n        el._id === postId\n          ? { ...el, comments: [...el.comments, { ...payload.data }] }\n          : el\n      );\n    }\n    case CREATE_COMMENT_TO_COMMENT: {\n      console.log(1, payload);\n      // console.log(9999, payload.description.fathercomment);\n      console.log(2, state);\n      return state.push(payload.data);\n    }\n\n    case SET_LIKE_TO_COMMENT: {\n      console.log(\"payID\", payload);\n      return state.map(el => (el._id === payload._id ? payload : el));\n    }\n\n    case SET_DISLIKE_TO_COMMENT: {\n      return state.map(el => (el._id === payload._id ? payload : el));\n    }\n\n    default:\n      return state;\n  }\n};\nexport default contentReducer;\n"]},"metadata":{},"sourceType":"module"}