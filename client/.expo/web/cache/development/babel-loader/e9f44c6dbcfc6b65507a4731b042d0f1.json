{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_CONTENT_START, POST_CREATE, LIKE_ADD } from \"../types/content\";\nimport { CREATE_COMMENT } from \"../types/comment\";\n\nvar contentReducer = function contentReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case GET_CONTENT_START:\n      {\n        return payload;\n      }\n\n    case POST_CREATE:\n      {}\n\n    case LIKE_ADD:\n      {\n        return [].concat(_toConsumableArray(state), [payload]);\n      }\n\n    case CREATE_COMMENT:\n      {\n        var text = payload.text,\n            autorId = payload.autorId,\n            postId = payload.postId;\n        return state.map(function (el) {\n          return el._id == postId ? _objectSpread(_objectSpread({}, el), {}, {\n            comments: [].concat(_toConsumableArray(el.comments), [{\n              text: text,\n              autor: autorId\n            }])\n          }) : el;\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default contentReducer;","map":{"version":3,"sources":["/Users/user/elbrus/PHASE 3/RedditNativeChallenge/client/src/redux/reduce/contentReducer.js"],"names":["GET_CONTENT_START","POST_CREATE","LIKE_ADD","CREATE_COMMENT","contentReducer","state","action","type","payload","text","autorId","postId","map","el","_id","comments","autor"],"mappings":";;;;;;;AAAA,SAASA,iBAAT,EAA4BC,WAA5B,EAAyCC,QAAzC;AACA,SAASC,cAAT;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;AAC7C,MAAQC,IAAR,GAA0BD,MAA1B,CAAQC,IAAR;AAAA,MAAcC,OAAd,GAA0BF,MAA1B,CAAcE,OAAd;;AAEA,UAAQD,IAAR;AACE,SAAKP,iBAAL;AAAwB;AACtB,eAAOQ,OAAP;AACD;;AACD,SAAKP,WAAL;AAAkB,OAGjB;;AACD,SAAKC,QAAL;AAAe;AACb,4CAAWG,KAAX,IAAkBG,OAAlB;AACD;;AACD,SAAKL,cAAL;AAAqB;AACnB,YAAQM,IAAR,GAAkCD,OAAlC,CAAQC,IAAR;AAAA,YAAcC,OAAd,GAAkCF,OAAlC,CAAcE,OAAd;AAAA,YAAuBC,MAAvB,GAAkCH,OAAlC,CAAuBG,MAAvB;AACA,eAAON,KAAK,CAACO,GAAN,CAAU,UAAAC,EAAE;AAAA,iBACjBA,EAAE,CAACC,GAAH,IAAUH,MAAV,mCACSE,EADT;AACaE,YAAAA,QAAQ,+BAAMF,EAAE,CAACE,QAAT,IAAmB;AAAEN,cAAAA,IAAI,EAAJA,IAAF;AAAQO,cAAAA,KAAK,EAAEN;AAAf,aAAnB;AADrB,eAEIG,EAHa;AAAA,SAAZ,CAAP;AAKD;;AACD;AACE,aAAOR,KAAP;AApBJ;AAsBD,CAzBD;;AA0BA,eAAeD,cAAf","sourcesContent":["import { GET_CONTENT_START, POST_CREATE, LIKE_ADD } from \"../types/content\";\nimport { CREATE_COMMENT } from \"../types/comment\";\n\nconst contentReducer = (state = [], action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_CONTENT_START: {\n      return payload;\n    }\n    case POST_CREATE: {\n      // return [...state, payload];\n      \n    }\n    case LIKE_ADD: {\n      return [...state, payload]\n    }\n    case CREATE_COMMENT: {\n      const { text, autorId, postId } = payload;\n      return state.map(el =>\n        el._id == postId\n          ? { ...el, comments: [...el.comments, { text, autor: autorId }] }\n          : el\n      );\n    }\n    default:\n      return state;\n  }\n};\nexport default contentReducer;\n"]},"metadata":{},"sourceType":"module"}