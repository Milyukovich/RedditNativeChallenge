{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/artur/elbrus/phase-3/RedditNativeChallenge/client/src/components/Forms/SignUp/SignUp.js\";\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { signUp } from \"../../../redux/actions/user.ac\";\n\nvar SignUp = function SignUp() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var history = useHistory();\n  var dispatch = useDispatch();\n\n  var handleClick = function handleClick() {\n    var userInfo = {\n      userName: userName,\n      email: email,\n      password: password\n    };\n\n    if (userInfo.userName && userInfo.email && userInfo.password) {\n      console.log(222);\n      dispatch(signUp(userInfo));\n      setUserName(\"\");\n      setEmail(\"\");\n      setPassword(\"\");\n    }\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      height: 40\n    },\n    placeholder: \"Enter username...\",\n    onChangeText: function onChangeText(userName) {\n      return setUserName(userName);\n    },\n    defaultValue: userName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      height: 40\n    },\n    placeholder: \"Enter email...\",\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    defaultValue: email,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      height: 40\n    },\n    placeholder: \"Enter password...\",\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    defaultValue: password,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: handleClick,\n    title: \"SignUp\",\n    color: \"#841584\",\n    accessibilityLabel: \"Learn more about this purple button\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/home/artur/elbrus/phase-3/RedditNativeChallenge/client/src/components/Forms/SignUp/SignUp.js"],"names":["React","useState","useDispatch","useHistory","signUp","SignUp","userName","setUserName","email","setEmail","password","setPassword","history","dispatch","handleClick","userInfo","console","log","height"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;AAUA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,MAAT;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAOnB,kBAAgCJ,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOK,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA0BN,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOO,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCR,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOS,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAIC,OAAO,GAAGT,UAAU,EAAxB;AAEA,MAAMU,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,MAAMY,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAMC,QAAQ,GAAG;AACfT,MAAAA,QAAQ,EAARA,QADe;AAEfE,MAAAA,KAAK,EAALA,KAFe;AAGfE,MAAAA,QAAQ,EAARA;AAHe,KAAjB;;AAOA,QAAIK,QAAQ,CAACT,QAAT,IAAqBS,QAAQ,CAACP,KAA9B,IAAuCO,QAAQ,CAACL,QAApD,EAA8D;AAC5DM,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAJ,MAAAA,QAAQ,CAACT,MAAM,CAACW,QAAD,CAAP,CAAR;AACAR,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD;AACF,GAfD;;AAiBA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE;AAAEO,MAAAA,MAAM,EAAE;AAAV,KADT;AAEE,IAAA,WAAW,EAAC,mBAFd;AAGE,IAAA,YAAY,EAAE,sBAAAZ,QAAQ;AAAA,aAAIC,WAAW,CAACD,QAAD,CAAf;AAAA,KAHxB;AAIE,IAAA,YAAY,EAAEA,QAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE;AAAEY,MAAAA,MAAM,EAAE;AAAV,KADT;AAEE,IAAA,WAAW,EAAC,gBAFd;AAGE,IAAA,YAAY,EAAE,sBAAAV,KAAK;AAAA,aAAIC,QAAQ,CAACD,KAAD,CAAZ;AAAA,KAHrB;AAIE,IAAA,YAAY,EAAEA,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAaE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE;AAAEU,MAAAA,MAAM,EAAE;AAAV,KADT;AAEE,IAAA,WAAW,EAAC,mBAFd;AAGE,IAAA,YAAY,EAAE,sBAAAR,QAAQ;AAAA,aAAIC,WAAW,CAACD,QAAD,CAAf;AAAA,KAHxB;AAIE,IAAA,YAAY,EAAEA,QAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAoBE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEI,WADX;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,kBAAkB,EAAC,qCAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CADF;AA6BD,CA7DD;;AA+DA,eAAeT,MAAf","sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  Button,\n  View,\n  SafeAreaView,\n  Text,\n  Alert,\n  TextInput,\n} from \"react-native\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { signUp } from \"../../../redux/actions/user.ac\";\n\nconst SignUp = () => {\n  // const [userSignUp, setUserSignUp] = useState({\n  //   email: \"\",\n  //   password: \"\",\n  //   userName: \"\",\n  // });\n\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  let history = useHistory();\n\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    const userInfo = {\n      userName,\n      email,\n      password,\n    };\n    // console.log(userInfo);\n\n    if (userInfo.userName && userInfo.email && userInfo.password) {\n      console.log(222);\n      dispatch(signUp(userInfo));\n      setUserName(\"\");\n      setEmail(\"\");\n      setPassword(\"\");\n    }\n  };\n\n  return (\n    <View>\n      <TextInput\n        style={{ height: 40 }}\n        placeholder=\"Enter username...\"\n        onChangeText={userName => setUserName(userName)}\n        defaultValue={userName}\n      />\n      <TextInput\n        style={{ height: 40 }}\n        placeholder=\"Enter email...\"\n        onChangeText={email => setEmail(email)}\n        defaultValue={email}\n      />\n      <TextInput\n        style={{ height: 40 }}\n        placeholder=\"Enter password...\"\n        onChangeText={password => setPassword(password)}\n        defaultValue={password}\n      />\n\n      <Button\n        onPress={handleClick}\n        title=\"SignUp\"\n        color=\"#841584\"\n        accessibilityLabel=\"Learn more about this purple button\"\n      />\n    </View>\n  );\n};\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}